/*       */ package com.google.protobuf;public final class DescriptorProtos { private static final Descriptors.Descriptor internal_static_google_protobuf_FileDescriptorSet_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_FileDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_DescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_DescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_ExtensionRangeOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_FieldDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_OneofDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_EnumDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_EnumValueDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_ServiceDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_MethodDescriptorProto_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_FileOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FileOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_MessageOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_MessageOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_FieldOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FieldOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_OneofOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_OneofOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_EnumOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_EnumValueOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_ServiceOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_ServiceOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_MethodOptions_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_MethodOptions_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_UninterpretedOption_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor; private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable; private static final Descriptors.Descriptor internal_static_google_protobuf_SourceCodeInfo_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_google_protobuf_SourceCodeInfo_Location_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_google_protobuf_GeneratedCodeInfo_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable;
/*       */   private static final Descriptors.Descriptor internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor;
/*       */   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable;
/*       */   private static Descriptors.FileDescriptor descriptor;
/*       */   
/*       */   public static void registerAllExtensions(ExtensionRegistryLite registry) {}
/*       */   
/*       */   public static void registerAllExtensions(ExtensionRegistry registry) {
/*    14 */     registerAllExtensions(registry);
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FileDescriptorSetOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<DescriptorProtos.FileDescriptorProto> getFileList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FileDescriptorProto getFile(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getFileCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.FileDescriptorProtoOrBuilder> getFileOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FileDescriptorProtoOrBuilder getFileOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class FileDescriptorSet
/*       */     extends GeneratedMessageV3
/*       */     implements FileDescriptorSetOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     public static final int FILE_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.FileDescriptorProto> file_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private FileDescriptorSet(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*    60 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*   176 */       this.memoizedIsInitialized = -1; } private FileDescriptorSet() { this.memoizedIsInitialized = -1; this.file_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FileDescriptorSet(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FileDescriptorSet(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: if ((mutable_bitField0_ & 0x1) == 0) { this.file_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.file_.add(input.readMessage(DescriptorProtos.FileDescriptorProto.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.file_ = Collections.unmodifiableList(this.file_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)FileDescriptorSet.class, (Class)Builder.class); } public List<DescriptorProtos.FileDescriptorProto> getFileList() { return this.file_; } public List<? extends DescriptorProtos.FileDescriptorProtoOrBuilder> getFileOrBuilderList() { return (List)this.file_; } public int getFileCount() { return this.file_.size(); }
/*       */     public DescriptorProtos.FileDescriptorProto getFile(int index) { return this.file_.get(index); }
/*       */     public DescriptorProtos.FileDescriptorProtoOrBuilder getFileOrBuilder(int index) { return this.file_.get(index); }
/*   179 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*   180 */       if (isInitialized == 1) return true; 
/*   181 */       if (isInitialized == 0) return false;
/*       */       
/*   183 */       for (int i = 0; i < getFileCount(); i++) {
/*   184 */         if (!getFile(i).isInitialized()) {
/*   185 */           this.memoizedIsInitialized = 0;
/*   186 */           return false;
/*       */         } 
/*       */       } 
/*   189 */       this.memoizedIsInitialized = 1;
/*   190 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*   196 */       for (int i = 0; i < this.file_.size(); i++) {
/*   197 */         output.writeMessage(1, this.file_.get(i));
/*       */       }
/*   199 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*   204 */       int size = this.memoizedSize;
/*   205 */       if (size != -1) return size;
/*       */       
/*   207 */       size = 0;
/*   208 */       for (int i = 0; i < this.file_.size(); i++) {
/*   209 */         size += 
/*   210 */           CodedOutputStream.computeMessageSize(1, this.file_.get(i));
/*       */       }
/*   212 */       size += this.unknownFields.getSerializedSize();
/*   213 */       this.memoizedSize = size;
/*   214 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*   219 */       if (obj == this) {
/*   220 */         return true;
/*       */       }
/*   222 */       if (!(obj instanceof FileDescriptorSet)) {
/*   223 */         return super.equals(obj);
/*       */       }
/*   225 */       FileDescriptorSet other = (FileDescriptorSet)obj;
/*       */ 
/*       */       
/*   228 */       if (!getFileList().equals(other.getFileList())) return false; 
/*   229 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*   230 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*   235 */       if (this.memoizedHashCode != 0) {
/*   236 */         return this.memoizedHashCode;
/*       */       }
/*   238 */       int hash = 41;
/*   239 */       hash = 19 * hash + getDescriptor().hashCode();
/*   240 */       if (getFileCount() > 0) {
/*   241 */         hash = 37 * hash + 1;
/*   242 */         hash = 53 * hash + getFileList().hashCode();
/*       */       } 
/*   244 */       hash = 29 * hash + this.unknownFields.hashCode();
/*   245 */       this.memoizedHashCode = hash;
/*   246 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*   252 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*   258 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*   263 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*   269 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileDescriptorSet parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*   273 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*   279 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileDescriptorSet parseFrom(InputStream input) throws IOException {
/*   283 */       return 
/*   284 */         GeneratedMessageV3.<FileDescriptorSet>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*   290 */       return 
/*   291 */         GeneratedMessageV3.<FileDescriptorSet>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileDescriptorSet parseDelimitedFrom(InputStream input) throws IOException {
/*   295 */       return 
/*   296 */         GeneratedMessageV3.<FileDescriptorSet>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*   302 */       return 
/*   303 */         GeneratedMessageV3.<FileDescriptorSet>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(CodedInputStream input) throws IOException {
/*   308 */       return 
/*   309 */         GeneratedMessageV3.<FileDescriptorSet>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*   315 */       return 
/*   316 */         GeneratedMessageV3.<FileDescriptorSet>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*   320 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*   322 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FileDescriptorSet prototype) {
/*   325 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*   329 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*   330 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*   336 */       Builder builder = new Builder(parent);
/*   337 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DescriptorProtos.FileDescriptorSetOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private List<DescriptorProtos.FileDescriptorProto> file_;
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.FileDescriptorProto, DescriptorProtos.FileDescriptorProto.Builder, DescriptorProtos.FileDescriptorProtoOrBuilder> fileBuilder_;
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*   353 */         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*   359 */         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable
/*   360 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.FileDescriptorSet.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*   534 */         this
/*   535 */           .file_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.file_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getFileFieldBuilder();  } public Builder clear() { super.clear(); if (this.fileBuilder_ == null) { this.file_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.fileBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_descriptor; } public DescriptorProtos.FileDescriptorSet getDefaultInstanceForType() { return DescriptorProtos.FileDescriptorSet.getDefaultInstance(); } public DescriptorProtos.FileDescriptorSet build() { DescriptorProtos.FileDescriptorSet result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.FileDescriptorSet buildPartial() { DescriptorProtos.FileDescriptorSet result = new DescriptorProtos.FileDescriptorSet(this); int from_bitField0_ = this.bitField0_; if (this.fileBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.file_ = Collections.unmodifiableList(this.file_); this.bitField0_ &= 0xFFFFFFFE; }  result.file_ = this.file_; } else { result.file_ = this.fileBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.FileDescriptorSet) return mergeFrom((DescriptorProtos.FileDescriptorSet)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.FileDescriptorSet other) { if (other == DescriptorProtos.FileDescriptorSet.getDefaultInstance()) return this;  if (this.fileBuilder_ == null) { if (!other.file_.isEmpty()) { if (this.file_.isEmpty()) { this.file_ = other.file_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureFileIsMutable(); this.file_.addAll(other.file_); }  onChanged(); }  } else if (!other.file_.isEmpty()) { if (this.fileBuilder_.isEmpty()) { this.fileBuilder_.dispose(); this.fileBuilder_ = null; this.file_ = other.file_; this.bitField0_ &= 0xFFFFFFFE; this.fileBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getFileFieldBuilder() : null; } else { this.fileBuilder_.addAllMessages(other.file_); }  }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getFileCount(); i++) { if (!getFile(i).isInitialized()) return false;  }  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.FileDescriptorSet parsedMessage = null; try { parsedMessage = DescriptorProtos.FileDescriptorSet.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.FileDescriptorSet)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/*   537 */       private void ensureFileIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/*   538 */           this.file_ = new ArrayList<>(this.file_);
/*   539 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.FileDescriptorProto> getFileList() {
/*   550 */         if (this.fileBuilder_ == null) {
/*   551 */           return Collections.unmodifiableList(this.file_);
/*       */         }
/*   553 */         return this.fileBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getFileCount() {
/*   560 */         if (this.fileBuilder_ == null) {
/*   561 */           return this.file_.size();
/*       */         }
/*   563 */         return this.fileBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.FileDescriptorProto getFile(int index) {
/*   570 */         if (this.fileBuilder_ == null) {
/*   571 */           return this.file_.get(index);
/*       */         }
/*   573 */         return this.fileBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFile(int index, DescriptorProtos.FileDescriptorProto value) {
/*   581 */         if (this.fileBuilder_ == null) {
/*   582 */           if (value == null) {
/*   583 */             throw new NullPointerException();
/*       */           }
/*   585 */           ensureFileIsMutable();
/*   586 */           this.file_.set(index, value);
/*   587 */           onChanged();
/*       */         } else {
/*   589 */           this.fileBuilder_.setMessage(index, value);
/*       */         } 
/*   591 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setFile(int index, DescriptorProtos.FileDescriptorProto.Builder builderForValue) {
/*   598 */         if (this.fileBuilder_ == null) {
/*   599 */           ensureFileIsMutable();
/*   600 */           this.file_.set(index, builderForValue.build());
/*   601 */           onChanged();
/*       */         } else {
/*   603 */           this.fileBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/*   605 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addFile(DescriptorProtos.FileDescriptorProto value) {
/*   611 */         if (this.fileBuilder_ == null) {
/*   612 */           if (value == null) {
/*   613 */             throw new NullPointerException();
/*       */           }
/*   615 */           ensureFileIsMutable();
/*   616 */           this.file_.add(value);
/*   617 */           onChanged();
/*       */         } else {
/*   619 */           this.fileBuilder_.addMessage(value);
/*       */         } 
/*   621 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addFile(int index, DescriptorProtos.FileDescriptorProto value) {
/*   628 */         if (this.fileBuilder_ == null) {
/*   629 */           if (value == null) {
/*   630 */             throw new NullPointerException();
/*       */           }
/*   632 */           ensureFileIsMutable();
/*   633 */           this.file_.add(index, value);
/*   634 */           onChanged();
/*       */         } else {
/*   636 */           this.fileBuilder_.addMessage(index, value);
/*       */         } 
/*   638 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addFile(DescriptorProtos.FileDescriptorProto.Builder builderForValue) {
/*   645 */         if (this.fileBuilder_ == null) {
/*   646 */           ensureFileIsMutable();
/*   647 */           this.file_.add(builderForValue.build());
/*   648 */           onChanged();
/*       */         } else {
/*   650 */           this.fileBuilder_.addMessage(builderForValue.build());
/*       */         } 
/*   652 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addFile(int index, DescriptorProtos.FileDescriptorProto.Builder builderForValue) {
/*   659 */         if (this.fileBuilder_ == null) {
/*   660 */           ensureFileIsMutable();
/*   661 */           this.file_.add(index, builderForValue.build());
/*   662 */           onChanged();
/*       */         } else {
/*   664 */           this.fileBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/*   666 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllFile(Iterable<? extends DescriptorProtos.FileDescriptorProto> values) {
/*   673 */         if (this.fileBuilder_ == null) {
/*   674 */           ensureFileIsMutable();
/*   675 */           AbstractMessageLite.Builder.addAll(values, this.file_);
/*       */           
/*   677 */           onChanged();
/*       */         } else {
/*   679 */           this.fileBuilder_.addAllMessages(values);
/*       */         } 
/*   681 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearFile() {
/*   687 */         if (this.fileBuilder_ == null) {
/*   688 */           this.file_ = Collections.emptyList();
/*   689 */           this.bitField0_ &= 0xFFFFFFFE;
/*   690 */           onChanged();
/*       */         } else {
/*   692 */           this.fileBuilder_.clear();
/*       */         } 
/*   694 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeFile(int index) {
/*   700 */         if (this.fileBuilder_ == null) {
/*   701 */           ensureFileIsMutable();
/*   702 */           this.file_.remove(index);
/*   703 */           onChanged();
/*       */         } else {
/*   705 */           this.fileBuilder_.remove(index);
/*       */         } 
/*   707 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.FileDescriptorProto.Builder getFileBuilder(int index) {
/*   714 */         return getFileFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.FileDescriptorProtoOrBuilder getFileOrBuilder(int index) {
/*   721 */         if (this.fileBuilder_ == null)
/*   722 */           return this.file_.get(index); 
/*   723 */         return this.fileBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DescriptorProtos.FileDescriptorProtoOrBuilder> getFileOrBuilderList() {
/*   731 */         if (this.fileBuilder_ != null) {
/*   732 */           return this.fileBuilder_.getMessageOrBuilderList();
/*       */         }
/*   734 */         return Collections.unmodifiableList((List)this.file_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.FileDescriptorProto.Builder addFileBuilder() {
/*   741 */         return getFileFieldBuilder().addBuilder(
/*   742 */             DescriptorProtos.FileDescriptorProto.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.FileDescriptorProto.Builder addFileBuilder(int index) {
/*   749 */         return getFileFieldBuilder().addBuilder(index, 
/*   750 */             DescriptorProtos.FileDescriptorProto.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.FileDescriptorProto.Builder> getFileBuilderList() {
/*   757 */         return getFileFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.FileDescriptorProto, DescriptorProtos.FileDescriptorProto.Builder, DescriptorProtos.FileDescriptorProtoOrBuilder> getFileFieldBuilder() {
/*   762 */         if (this.fileBuilder_ == null) {
/*   763 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/*   768 */             .fileBuilder_ = new RepeatedFieldBuilderV3<>(this.file_, ((this.bitField0_ & 0x1) != 0), getParentForChildren(), isClean());
/*   769 */           this.file_ = null;
/*       */         } 
/*   771 */         return this.fileBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*   776 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*   782 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*   792 */     private static final FileDescriptorSet DEFAULT_INSTANCE = new FileDescriptorSet();
/*       */ 
/*       */     
/*       */     public static FileDescriptorSet getDefaultInstance() {
/*   796 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/*   800 */     public static final Parser<FileDescriptorSet> PARSER = new AbstractParser<FileDescriptorSet>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.FileDescriptorSet parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/*   806 */           return new DescriptorProtos.FileDescriptorSet(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FileDescriptorSet> parser() {
/*   811 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FileDescriptorSet> getParserForType() {
/*   816 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FileDescriptorSet getDefaultInstanceForType() {
/*   821 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FileDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getPackageBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<String> getDependencyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getDependencyCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getDependency(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getDependencyBytes(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<Integer> getPublicDependencyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getPublicDependencyCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getPublicDependency(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<Integer> getWeakDependencyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getWeakDependencyCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getWeakDependency(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.DescriptorProto> getMessageTypeList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.DescriptorProto getMessageType(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getMessageTypeCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.DescriptorProtoOrBuilder> getMessageTypeOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.DescriptorProtoOrBuilder getMessageTypeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.EnumDescriptorProto> getEnumTypeList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.EnumDescriptorProto getEnumType(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getEnumTypeCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.ServiceDescriptorProto> getServiceList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.ServiceDescriptorProto getService(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getServiceCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.ServiceDescriptorProtoOrBuilder> getServiceOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.ServiceDescriptorProtoOrBuilder getServiceOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.FieldDescriptorProto> getExtensionList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FieldDescriptorProto getExtension(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getExtensionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FileOptions getOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FileOptionsOrBuilder getOptionsOrBuilder();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSourceCodeInfo();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.SourceCodeInfo getSourceCodeInfo();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.SourceCodeInfoOrBuilder getSourceCodeInfoOrBuilder();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSyntax();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getSyntax();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getSyntaxBytes();
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class FileDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements FileDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object name_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PACKAGE_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object package_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPENDENCY_FIELD_NUMBER = 3;
/*       */ 
/*       */ 
/*       */     
/*       */     private LazyStringList dependency_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PUBLIC_DEPENDENCY_FIELD_NUMBER = 10;
/*       */ 
/*       */ 
/*       */     
/*       */     private Internal.IntList publicDependency_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int WEAK_DEPENDENCY_FIELD_NUMBER = 11;
/*       */ 
/*       */ 
/*       */     
/*       */     private Internal.IntList weakDependency_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int MESSAGE_TYPE_FIELD_NUMBER = 4;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.DescriptorProto> messageType_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ENUM_TYPE_FIELD_NUMBER = 5;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.EnumDescriptorProto> enumType_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SERVICE_FIELD_NUMBER = 6;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.ServiceDescriptorProto> service_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EXTENSION_FIELD_NUMBER = 7;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.FieldDescriptorProto> extension_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 8;
/*       */ 
/*       */ 
/*       */     
/*       */     private DescriptorProtos.FileOptions options_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SOURCE_CODE_INFO_FIELD_NUMBER = 9;
/*       */ 
/*       */ 
/*       */     
/*       */     private DescriptorProtos.SourceCodeInfo sourceCodeInfo_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SYNTAX_FIELD_NUMBER = 12;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object syntax_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private FileDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*  1203 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*  1965 */       this.memoizedIsInitialized = -1; } private FileDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; this.package_ = ""; this.dependency_ = LazyStringArrayList.EMPTY; this.publicDependency_ = emptyIntList(); this.weakDependency_ = emptyIntList(); this.messageType_ = Collections.emptyList(); this.enumType_ = Collections.emptyList(); this.service_ = Collections.emptyList(); this.extension_ = Collections.emptyList(); this.syntax_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FileDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FileDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString byteString1; DescriptorProtos.FileOptions.Builder builder; DescriptorProtos.SourceCodeInfo.Builder subBuilder; int length; ByteString bs; int limit, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: byteString1 = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = byteString1; continue;case 18: byteString1 = input.readBytes(); this.bitField0_ |= 0x2; this.package_ = byteString1; continue;case 26: byteString1 = input.readBytes(); if ((mutable_bitField0_ & 0x4) == 0) { this.dependency_ = new LazyStringArrayList(); mutable_bitField0_ |= 0x4; }  this.dependency_.add(byteString1); continue;case 34: if ((mutable_bitField0_ & 0x20) == 0) { this.messageType_ = new ArrayList<>(); mutable_bitField0_ |= 0x20; }  this.messageType_.add(input.readMessage(DescriptorProtos.DescriptorProto.PARSER, extensionRegistry)); continue;case 42: if ((mutable_bitField0_ & 0x40) == 0) { this.enumType_ = new ArrayList<>(); mutable_bitField0_ |= 0x40; }  this.enumType_.add(input.readMessage(DescriptorProtos.EnumDescriptorProto.PARSER, extensionRegistry)); continue;case 50: if ((mutable_bitField0_ & 0x80) == 0) { this.service_ = new ArrayList<>(); mutable_bitField0_ |= 0x80; }  this.service_.add(input.readMessage(DescriptorProtos.ServiceDescriptorProto.PARSER, extensionRegistry)); continue;case 58: if ((mutable_bitField0_ & 0x100) == 0) { this.extension_ = new ArrayList<>(); mutable_bitField0_ |= 0x100; }  this.extension_.add(input.readMessage(DescriptorProtos.FieldDescriptorProto.PARSER, extensionRegistry)); continue;case 66: builder = null; if ((this.bitField0_ & 0x4) != 0) builder = this.options_.toBuilder();  this.options_ = input.<DescriptorProtos.FileOptions>readMessage(DescriptorProtos.FileOptions.PARSER, extensionRegistry); if (builder != null) { builder.mergeFrom(this.options_); this.options_ = builder.buildPartial(); }  this.bitField0_ |= 0x4; continue;case 74: subBuilder = null; if ((this.bitField0_ & 0x8) != 0) subBuilder = this.sourceCodeInfo_.toBuilder();  this.sourceCodeInfo_ = input.<DescriptorProtos.SourceCodeInfo>readMessage(DescriptorProtos.SourceCodeInfo.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.sourceCodeInfo_); this.sourceCodeInfo_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x8; continue;case 80: if ((mutable_bitField0_ & 0x8) == 0) { this.publicDependency_ = newIntList(); mutable_bitField0_ |= 0x8; }  this.publicDependency_.addInt(input.readInt32()); continue;case 82: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x8) == 0 && input.getBytesUntilLimit() > 0) { this.publicDependency_ = newIntList(); mutable_bitField0_ |= 0x8; }  while (input.getBytesUntilLimit() > 0) this.publicDependency_.addInt(input.readInt32());  input.popLimit(limit); continue;case 88: if ((mutable_bitField0_ & 0x10) == 0) { this.weakDependency_ = newIntList(); mutable_bitField0_ |= 0x10; }  this.weakDependency_.addInt(input.readInt32()); continue;case 90: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x10) == 0 && input.getBytesUntilLimit() > 0) { this.weakDependency_ = newIntList(); mutable_bitField0_ |= 0x10; }  while (input.getBytesUntilLimit() > 0) this.weakDependency_.addInt(input.readInt32());  input.popLimit(limit); continue;case 98: bs = input.readBytes(); this.bitField0_ |= 0x10; this.syntax_ = bs; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x4) != 0) this.dependency_ = this.dependency_.getUnmodifiableView();  if ((mutable_bitField0_ & 0x20) != 0) this.messageType_ = Collections.unmodifiableList(this.messageType_);  if ((mutable_bitField0_ & 0x40) != 0) this.enumType_ = Collections.unmodifiableList(this.enumType_);  if ((mutable_bitField0_ & 0x80) != 0) this.service_ = Collections.unmodifiableList(this.service_);  if ((mutable_bitField0_ & 0x100) != 0) this.extension_ = Collections.unmodifiableList(this.extension_);  if ((mutable_bitField0_ & 0x8) != 0) this.publicDependency_.makeImmutable();  if ((mutable_bitField0_ & 0x10) != 0) this.weakDependency_.makeImmutable();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)FileDescriptorProto.class, (Class)Builder.class); } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public boolean hasPackage() { return ((this.bitField0_ & 0x2) != 0); } public String getPackage() { Object ref = this.package_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.package_ = s;  return s; } public ByteString getPackageBytes() { Object ref = this.package_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.package_ = b; return b; }  return (ByteString)ref; } public ProtocolStringList getDependencyList() { return this.dependency_; } public int getDependencyCount() { return this.dependency_.size(); } public String getDependency(int index) { return this.dependency_.get(index); } public ByteString getDependencyBytes(int index) { return this.dependency_.getByteString(index); } public List<Integer> getPublicDependencyList() { return this.publicDependency_; } public int getPublicDependencyCount() { return this.publicDependency_.size(); } public int getPublicDependency(int index) { return this.publicDependency_.getInt(index); } public List<Integer> getWeakDependencyList() { return this.weakDependency_; } public int getWeakDependencyCount() { return this.weakDependency_.size(); } public int getWeakDependency(int index) { return this.weakDependency_.getInt(index); } public List<DescriptorProtos.DescriptorProto> getMessageTypeList() { return this.messageType_; } public List<? extends DescriptorProtos.DescriptorProtoOrBuilder> getMessageTypeOrBuilderList() { return (List)this.messageType_; } public int getMessageTypeCount() { return this.messageType_.size(); } public DescriptorProtos.DescriptorProto getMessageType(int index) { return this.messageType_.get(index); } public DescriptorProtos.DescriptorProtoOrBuilder getMessageTypeOrBuilder(int index) { return this.messageType_.get(index); } public List<DescriptorProtos.EnumDescriptorProto> getEnumTypeList() { return this.enumType_; } public List<? extends DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList() { return (List)this.enumType_; } public int getEnumTypeCount() { return this.enumType_.size(); } public DescriptorProtos.EnumDescriptorProto getEnumType(int index) { return this.enumType_.get(index); } public DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int index) { return this.enumType_.get(index); } public List<DescriptorProtos.ServiceDescriptorProto> getServiceList() { return this.service_; } public List<? extends DescriptorProtos.ServiceDescriptorProtoOrBuilder> getServiceOrBuilderList() { return (List)this.service_; } public int getServiceCount() { return this.service_.size(); } public DescriptorProtos.ServiceDescriptorProto getService(int index) { return this.service_.get(index); } public DescriptorProtos.ServiceDescriptorProtoOrBuilder getServiceOrBuilder(int index) { return this.service_.get(index); } public List<DescriptorProtos.FieldDescriptorProto> getExtensionList() { return this.extension_; } public List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList() { return (List)this.extension_; } public int getExtensionCount() { return this.extension_.size(); } public DescriptorProtos.FieldDescriptorProto getExtension(int index) { return this.extension_.get(index); } public DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int index) { return this.extension_.get(index); } public boolean hasOptions() { return ((this.bitField0_ & 0x4) != 0); } public DescriptorProtos.FileOptions getOptions() { return (this.options_ == null) ? DescriptorProtos.FileOptions.getDefaultInstance() : this.options_; } public DescriptorProtos.FileOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? DescriptorProtos.FileOptions.getDefaultInstance() : this.options_; } public boolean hasSourceCodeInfo() { return ((this.bitField0_ & 0x8) != 0); } public DescriptorProtos.SourceCodeInfo getSourceCodeInfo() { return (this.sourceCodeInfo_ == null) ? DescriptorProtos.SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_; } public DescriptorProtos.SourceCodeInfoOrBuilder getSourceCodeInfoOrBuilder() { return (this.sourceCodeInfo_ == null) ? DescriptorProtos.SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_; } public boolean hasSyntax() { return ((this.bitField0_ & 0x10) != 0); }
/*       */     public String getSyntax() { Object ref = this.syntax_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.syntax_ = s;  return s; }
/*       */     public ByteString getSyntaxBytes() { Object ref = this.syntax_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.syntax_ = b; return b; }  return (ByteString)ref; }
/*  1968 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*  1969 */       if (isInitialized == 1) return true; 
/*  1970 */       if (isInitialized == 0) return false; 
/*       */       int i;
/*  1972 */       for (i = 0; i < getMessageTypeCount(); i++) {
/*  1973 */         if (!getMessageType(i).isInitialized()) {
/*  1974 */           this.memoizedIsInitialized = 0;
/*  1975 */           return false;
/*       */         } 
/*       */       } 
/*  1978 */       for (i = 0; i < getEnumTypeCount(); i++) {
/*  1979 */         if (!getEnumType(i).isInitialized()) {
/*  1980 */           this.memoizedIsInitialized = 0;
/*  1981 */           return false;
/*       */         } 
/*       */       } 
/*  1984 */       for (i = 0; i < getServiceCount(); i++) {
/*  1985 */         if (!getService(i).isInitialized()) {
/*  1986 */           this.memoizedIsInitialized = 0;
/*  1987 */           return false;
/*       */         } 
/*       */       } 
/*  1990 */       for (i = 0; i < getExtensionCount(); i++) {
/*  1991 */         if (!getExtension(i).isInitialized()) {
/*  1992 */           this.memoizedIsInitialized = 0;
/*  1993 */           return false;
/*       */         } 
/*       */       } 
/*  1996 */       if (hasOptions() && 
/*  1997 */         !getOptions().isInitialized()) {
/*  1998 */         this.memoizedIsInitialized = 0;
/*  1999 */         return false;
/*       */       } 
/*       */       
/*  2002 */       this.memoizedIsInitialized = 1;
/*  2003 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/*  2009 */       if ((this.bitField0_ & 0x1) != 0) {
/*  2010 */         GeneratedMessageV3.writeString(output, 1, this.name_);
/*       */       }
/*  2012 */       if ((this.bitField0_ & 0x2) != 0)
/*  2013 */         GeneratedMessageV3.writeString(output, 2, this.package_); 
/*       */       int i;
/*  2015 */       for (i = 0; i < this.dependency_.size(); i++) {
/*  2016 */         GeneratedMessageV3.writeString(output, 3, this.dependency_.getRaw(i));
/*       */       }
/*  2018 */       for (i = 0; i < this.messageType_.size(); i++) {
/*  2019 */         output.writeMessage(4, this.messageType_.get(i));
/*       */       }
/*  2021 */       for (i = 0; i < this.enumType_.size(); i++) {
/*  2022 */         output.writeMessage(5, this.enumType_.get(i));
/*       */       }
/*  2024 */       for (i = 0; i < this.service_.size(); i++) {
/*  2025 */         output.writeMessage(6, this.service_.get(i));
/*       */       }
/*  2027 */       for (i = 0; i < this.extension_.size(); i++) {
/*  2028 */         output.writeMessage(7, this.extension_.get(i));
/*       */       }
/*  2030 */       if ((this.bitField0_ & 0x4) != 0) {
/*  2031 */         output.writeMessage(8, getOptions());
/*       */       }
/*  2033 */       if ((this.bitField0_ & 0x8) != 0) {
/*  2034 */         output.writeMessage(9, getSourceCodeInfo());
/*       */       }
/*  2036 */       for (i = 0; i < this.publicDependency_.size(); i++) {
/*  2037 */         output.writeInt32(10, this.publicDependency_.getInt(i));
/*       */       }
/*  2039 */       for (i = 0; i < this.weakDependency_.size(); i++) {
/*  2040 */         output.writeInt32(11, this.weakDependency_.getInt(i));
/*       */       }
/*  2042 */       if ((this.bitField0_ & 0x10) != 0) {
/*  2043 */         GeneratedMessageV3.writeString(output, 12, this.syntax_);
/*       */       }
/*  2045 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*  2050 */       int size = this.memoizedSize;
/*  2051 */       if (size != -1) return size;
/*       */       
/*  2053 */       size = 0;
/*  2054 */       if ((this.bitField0_ & 0x1) != 0) {
/*  2055 */         size += GeneratedMessageV3.computeStringSize(1, this.name_);
/*       */       }
/*  2057 */       if ((this.bitField0_ & 0x2) != 0) {
/*  2058 */         size += GeneratedMessageV3.computeStringSize(2, this.package_);
/*       */       }
/*       */       
/*  2061 */       int j = 0; int k;
/*  2062 */       for (k = 0; k < this.dependency_.size(); k++) {
/*  2063 */         j += computeStringSizeNoTag(this.dependency_.getRaw(k));
/*       */       }
/*  2065 */       size += j;
/*  2066 */       size += 1 * getDependencyList().size();
/*       */       int i;
/*  2068 */       for (i = 0; i < this.messageType_.size(); i++) {
/*  2069 */         size += 
/*  2070 */           CodedOutputStream.computeMessageSize(4, this.messageType_.get(i));
/*       */       }
/*  2072 */       for (i = 0; i < this.enumType_.size(); i++) {
/*  2073 */         size += 
/*  2074 */           CodedOutputStream.computeMessageSize(5, this.enumType_.get(i));
/*       */       }
/*  2076 */       for (i = 0; i < this.service_.size(); i++) {
/*  2077 */         size += 
/*  2078 */           CodedOutputStream.computeMessageSize(6, this.service_.get(i));
/*       */       }
/*  2080 */       for (i = 0; i < this.extension_.size(); i++) {
/*  2081 */         size += 
/*  2082 */           CodedOutputStream.computeMessageSize(7, this.extension_.get(i));
/*       */       }
/*  2084 */       if ((this.bitField0_ & 0x4) != 0) {
/*  2085 */         size += 
/*  2086 */           CodedOutputStream.computeMessageSize(8, getOptions());
/*       */       }
/*  2088 */       if ((this.bitField0_ & 0x8) != 0) {
/*  2089 */         size += 
/*  2090 */           CodedOutputStream.computeMessageSize(9, getSourceCodeInfo());
/*       */       }
/*       */       
/*  2093 */       int dataSize = 0;
/*  2094 */       for (k = 0; k < this.publicDependency_.size(); k++) {
/*  2095 */         dataSize += 
/*  2096 */           CodedOutputStream.computeInt32SizeNoTag(this.publicDependency_.getInt(k));
/*       */       }
/*  2098 */       size += dataSize;
/*  2099 */       size += 1 * getPublicDependencyList().size();
/*       */ 
/*       */       
/*  2102 */       dataSize = 0;
/*  2103 */       for (k = 0; k < this.weakDependency_.size(); k++) {
/*  2104 */         dataSize += 
/*  2105 */           CodedOutputStream.computeInt32SizeNoTag(this.weakDependency_.getInt(k));
/*       */       }
/*  2107 */       size += dataSize;
/*  2108 */       size += 1 * getWeakDependencyList().size();
/*       */       
/*  2110 */       if ((this.bitField0_ & 0x10) != 0) {
/*  2111 */         size += GeneratedMessageV3.computeStringSize(12, this.syntax_);
/*       */       }
/*  2113 */       size += this.unknownFields.getSerializedSize();
/*  2114 */       this.memoizedSize = size;
/*  2115 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*  2120 */       if (obj == this) {
/*  2121 */         return true;
/*       */       }
/*  2123 */       if (!(obj instanceof FileDescriptorProto)) {
/*  2124 */         return super.equals(obj);
/*       */       }
/*  2126 */       FileDescriptorProto other = (FileDescriptorProto)obj;
/*       */       
/*  2128 */       if (hasName() != other.hasName()) return false; 
/*  2129 */       if (hasName() && 
/*       */         
/*  2131 */         !getName().equals(other.getName())) return false;
/*       */       
/*  2133 */       if (hasPackage() != other.hasPackage()) return false; 
/*  2134 */       if (hasPackage() && 
/*       */         
/*  2136 */         !getPackage().equals(other.getPackage())) return false;
/*       */ 
/*       */       
/*  2139 */       if (!getDependencyList().equals(other.getDependencyList())) return false;
/*       */       
/*  2141 */       if (!getPublicDependencyList().equals(other.getPublicDependencyList())) return false;
/*       */       
/*  2143 */       if (!getWeakDependencyList().equals(other.getWeakDependencyList())) return false;
/*       */       
/*  2145 */       if (!getMessageTypeList().equals(other.getMessageTypeList())) return false;
/*       */       
/*  2147 */       if (!getEnumTypeList().equals(other.getEnumTypeList())) return false;
/*       */       
/*  2149 */       if (!getServiceList().equals(other.getServiceList())) return false;
/*       */       
/*  2151 */       if (!getExtensionList().equals(other.getExtensionList())) return false; 
/*  2152 */       if (hasOptions() != other.hasOptions()) return false; 
/*  2153 */       if (hasOptions() && 
/*       */         
/*  2155 */         !getOptions().equals(other.getOptions())) return false;
/*       */       
/*  2157 */       if (hasSourceCodeInfo() != other.hasSourceCodeInfo()) return false; 
/*  2158 */       if (hasSourceCodeInfo() && 
/*       */         
/*  2160 */         !getSourceCodeInfo().equals(other.getSourceCodeInfo())) return false;
/*       */       
/*  2162 */       if (hasSyntax() != other.hasSyntax()) return false; 
/*  2163 */       if (hasSyntax() && 
/*       */         
/*  2165 */         !getSyntax().equals(other.getSyntax())) return false;
/*       */       
/*  2167 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*  2168 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*  2173 */       if (this.memoizedHashCode != 0) {
/*  2174 */         return this.memoizedHashCode;
/*       */       }
/*  2176 */       int hash = 41;
/*  2177 */       hash = 19 * hash + getDescriptor().hashCode();
/*  2178 */       if (hasName()) {
/*  2179 */         hash = 37 * hash + 1;
/*  2180 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/*  2182 */       if (hasPackage()) {
/*  2183 */         hash = 37 * hash + 2;
/*  2184 */         hash = 53 * hash + getPackage().hashCode();
/*       */       } 
/*  2186 */       if (getDependencyCount() > 0) {
/*  2187 */         hash = 37 * hash + 3;
/*  2188 */         hash = 53 * hash + getDependencyList().hashCode();
/*       */       } 
/*  2190 */       if (getPublicDependencyCount() > 0) {
/*  2191 */         hash = 37 * hash + 10;
/*  2192 */         hash = 53 * hash + getPublicDependencyList().hashCode();
/*       */       } 
/*  2194 */       if (getWeakDependencyCount() > 0) {
/*  2195 */         hash = 37 * hash + 11;
/*  2196 */         hash = 53 * hash + getWeakDependencyList().hashCode();
/*       */       } 
/*  2198 */       if (getMessageTypeCount() > 0) {
/*  2199 */         hash = 37 * hash + 4;
/*  2200 */         hash = 53 * hash + getMessageTypeList().hashCode();
/*       */       } 
/*  2202 */       if (getEnumTypeCount() > 0) {
/*  2203 */         hash = 37 * hash + 5;
/*  2204 */         hash = 53 * hash + getEnumTypeList().hashCode();
/*       */       } 
/*  2206 */       if (getServiceCount() > 0) {
/*  2207 */         hash = 37 * hash + 6;
/*  2208 */         hash = 53 * hash + getServiceList().hashCode();
/*       */       } 
/*  2210 */       if (getExtensionCount() > 0) {
/*  2211 */         hash = 37 * hash + 7;
/*  2212 */         hash = 53 * hash + getExtensionList().hashCode();
/*       */       } 
/*  2214 */       if (hasOptions()) {
/*  2215 */         hash = 37 * hash + 8;
/*  2216 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/*  2218 */       if (hasSourceCodeInfo()) {
/*  2219 */         hash = 37 * hash + 9;
/*  2220 */         hash = 53 * hash + getSourceCodeInfo().hashCode();
/*       */       } 
/*  2222 */       if (hasSyntax()) {
/*  2223 */         hash = 37 * hash + 12;
/*  2224 */         hash = 53 * hash + getSyntax().hashCode();
/*       */       } 
/*  2226 */       hash = 29 * hash + this.unknownFields.hashCode();
/*  2227 */       this.memoizedHashCode = hash;
/*  2228 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*  2234 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  2240 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*  2245 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  2251 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*  2255 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  2261 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileDescriptorProto parseFrom(InputStream input) throws IOException {
/*  2265 */       return 
/*  2266 */         GeneratedMessageV3.<FileDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  2272 */       return 
/*  2273 */         GeneratedMessageV3.<FileDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/*  2277 */       return 
/*  2278 */         GeneratedMessageV3.<FileDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  2284 */       return 
/*  2285 */         GeneratedMessageV3.<FileDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/*  2290 */       return 
/*  2291 */         GeneratedMessageV3.<FileDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  2297 */       return 
/*  2298 */         GeneratedMessageV3.<FileDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*  2302 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*  2304 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FileDescriptorProto prototype) {
/*  2307 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*  2311 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*  2312 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*  2318 */       Builder builder = new Builder(parent);
/*  2319 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DescriptorProtos.FileDescriptorProtoOrBuilder { private int bitField0_; private Object name_; private Object package_; private LazyStringList dependency_; private Internal.IntList publicDependency_; private Internal.IntList weakDependency_; private List<DescriptorProtos.DescriptorProto> messageType_; private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto, DescriptorProtos.DescriptorProto.Builder, DescriptorProtos.DescriptorProtoOrBuilder> messageTypeBuilder_; private List<DescriptorProtos.EnumDescriptorProto> enumType_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.EnumDescriptorProto, DescriptorProtos.EnumDescriptorProto.Builder, DescriptorProtos.EnumDescriptorProtoOrBuilder> enumTypeBuilder_;
/*       */       private List<DescriptorProtos.ServiceDescriptorProto> service_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.ServiceDescriptorProto, DescriptorProtos.ServiceDescriptorProto.Builder, DescriptorProtos.ServiceDescriptorProtoOrBuilder> serviceBuilder_;
/*       */       private List<DescriptorProtos.FieldDescriptorProto> extension_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.FieldDescriptorProto, DescriptorProtos.FieldDescriptorProto.Builder, DescriptorProtos.FieldDescriptorProtoOrBuilder> extensionBuilder_;
/*       */       private DescriptorProtos.FileOptions options_;
/*       */       private SingleFieldBuilderV3<DescriptorProtos.FileOptions, DescriptorProtos.FileOptions.Builder, DescriptorProtos.FileOptionsOrBuilder> optionsBuilder_;
/*       */       private DescriptorProtos.SourceCodeInfo sourceCodeInfo_;
/*       */       private SingleFieldBuilderV3<DescriptorProtos.SourceCodeInfo, DescriptorProtos.SourceCodeInfo.Builder, DescriptorProtos.SourceCodeInfoOrBuilder> sourceCodeInfoBuilder_;
/*       */       private Object syntax_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*  2334 */         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*  2340 */         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable
/*  2341 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.FileDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*  2783 */         this.name_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  2891 */         this.package_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  2999 */         this.dependency_ = LazyStringArrayList.EMPTY;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  3144 */         this.publicDependency_ = GeneratedMessageV3.emptyIntList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  3251 */         this.weakDependency_ = GeneratedMessageV3.emptyIntList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  3365 */         this
/*  3366 */           .messageType_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  3677 */         this
/*  3678 */           .enumType_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  3917 */         this
/*  3918 */           .service_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  4157 */         this
/*  4158 */           .extension_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  4700 */         this.syntax_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.name_ = ""; this.package_ = ""; this.dependency_ = LazyStringArrayList.EMPTY; this.publicDependency_ = GeneratedMessageV3.emptyIntList(); this.weakDependency_ = GeneratedMessageV3.emptyIntList(); this.messageType_ = Collections.emptyList(); this.enumType_ = Collections.emptyList(); this.service_ = Collections.emptyList(); this.extension_ = Collections.emptyList(); this.syntax_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) { getMessageTypeFieldBuilder(); getEnumTypeFieldBuilder(); getServiceFieldBuilder(); getExtensionFieldBuilder(); getOptionsFieldBuilder(); getSourceCodeInfoFieldBuilder(); }  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.package_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.dependency_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFFFB; this.publicDependency_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFF7; this.weakDependency_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFEF; if (this.messageTypeBuilder_ == null) { this.messageType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFDF; } else { this.messageTypeBuilder_.clear(); }  if (this.enumTypeBuilder_ == null) { this.enumType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFBF; } else { this.enumTypeBuilder_.clear(); }  if (this.serviceBuilder_ == null) { this.service_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFF7F; } else { this.serviceBuilder_.clear(); }  if (this.extensionBuilder_ == null) { this.extension_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFEFF; } else { this.extensionBuilder_.clear(); }  if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFDFF; if (this.sourceCodeInfoBuilder_ == null) { this.sourceCodeInfo_ = null; } else { this.sourceCodeInfoBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFBFF; this.syntax_ = ""; this.bitField0_ &= 0xFFFFF7FF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_descriptor; } public DescriptorProtos.FileDescriptorProto getDefaultInstanceForType() { return DescriptorProtos.FileDescriptorProto.getDefaultInstance(); } public DescriptorProtos.FileDescriptorProto build() { DescriptorProtos.FileDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.FileDescriptorProto buildPartial() { DescriptorProtos.FileDescriptorProto result = new DescriptorProtos.FileDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.package_ = this.package_; if ((this.bitField0_ & 0x4) != 0) { this.dependency_ = this.dependency_.getUnmodifiableView(); this.bitField0_ &= 0xFFFFFFFB; }  result.dependency_ = this.dependency_; if ((this.bitField0_ & 0x8) != 0) { this.publicDependency_.makeImmutable(); this.bitField0_ &= 0xFFFFFFF7; }  result.publicDependency_ = this.publicDependency_; if ((this.bitField0_ & 0x10) != 0) { this.weakDependency_.makeImmutable(); this.bitField0_ &= 0xFFFFFFEF; }  result.weakDependency_ = this.weakDependency_; if (this.messageTypeBuilder_ == null) { if ((this.bitField0_ & 0x20) != 0) { this.messageType_ = Collections.unmodifiableList(this.messageType_); this.bitField0_ &= 0xFFFFFFDF; }  result.messageType_ = this.messageType_; } else { result.messageType_ = this.messageTypeBuilder_.build(); }  if (this.enumTypeBuilder_ == null) { if ((this.bitField0_ & 0x40) != 0) { this.enumType_ = Collections.unmodifiableList(this.enumType_); this.bitField0_ &= 0xFFFFFFBF; }  result.enumType_ = this.enumType_; } else { result.enumType_ = this.enumTypeBuilder_.build(); }  if (this.serviceBuilder_ == null) { if ((this.bitField0_ & 0x80) != 0) { this.service_ = Collections.unmodifiableList(this.service_); this.bitField0_ &= 0xFFFFFF7F; }  result.service_ = this.service_; } else { result.service_ = this.serviceBuilder_.build(); }  if (this.extensionBuilder_ == null) { if ((this.bitField0_ & 0x100) != 0) { this.extension_ = Collections.unmodifiableList(this.extension_); this.bitField0_ &= 0xFFFFFEFF; }  result.extension_ = this.extension_; } else { result.extension_ = this.extensionBuilder_.build(); }  if ((from_bitField0_ & 0x200) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x400) != 0) { if (this.sourceCodeInfoBuilder_ == null) { result.sourceCodeInfo_ = this.sourceCodeInfo_; } else { result.sourceCodeInfo_ = this.sourceCodeInfoBuilder_.build(); }  to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x800) != 0) to_bitField0_ |= 0x10;  result.syntax_ = this.syntax_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.FileDescriptorProto) return mergeFrom((DescriptorProtos.FileDescriptorProto)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.FileDescriptorProto other) { if (other == DescriptorProtos.FileDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (other.hasPackage()) { this.bitField0_ |= 0x2; this.package_ = other.package_; onChanged(); }  if (!other.dependency_.isEmpty()) { if (this.dependency_.isEmpty()) { this.dependency_ = other.dependency_; this.bitField0_ &= 0xFFFFFFFB; } else { ensureDependencyIsMutable(); this.dependency_.addAll(other.dependency_); }  onChanged(); }  if (!other.publicDependency_.isEmpty()) { if (this.publicDependency_.isEmpty()) { this.publicDependency_ = other.publicDependency_; this.bitField0_ &= 0xFFFFFFF7; } else { ensurePublicDependencyIsMutable(); this.publicDependency_.addAll(other.publicDependency_); }  onChanged(); }  if (!other.weakDependency_.isEmpty()) { if (this.weakDependency_.isEmpty()) { this.weakDependency_ = other.weakDependency_; this.bitField0_ &= 0xFFFFFFEF; } else { ensureWeakDependencyIsMutable(); this.weakDependency_.addAll(other.weakDependency_); }  onChanged(); }  if (this.messageTypeBuilder_ == null) { if (!other.messageType_.isEmpty()) { if (this.messageType_.isEmpty()) { this.messageType_ = other.messageType_; this.bitField0_ &= 0xFFFFFFDF; } else { ensureMessageTypeIsMutable(); this.messageType_.addAll(other.messageType_); }  onChanged(); }  } else if (!other.messageType_.isEmpty()) { if (this.messageTypeBuilder_.isEmpty()) { this.messageTypeBuilder_.dispose(); this.messageTypeBuilder_ = null; this.messageType_ = other.messageType_; this.bitField0_ &= 0xFFFFFFDF; this.messageTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getMessageTypeFieldBuilder() : null; } else { this.messageTypeBuilder_.addAllMessages(other.messageType_); }  }  if (this.enumTypeBuilder_ == null) { if (!other.enumType_.isEmpty()) { if (this.enumType_.isEmpty()) { this.enumType_ = other.enumType_; this.bitField0_ &= 0xFFFFFFBF; } else { ensureEnumTypeIsMutable(); this.enumType_.addAll(other.enumType_); }  onChanged(); }  } else if (!other.enumType_.isEmpty()) { if (this.enumTypeBuilder_.isEmpty()) { this.enumTypeBuilder_.dispose(); this.enumTypeBuilder_ = null; this.enumType_ = other.enumType_; this.bitField0_ &= 0xFFFFFFBF; this.enumTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getEnumTypeFieldBuilder() : null; } else { this.enumTypeBuilder_.addAllMessages(other.enumType_); }  }  if (this.serviceBuilder_ == null) { if (!other.service_.isEmpty()) { if (this.service_.isEmpty()) { this.service_ = other.service_; this.bitField0_ &= 0xFFFFFF7F; } else { ensureServiceIsMutable(); this.service_.addAll(other.service_); }  onChanged(); }  } else if (!other.service_.isEmpty()) { if (this.serviceBuilder_.isEmpty()) { this.serviceBuilder_.dispose(); this.serviceBuilder_ = null; this.service_ = other.service_; this.bitField0_ &= 0xFFFFFF7F; this.serviceBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getServiceFieldBuilder() : null; } else { this.serviceBuilder_.addAllMessages(other.service_); }  }  if (this.extensionBuilder_ == null) { if (!other.extension_.isEmpty()) { if (this.extension_.isEmpty()) { this.extension_ = other.extension_; this.bitField0_ &= 0xFFFFFEFF; } else { ensureExtensionIsMutable(); this.extension_.addAll(other.extension_); }  onChanged(); }  } else if (!other.extension_.isEmpty()) { if (this.extensionBuilder_.isEmpty()) { this.extensionBuilder_.dispose(); this.extensionBuilder_ = null; this.extension_ = other.extension_; this.bitField0_ &= 0xFFFFFEFF; this.extensionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getExtensionFieldBuilder() : null; } else { this.extensionBuilder_.addAllMessages(other.extension_); }  }  if (other.hasOptions()) mergeOptions(other.getOptions());  if (other.hasSourceCodeInfo()) mergeSourceCodeInfo(other.getSourceCodeInfo());  if (other.hasSyntax()) { this.bitField0_ |= 0x800; this.syntax_ = other.syntax_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { int i; for (i = 0; i < getMessageTypeCount(); i++) { if (!getMessageType(i).isInitialized()) return false;  }  for (i = 0; i < getEnumTypeCount(); i++) { if (!getEnumType(i).isInitialized()) return false;  }  for (i = 0; i < getServiceCount(); i++) { if (!getService(i).isInitialized()) return false;  }  for (i = 0; i < getExtensionCount(); i++) { if (!getExtension(i).isInitialized()) return false;  }  if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.FileDescriptorProto parsedMessage = null; try { parsedMessage = DescriptorProtos.FileDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.FileDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFE; this.name_ = DescriptorProtos.FileDescriptorProto.getDefaultInstance().getName(); onChanged(); return this; } public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public boolean hasPackage() { return ((this.bitField0_ & 0x2) != 0); } public String getPackage() { Object ref = this.package_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.package_ = s;  return s; }  return (String)ref; } public ByteString getPackageBytes() { Object ref = this.package_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.package_ = b; return b; }  return (ByteString)ref; } public Builder setPackage(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.package_ = value; onChanged(); return this; } public Builder clearPackage() { this.bitField0_ &= 0xFFFFFFFD; this.package_ = DescriptorProtos.FileDescriptorProto.getDefaultInstance().getPackage(); onChanged(); return this; } public Builder setPackageBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.package_ = value; onChanged(); return this; } private void ensureDependencyIsMutable() { if ((this.bitField0_ & 0x4) == 0) { this.dependency_ = new LazyStringArrayList(this.dependency_); this.bitField0_ |= 0x4; }  } public ProtocolStringList getDependencyList() { return this.dependency_.getUnmodifiableView(); } public int getDependencyCount() { return this.dependency_.size(); } public String getDependency(int index) { return this.dependency_.get(index); } public ByteString getDependencyBytes(int index) { return this.dependency_.getByteString(index); } public Builder setDependency(int index, String value) { if (value == null) throw new NullPointerException();  ensureDependencyIsMutable(); this.dependency_.set(index, value); onChanged(); return this; } public Builder addDependency(String value) { if (value == null) throw new NullPointerException();  ensureDependencyIsMutable(); this.dependency_.add(value); onChanged(); return this; } public Builder addAllDependency(Iterable<String> values) { ensureDependencyIsMutable(); AbstractMessageLite.Builder.addAll(values, this.dependency_); onChanged(); return this; } public Builder clearDependency() { this.dependency_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFFFB; onChanged(); return this; } public Builder addDependencyBytes(ByteString value) { if (value == null) throw new NullPointerException();  ensureDependencyIsMutable(); this.dependency_.add(value); onChanged(); return this; } private void ensurePublicDependencyIsMutable() { if ((this.bitField0_ & 0x8) == 0) { this.publicDependency_ = GeneratedMessageV3.mutableCopy(this.publicDependency_); this.bitField0_ |= 0x8; }  } public List<Integer> getPublicDependencyList() { return ((this.bitField0_ & 0x8) != 0) ? Collections.<Integer>unmodifiableList(this.publicDependency_) : this.publicDependency_; } public int getPublicDependencyCount() { return this.publicDependency_.size(); } public int getPublicDependency(int index) { return this.publicDependency_.getInt(index); } public Builder setPublicDependency(int index, int value) { ensurePublicDependencyIsMutable(); this.publicDependency_.setInt(index, value); onChanged(); return this; } public Builder addPublicDependency(int value) { ensurePublicDependencyIsMutable(); this.publicDependency_.addInt(value); onChanged(); return this; } public Builder addAllPublicDependency(Iterable<? extends Integer> values) { ensurePublicDependencyIsMutable(); AbstractMessageLite.Builder.addAll(values, this.publicDependency_); onChanged(); return this; } public Builder clearPublicDependency() { this.publicDependency_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFF7; onChanged(); return this; } private void ensureWeakDependencyIsMutable() { if ((this.bitField0_ & 0x10) == 0) { this.weakDependency_ = GeneratedMessageV3.mutableCopy(this.weakDependency_); this.bitField0_ |= 0x10; }  } public List<Integer> getWeakDependencyList() { return ((this.bitField0_ & 0x10) != 0) ? Collections.<Integer>unmodifiableList(this.weakDependency_) : this.weakDependency_; } public int getWeakDependencyCount() { return this.weakDependency_.size(); } public int getWeakDependency(int index) { return this.weakDependency_.getInt(index); } public Builder setWeakDependency(int index, int value) { ensureWeakDependencyIsMutable(); this.weakDependency_.setInt(index, value); onChanged(); return this; } public Builder addWeakDependency(int value) { ensureWeakDependencyIsMutable(); this.weakDependency_.addInt(value); onChanged(); return this; } public Builder addAllWeakDependency(Iterable<? extends Integer> values) { ensureWeakDependencyIsMutable(); AbstractMessageLite.Builder.addAll(values, this.weakDependency_); onChanged(); return this; } public Builder clearWeakDependency() { this.weakDependency_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFEF; onChanged(); return this; } private void ensureMessageTypeIsMutable() { if ((this.bitField0_ & 0x20) == 0) { this.messageType_ = new ArrayList<>(this.messageType_); this.bitField0_ |= 0x20; }  } public List<DescriptorProtos.DescriptorProto> getMessageTypeList() { if (this.messageTypeBuilder_ == null) return Collections.unmodifiableList(this.messageType_);  return this.messageTypeBuilder_.getMessageList(); } public int getMessageTypeCount() { if (this.messageTypeBuilder_ == null) return this.messageType_.size();  return this.messageTypeBuilder_.getCount(); } public DescriptorProtos.DescriptorProto getMessageType(int index) { if (this.messageTypeBuilder_ == null) return this.messageType_.get(index);  return this.messageTypeBuilder_.getMessage(index); } public Builder setMessageType(int index, DescriptorProtos.DescriptorProto value) { if (this.messageTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureMessageTypeIsMutable(); this.messageType_.set(index, value); onChanged(); } else { this.messageTypeBuilder_.setMessage(index, value); }  return this; } public Builder setMessageType(int index, DescriptorProtos.DescriptorProto.Builder builderForValue) { if (this.messageTypeBuilder_ == null) { ensureMessageTypeIsMutable(); this.messageType_.set(index, builderForValue.build()); onChanged(); } else { this.messageTypeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addMessageType(DescriptorProtos.DescriptorProto value) { if (this.messageTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureMessageTypeIsMutable(); this.messageType_.add(value); onChanged(); } else { this.messageTypeBuilder_.addMessage(value); }  return this; } public Builder addMessageType(int index, DescriptorProtos.DescriptorProto value) { if (this.messageTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureMessageTypeIsMutable(); this.messageType_.add(index, value); onChanged(); } else { this.messageTypeBuilder_.addMessage(index, value); }  return this; } public Builder addMessageType(DescriptorProtos.DescriptorProto.Builder builderForValue) { if (this.messageTypeBuilder_ == null) { ensureMessageTypeIsMutable(); this.messageType_.add(builderForValue.build()); onChanged(); } else { this.messageTypeBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addMessageType(int index, DescriptorProtos.DescriptorProto.Builder builderForValue) { if (this.messageTypeBuilder_ == null) { ensureMessageTypeIsMutable(); this.messageType_.add(index, builderForValue.build()); onChanged(); } else { this.messageTypeBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllMessageType(Iterable<? extends DescriptorProtos.DescriptorProto> values) { if (this.messageTypeBuilder_ == null) { ensureMessageTypeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.messageType_); onChanged(); } else { this.messageTypeBuilder_.addAllMessages(values); }  return this; } public Builder clearMessageType() { if (this.messageTypeBuilder_ == null) { this.messageType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFDF; onChanged(); } else { this.messageTypeBuilder_.clear(); }  return this; }
/*       */       public Builder removeMessageType(int index) { if (this.messageTypeBuilder_ == null) { ensureMessageTypeIsMutable(); this.messageType_.remove(index); onChanged(); } else { this.messageTypeBuilder_.remove(index); }  return this; }
/*       */       public DescriptorProtos.DescriptorProto.Builder getMessageTypeBuilder(int index) { return getMessageTypeFieldBuilder().getBuilder(index); }
/*       */       public DescriptorProtos.DescriptorProtoOrBuilder getMessageTypeOrBuilder(int index) { if (this.messageTypeBuilder_ == null) return this.messageType_.get(index);  return this.messageTypeBuilder_.getMessageOrBuilder(index); }
/*       */       public List<? extends DescriptorProtos.DescriptorProtoOrBuilder> getMessageTypeOrBuilderList() { if (this.messageTypeBuilder_ != null) return this.messageTypeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.messageType_); }
/*       */       public DescriptorProtos.DescriptorProto.Builder addMessageTypeBuilder() { return getMessageTypeFieldBuilder().addBuilder(DescriptorProtos.DescriptorProto.getDefaultInstance()); }
/*       */       public DescriptorProtos.DescriptorProto.Builder addMessageTypeBuilder(int index) { return getMessageTypeFieldBuilder().addBuilder(index, DescriptorProtos.DescriptorProto.getDefaultInstance()); }
/*       */       public List<DescriptorProtos.DescriptorProto.Builder> getMessageTypeBuilderList() { return getMessageTypeFieldBuilder().getBuilderList(); }
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto, DescriptorProtos.DescriptorProto.Builder, DescriptorProtos.DescriptorProtoOrBuilder> getMessageTypeFieldBuilder() { if (this.messageTypeBuilder_ == null) { this.messageTypeBuilder_ = new RepeatedFieldBuilderV3<>(this.messageType_, ((this.bitField0_ & 0x20) != 0), getParentForChildren(), isClean()); this.messageType_ = null; }  return this.messageTypeBuilder_; }
/*       */       private void ensureEnumTypeIsMutable() { if ((this.bitField0_ & 0x40) == 0) { this.enumType_ = new ArrayList<>(this.enumType_); this.bitField0_ |= 0x40; }  }
/*       */       public List<DescriptorProtos.EnumDescriptorProto> getEnumTypeList() { if (this.enumTypeBuilder_ == null) return Collections.unmodifiableList(this.enumType_);  return this.enumTypeBuilder_.getMessageList(); }
/*  4711 */       public boolean hasSyntax() { return ((this.bitField0_ & 0x800) != 0); } public int getEnumTypeCount() { if (this.enumTypeBuilder_ == null) return this.enumType_.size();  return this.enumTypeBuilder_.getCount(); } public DescriptorProtos.EnumDescriptorProto getEnumType(int index) { if (this.enumTypeBuilder_ == null) return this.enumType_.get(index);  return this.enumTypeBuilder_.getMessage(index); } public Builder setEnumType(int index, DescriptorProtos.EnumDescriptorProto value) { if (this.enumTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureEnumTypeIsMutable(); this.enumType_.set(index, value); onChanged(); } else { this.enumTypeBuilder_.setMessage(index, value); }  return this; } public Builder setEnumType(int index, DescriptorProtos.EnumDescriptorProto.Builder builderForValue) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.set(index, builderForValue.build()); onChanged(); } else { this.enumTypeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addEnumType(DescriptorProtos.EnumDescriptorProto value) { if (this.enumTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureEnumTypeIsMutable(); this.enumType_.add(value); onChanged(); } else { this.enumTypeBuilder_.addMessage(value); }  return this; } public Builder addEnumType(int index, DescriptorProtos.EnumDescriptorProto value) { if (this.enumTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureEnumTypeIsMutable(); this.enumType_.add(index, value); onChanged(); } else { this.enumTypeBuilder_.addMessage(index, value); }  return this; } public Builder addEnumType(DescriptorProtos.EnumDescriptorProto.Builder builderForValue) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.add(builderForValue.build()); onChanged(); } else { this.enumTypeBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addEnumType(int index, DescriptorProtos.EnumDescriptorProto.Builder builderForValue) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.add(index, builderForValue.build()); onChanged(); } else { this.enumTypeBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllEnumType(Iterable<? extends DescriptorProtos.EnumDescriptorProto> values) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.enumType_); onChanged(); } else { this.enumTypeBuilder_.addAllMessages(values); }  return this; } public Builder clearEnumType() { if (this.enumTypeBuilder_ == null) { this.enumType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFBF; onChanged(); } else { this.enumTypeBuilder_.clear(); }  return this; } public Builder removeEnumType(int index) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.remove(index); onChanged(); } else { this.enumTypeBuilder_.remove(index); }  return this; } public DescriptorProtos.EnumDescriptorProto.Builder getEnumTypeBuilder(int index) { return getEnumTypeFieldBuilder().getBuilder(index); } public DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int index) { if (this.enumTypeBuilder_ == null) return this.enumType_.get(index);  return this.enumTypeBuilder_.getMessageOrBuilder(index); } public List<? extends DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList() { if (this.enumTypeBuilder_ != null) return this.enumTypeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.enumType_); } public DescriptorProtos.EnumDescriptorProto.Builder addEnumTypeBuilder() { return getEnumTypeFieldBuilder().addBuilder(DescriptorProtos.EnumDescriptorProto.getDefaultInstance()); } public DescriptorProtos.EnumDescriptorProto.Builder addEnumTypeBuilder(int index) { return getEnumTypeFieldBuilder().addBuilder(index, DescriptorProtos.EnumDescriptorProto.getDefaultInstance()); } public List<DescriptorProtos.EnumDescriptorProto.Builder> getEnumTypeBuilderList() { return getEnumTypeFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<DescriptorProtos.EnumDescriptorProto, DescriptorProtos.EnumDescriptorProto.Builder, DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeFieldBuilder() { if (this.enumTypeBuilder_ == null) { this.enumTypeBuilder_ = new RepeatedFieldBuilderV3<>(this.enumType_, ((this.bitField0_ & 0x40) != 0), getParentForChildren(), isClean()); this.enumType_ = null; }  return this.enumTypeBuilder_; } private void ensureServiceIsMutable() { if ((this.bitField0_ & 0x80) == 0) { this.service_ = new ArrayList<>(this.service_); this.bitField0_ |= 0x80; }  } public List<DescriptorProtos.ServiceDescriptorProto> getServiceList() { if (this.serviceBuilder_ == null) return Collections.unmodifiableList(this.service_);  return this.serviceBuilder_.getMessageList(); } public int getServiceCount() { if (this.serviceBuilder_ == null) return this.service_.size();  return this.serviceBuilder_.getCount(); } public DescriptorProtos.ServiceDescriptorProto getService(int index) { if (this.serviceBuilder_ == null) return this.service_.get(index);  return this.serviceBuilder_.getMessage(index); } public Builder setService(int index, DescriptorProtos.ServiceDescriptorProto value) { if (this.serviceBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureServiceIsMutable(); this.service_.set(index, value); onChanged(); } else { this.serviceBuilder_.setMessage(index, value); }  return this; } public Builder setService(int index, DescriptorProtos.ServiceDescriptorProto.Builder builderForValue) { if (this.serviceBuilder_ == null) { ensureServiceIsMutable(); this.service_.set(index, builderForValue.build()); onChanged(); } else { this.serviceBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addService(DescriptorProtos.ServiceDescriptorProto value) { if (this.serviceBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureServiceIsMutable(); this.service_.add(value); onChanged(); } else { this.serviceBuilder_.addMessage(value); }  return this; } public Builder addService(int index, DescriptorProtos.ServiceDescriptorProto value) { if (this.serviceBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureServiceIsMutable(); this.service_.add(index, value); onChanged(); } else { this.serviceBuilder_.addMessage(index, value); }  return this; } public Builder addService(DescriptorProtos.ServiceDescriptorProto.Builder builderForValue) { if (this.serviceBuilder_ == null) { ensureServiceIsMutable(); this.service_.add(builderForValue.build()); onChanged(); } else { this.serviceBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addService(int index, DescriptorProtos.ServiceDescriptorProto.Builder builderForValue) { if (this.serviceBuilder_ == null) { ensureServiceIsMutable(); this.service_.add(index, builderForValue.build()); onChanged(); } else { this.serviceBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllService(Iterable<? extends DescriptorProtos.ServiceDescriptorProto> values) { if (this.serviceBuilder_ == null) { ensureServiceIsMutable(); AbstractMessageLite.Builder.addAll(values, this.service_); onChanged(); } else { this.serviceBuilder_.addAllMessages(values); }  return this; } public Builder clearService() { if (this.serviceBuilder_ == null) { this.service_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFF7F; onChanged(); } else { this.serviceBuilder_.clear(); }  return this; } public Builder removeService(int index) { if (this.serviceBuilder_ == null) { ensureServiceIsMutable(); this.service_.remove(index); onChanged(); } else { this.serviceBuilder_.remove(index); }  return this; } public DescriptorProtos.ServiceDescriptorProto.Builder getServiceBuilder(int index) { return getServiceFieldBuilder().getBuilder(index); } public DescriptorProtos.ServiceDescriptorProtoOrBuilder getServiceOrBuilder(int index) { if (this.serviceBuilder_ == null) return this.service_.get(index);  return this.serviceBuilder_.getMessageOrBuilder(index); } public List<? extends DescriptorProtos.ServiceDescriptorProtoOrBuilder> getServiceOrBuilderList() { if (this.serviceBuilder_ != null) return this.serviceBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.service_); } public DescriptorProtos.ServiceDescriptorProto.Builder addServiceBuilder() { return getServiceFieldBuilder().addBuilder(DescriptorProtos.ServiceDescriptorProto.getDefaultInstance()); } public DescriptorProtos.ServiceDescriptorProto.Builder addServiceBuilder(int index) { return getServiceFieldBuilder().addBuilder(index, DescriptorProtos.ServiceDescriptorProto.getDefaultInstance()); } public List<DescriptorProtos.ServiceDescriptorProto.Builder> getServiceBuilderList() { return getServiceFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<DescriptorProtos.ServiceDescriptorProto, DescriptorProtos.ServiceDescriptorProto.Builder, DescriptorProtos.ServiceDescriptorProtoOrBuilder> getServiceFieldBuilder() { if (this.serviceBuilder_ == null) { this.serviceBuilder_ = new RepeatedFieldBuilderV3<>(this.service_, ((this.bitField0_ & 0x80) != 0), getParentForChildren(), isClean()); this.service_ = null; }  return this.serviceBuilder_; } private void ensureExtensionIsMutable() { if ((this.bitField0_ & 0x100) == 0) { this.extension_ = new ArrayList<>(this.extension_); this.bitField0_ |= 0x100; }  } public List<DescriptorProtos.FieldDescriptorProto> getExtensionList() { if (this.extensionBuilder_ == null) return Collections.unmodifiableList(this.extension_);  return this.extensionBuilder_.getMessageList(); } public int getExtensionCount() { if (this.extensionBuilder_ == null) return this.extension_.size();  return this.extensionBuilder_.getCount(); } public DescriptorProtos.FieldDescriptorProto getExtension(int index) { if (this.extensionBuilder_ == null) return this.extension_.get(index);  return this.extensionBuilder_.getMessage(index); } public Builder setExtension(int index, DescriptorProtos.FieldDescriptorProto value) { if (this.extensionBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionIsMutable(); this.extension_.set(index, value); onChanged(); } else { this.extensionBuilder_.setMessage(index, value); }  return this; } public Builder setExtension(int index, DescriptorProtos.FieldDescriptorProto.Builder builderForValue) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.set(index, builderForValue.build()); onChanged(); } else { this.extensionBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addExtension(DescriptorProtos.FieldDescriptorProto value) { if (this.extensionBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionIsMutable(); this.extension_.add(value); onChanged(); } else { this.extensionBuilder_.addMessage(value); }  return this; } public Builder addExtension(int index, DescriptorProtos.FieldDescriptorProto value) { if (this.extensionBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionIsMutable(); this.extension_.add(index, value); onChanged(); } else { this.extensionBuilder_.addMessage(index, value); }  return this; } public Builder addExtension(DescriptorProtos.FieldDescriptorProto.Builder builderForValue) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.add(builderForValue.build()); onChanged(); } else { this.extensionBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addExtension(int index, DescriptorProtos.FieldDescriptorProto.Builder builderForValue) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.add(index, builderForValue.build()); onChanged(); } else { this.extensionBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllExtension(Iterable<? extends DescriptorProtos.FieldDescriptorProto> values) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); AbstractMessageLite.Builder.addAll(values, this.extension_); onChanged(); } else { this.extensionBuilder_.addAllMessages(values); }  return this; } public Builder clearExtension() { if (this.extensionBuilder_ == null) { this.extension_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFEFF; onChanged(); } else { this.extensionBuilder_.clear(); }  return this; } public Builder removeExtension(int index) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.remove(index); onChanged(); } else { this.extensionBuilder_.remove(index); }  return this; } public DescriptorProtos.FieldDescriptorProto.Builder getExtensionBuilder(int index) { return getExtensionFieldBuilder().getBuilder(index); } public DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int index) { if (this.extensionBuilder_ == null) return this.extension_.get(index);  return this.extensionBuilder_.getMessageOrBuilder(index); } public List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList() { if (this.extensionBuilder_ != null) return this.extensionBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.extension_); } public DescriptorProtos.FieldDescriptorProto.Builder addExtensionBuilder() { return getExtensionFieldBuilder().addBuilder(DescriptorProtos.FieldDescriptorProto.getDefaultInstance()); } public DescriptorProtos.FieldDescriptorProto.Builder addExtensionBuilder(int index) { return getExtensionFieldBuilder().addBuilder(index, DescriptorProtos.FieldDescriptorProto.getDefaultInstance()); } public List<DescriptorProtos.FieldDescriptorProto.Builder> getExtensionBuilderList() { return getExtensionFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<DescriptorProtos.FieldDescriptorProto, DescriptorProtos.FieldDescriptorProto.Builder, DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionFieldBuilder() { if (this.extensionBuilder_ == null) { this.extensionBuilder_ = new RepeatedFieldBuilderV3<>(this.extension_, ((this.bitField0_ & 0x100) != 0), getParentForChildren(), isClean()); this.extension_ = null; }  return this.extensionBuilder_; } public boolean hasOptions() { return ((this.bitField0_ & 0x200) != 0); } public DescriptorProtos.FileOptions getOptions() { if (this.optionsBuilder_ == null) return (this.options_ == null) ? DescriptorProtos.FileOptions.getDefaultInstance() : this.options_;  return this.optionsBuilder_.getMessage(); } public Builder setOptions(DescriptorProtos.FileOptions value) { if (this.optionsBuilder_ == null) { if (value == null) throw new NullPointerException();  this.options_ = value; onChanged(); } else { this.optionsBuilder_.setMessage(value); }  this.bitField0_ |= 0x200; return this; } public Builder setOptions(DescriptorProtos.FileOptions.Builder builderForValue) { if (this.optionsBuilder_ == null) { this.options_ = builderForValue.build(); onChanged(); } else { this.optionsBuilder_.setMessage(builderForValue.build()); }  this.bitField0_ |= 0x200; return this; } public Builder mergeOptions(DescriptorProtos.FileOptions value) { if (this.optionsBuilder_ == null) { if ((this.bitField0_ & 0x200) != 0 && this.options_ != null && this.options_ != DescriptorProtos.FileOptions.getDefaultInstance()) { this.options_ = DescriptorProtos.FileOptions.newBuilder(this.options_).mergeFrom(value).buildPartial(); } else { this.options_ = value; }  onChanged(); } else { this.optionsBuilder_.mergeFrom(value); }  this.bitField0_ |= 0x200; return this; } public Builder clearOptions() { if (this.optionsBuilder_ == null) { this.options_ = null; onChanged(); } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFDFF; return this; } public DescriptorProtos.FileOptions.Builder getOptionsBuilder() { this.bitField0_ |= 0x200; onChanged(); return getOptionsFieldBuilder().getBuilder(); }
/*       */       public DescriptorProtos.FileOptionsOrBuilder getOptionsOrBuilder() { if (this.optionsBuilder_ != null) return this.optionsBuilder_.getMessageOrBuilder();  return (this.options_ == null) ? DescriptorProtos.FileOptions.getDefaultInstance() : this.options_; }
/*       */       private SingleFieldBuilderV3<DescriptorProtos.FileOptions, DescriptorProtos.FileOptions.Builder, DescriptorProtos.FileOptionsOrBuilder> getOptionsFieldBuilder() { if (this.optionsBuilder_ == null) { this.optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean()); this.options_ = null; }  return this.optionsBuilder_; }
/*       */       public boolean hasSourceCodeInfo() { return ((this.bitField0_ & 0x400) != 0); }
/*       */       public DescriptorProtos.SourceCodeInfo getSourceCodeInfo() { if (this.sourceCodeInfoBuilder_ == null) return (this.sourceCodeInfo_ == null) ? DescriptorProtos.SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_;  return this.sourceCodeInfoBuilder_.getMessage(); }
/*       */       public Builder setSourceCodeInfo(DescriptorProtos.SourceCodeInfo value) { if (this.sourceCodeInfoBuilder_ == null) { if (value == null) throw new NullPointerException();  this.sourceCodeInfo_ = value; onChanged(); } else { this.sourceCodeInfoBuilder_.setMessage(value); }  this.bitField0_ |= 0x400; return this; }
/*       */       public Builder setSourceCodeInfo(DescriptorProtos.SourceCodeInfo.Builder builderForValue) { if (this.sourceCodeInfoBuilder_ == null) { this.sourceCodeInfo_ = builderForValue.build(); onChanged(); } else { this.sourceCodeInfoBuilder_.setMessage(builderForValue.build()); }  this.bitField0_ |= 0x400; return this; }
/*       */       public Builder mergeSourceCodeInfo(DescriptorProtos.SourceCodeInfo value) { if (this.sourceCodeInfoBuilder_ == null) { if ((this.bitField0_ & 0x400) != 0 && this.sourceCodeInfo_ != null && this.sourceCodeInfo_ != DescriptorProtos.SourceCodeInfo.getDefaultInstance()) { this.sourceCodeInfo_ = DescriptorProtos.SourceCodeInfo.newBuilder(this.sourceCodeInfo_).mergeFrom(value).buildPartial(); } else { this.sourceCodeInfo_ = value; }  onChanged(); } else { this.sourceCodeInfoBuilder_.mergeFrom(value); }  this.bitField0_ |= 0x400; return this; }
/*       */       public Builder clearSourceCodeInfo() { if (this.sourceCodeInfoBuilder_ == null) { this.sourceCodeInfo_ = null; onChanged(); } else { this.sourceCodeInfoBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFBFF; return this; }
/*       */       public DescriptorProtos.SourceCodeInfo.Builder getSourceCodeInfoBuilder() { this.bitField0_ |= 0x400; onChanged(); return getSourceCodeInfoFieldBuilder().getBuilder(); }
/*       */       public DescriptorProtos.SourceCodeInfoOrBuilder getSourceCodeInfoOrBuilder() { if (this.sourceCodeInfoBuilder_ != null) return this.sourceCodeInfoBuilder_.getMessageOrBuilder();  return (this.sourceCodeInfo_ == null) ? DescriptorProtos.SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_; }
/*       */       private SingleFieldBuilderV3<DescriptorProtos.SourceCodeInfo, DescriptorProtos.SourceCodeInfo.Builder, DescriptorProtos.SourceCodeInfoOrBuilder> getSourceCodeInfoFieldBuilder() { if (this.sourceCodeInfoBuilder_ == null) { this.sourceCodeInfoBuilder_ = new SingleFieldBuilderV3<>(getSourceCodeInfo(), getParentForChildren(), isClean()); this.sourceCodeInfo_ = null; }  return this.sourceCodeInfoBuilder_; }
/*  4723 */       public String getSyntax() { Object ref = this.syntax_;
/*  4724 */         if (!(ref instanceof String)) {
/*  4725 */           ByteString bs = (ByteString)ref;
/*       */           
/*  4727 */           String s = bs.toStringUtf8();
/*  4728 */           if (bs.isValidUtf8()) {
/*  4729 */             this.syntax_ = s;
/*       */           }
/*  4731 */           return s;
/*       */         } 
/*  4733 */         return (String)ref; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getSyntaxBytes() {
/*  4747 */         Object ref = this.syntax_;
/*  4748 */         if (ref instanceof String) {
/*       */           
/*  4750 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/*  4752 */           this.syntax_ = b;
/*  4753 */           return b;
/*       */         } 
/*  4755 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setSyntax(String value) {
/*  4770 */         if (value == null) {
/*  4771 */           throw new NullPointerException();
/*       */         }
/*  4773 */         this.bitField0_ |= 0x800;
/*  4774 */         this.syntax_ = value;
/*  4775 */         onChanged();
/*  4776 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearSyntax() {
/*  4788 */         this.bitField0_ &= 0xFFFFF7FF;
/*  4789 */         this.syntax_ = DescriptorProtos.FileDescriptorProto.getDefaultInstance().getSyntax();
/*  4790 */         onChanged();
/*  4791 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setSyntaxBytes(ByteString value) {
/*  4805 */         if (value == null) {
/*  4806 */           throw new NullPointerException();
/*       */         }
/*  4808 */         this.bitField0_ |= 0x800;
/*  4809 */         this.syntax_ = value;
/*  4810 */         onChanged();
/*  4811 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/*  4816 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/*  4822 */         return super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*  4832 */     private static final FileDescriptorProto DEFAULT_INSTANCE = new FileDescriptorProto();
/*       */ 
/*       */     
/*       */     public static FileDescriptorProto getDefaultInstance() {
/*  4836 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/*  4840 */     public static final Parser<FileDescriptorProto> PARSER = new AbstractParser<FileDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.FileDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/*  4846 */           return new DescriptorProtos.FileDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FileDescriptorProto> parser() {
/*  4851 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FileDescriptorProto> getParserForType() {
/*  4856 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FileDescriptorProto getDefaultInstanceForType() {
/*  4861 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface DescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.FieldDescriptorProto> getFieldList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FieldDescriptorProto getField(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getFieldCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getFieldOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FieldDescriptorProtoOrBuilder getFieldOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.FieldDescriptorProto> getExtensionList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FieldDescriptorProto getExtension(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getExtensionCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.DescriptorProto> getNestedTypeList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.DescriptorProto getNestedType(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getNestedTypeCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtoOrBuilder> getNestedTypeOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtoOrBuilder getNestedTypeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.EnumDescriptorProto> getEnumTypeList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.EnumDescriptorProto getEnumType(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getEnumTypeCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.DescriptorProto.ExtensionRange> getExtensionRangeList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.DescriptorProto.ExtensionRange getExtensionRange(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getExtensionRangeCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder> getExtensionRangeOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder getExtensionRangeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.OneofDescriptorProto> getOneofDeclList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.OneofDescriptorProto getOneofDecl(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getOneofDeclCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.OneofDescriptorProtoOrBuilder> getOneofDeclOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.OneofDescriptorProtoOrBuilder getOneofDeclOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.MessageOptions getOptions();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.MessageOptionsOrBuilder getOptionsOrBuilder();
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.DescriptorProto.ReservedRange> getReservedRangeList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.DescriptorProto.ReservedRange getReservedRange(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getReservedRangeCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder> getReservedRangeOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder getReservedRangeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     List<String> getReservedNameList();
/*       */ 
/*       */ 
/*       */     
/*       */     int getReservedNameCount();
/*       */ 
/*       */ 
/*       */     
/*       */     String getReservedName(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getReservedNameBytes(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class DescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements DescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private volatile Object name_;
/*       */ 
/*       */     
/*       */     public static final int FIELD_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.FieldDescriptorProto> field_;
/*       */ 
/*       */     
/*       */     public static final int EXTENSION_FIELD_NUMBER = 6;
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.FieldDescriptorProto> extension_;
/*       */ 
/*       */     
/*       */     public static final int NESTED_TYPE_FIELD_NUMBER = 3;
/*       */ 
/*       */     
/*       */     private List<DescriptorProto> nestedType_;
/*       */ 
/*       */     
/*       */     public static final int ENUM_TYPE_FIELD_NUMBER = 4;
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.EnumDescriptorProto> enumType_;
/*       */ 
/*       */     
/*       */     public static final int EXTENSION_RANGE_FIELD_NUMBER = 5;
/*       */ 
/*       */     
/*       */     private List<ExtensionRange> extensionRange_;
/*       */ 
/*       */     
/*       */     public static final int ONEOF_DECL_FIELD_NUMBER = 8;
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.OneofDescriptorProto> oneofDecl_;
/*       */ 
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 7;
/*       */ 
/*       */     
/*       */     private DescriptorProtos.MessageOptions options_;
/*       */ 
/*       */     
/*       */     public static final int RESERVED_RANGE_FIELD_NUMBER = 9;
/*       */ 
/*       */     
/*       */     private List<ReservedRange> reservedRange_;
/*       */ 
/*       */     
/*       */     public static final int RESERVED_NAME_FIELD_NUMBER = 10;
/*       */ 
/*       */     
/*       */     private LazyStringList reservedName_;
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */     
/*       */     private DescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/*  5129 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*  7274 */       this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new DescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private DescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString byteString1; DescriptorProtos.MessageOptions.Builder subBuilder; ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: byteString1 = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = byteString1; continue;case 18: if ((mutable_bitField0_ & 0x2) == 0) { this.field_ = new ArrayList<>(); mutable_bitField0_ |= 0x2; }  this.field_.add(input.readMessage(DescriptorProtos.FieldDescriptorProto.PARSER, extensionRegistry)); continue;case 26: if ((mutable_bitField0_ & 0x8) == 0) { this.nestedType_ = new ArrayList<>(); mutable_bitField0_ |= 0x8; }  this.nestedType_.add(input.readMessage(PARSER, extensionRegistry)); continue;case 34: if ((mutable_bitField0_ & 0x10) == 0) { this.enumType_ = new ArrayList<>(); mutable_bitField0_ |= 0x10; }  this.enumType_.add(input.readMessage(DescriptorProtos.EnumDescriptorProto.PARSER, extensionRegistry)); continue;case 42: if ((mutable_bitField0_ & 0x20) == 0) { this.extensionRange_ = new ArrayList<>(); mutable_bitField0_ |= 0x20; }  this.extensionRange_.add(input.readMessage(ExtensionRange.PARSER, extensionRegistry)); continue;case 50: if ((mutable_bitField0_ & 0x4) == 0) { this.extension_ = new ArrayList<>(); mutable_bitField0_ |= 0x4; }  this.extension_.add(input.readMessage(DescriptorProtos.FieldDescriptorProto.PARSER, extensionRegistry)); continue;case 58: subBuilder = null; if ((this.bitField0_ & 0x2) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<DescriptorProtos.MessageOptions>readMessage(DescriptorProtos.MessageOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x2; continue;case 66: if ((mutable_bitField0_ & 0x40) == 0) { this.oneofDecl_ = new ArrayList<>(); mutable_bitField0_ |= 0x40; }  this.oneofDecl_.add(input.readMessage(DescriptorProtos.OneofDescriptorProto.PARSER, extensionRegistry)); continue;case 74: if ((mutable_bitField0_ & 0x100) == 0) { this.reservedRange_ = new ArrayList<>(); mutable_bitField0_ |= 0x100; }  this.reservedRange_.add(input.readMessage(ReservedRange.PARSER, extensionRegistry)); continue;case 82: bs = input.readBytes(); if ((mutable_bitField0_ & 0x200) == 0) { this.reservedName_ = new LazyStringArrayList(); mutable_bitField0_ |= 0x200; }  this.reservedName_.add(bs); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x2) != 0) this.field_ = Collections.unmodifiableList(this.field_);  if ((mutable_bitField0_ & 0x8) != 0) this.nestedType_ = Collections.unmodifiableList(this.nestedType_);  if ((mutable_bitField0_ & 0x10) != 0) this.enumType_ = Collections.unmodifiableList(this.enumType_);  if ((mutable_bitField0_ & 0x20) != 0) this.extensionRange_ = Collections.unmodifiableList(this.extensionRange_);  if ((mutable_bitField0_ & 0x4) != 0) this.extension_ = Collections.unmodifiableList(this.extension_);  if ((mutable_bitField0_ & 0x40) != 0) this.oneofDecl_ = Collections.unmodifiableList(this.oneofDecl_);  if ((mutable_bitField0_ & 0x100) != 0) this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_);  if ((mutable_bitField0_ & 0x200) != 0) this.reservedName_ = this.reservedName_.getUnmodifiableView();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)DescriptorProto.class, (Class)Builder.class); } public static final class ExtensionRange extends GeneratedMessageV3 implements ExtensionRangeOrBuilder { private static final long serialVersionUID = 0L; private int bitField0_; public static final int START_FIELD_NUMBER = 1; private int start_; public static final int END_FIELD_NUMBER = 2; private int end_; public static final int OPTIONS_FIELD_NUMBER = 3; private DescriptorProtos.ExtensionRangeOptions options_; private byte memoizedIsInitialized; private ExtensionRange(GeneratedMessageV3.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; } private ExtensionRange() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new ExtensionRange(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ExtensionRange(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { DescriptorProtos.ExtensionRangeOptions.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.start_ = input.readInt32(); continue;case 16: this.bitField0_ |= 0x2; this.end_ = input.readInt32(); continue;case 26: subBuilder = null; if ((this.bitField0_ & 0x4) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<DescriptorProtos.ExtensionRangeOptions>readMessage(DescriptorProtos.ExtensionRangeOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x4; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ExtensionRange.class, (Class)Builder.class); } public boolean hasStart() { return ((this.bitField0_ & 0x1) != 0); } public int getStart() { return this.start_; } public boolean hasEnd() { return ((this.bitField0_ & 0x2) != 0); } public int getEnd() { return this.end_; } public boolean hasOptions() { return ((this.bitField0_ & 0x4) != 0); } public DescriptorProtos.ExtensionRangeOptions getOptions() { return (this.options_ == null) ? DescriptorProtos.ExtensionRangeOptions.getDefaultInstance() : this.options_; } public DescriptorProtos.ExtensionRangeOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? DescriptorProtos.ExtensionRangeOptions.getDefaultInstance() : this.options_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  if (hasOptions() && !getOptions().isInitialized()) { this.memoizedIsInitialized = 0; return false; }  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { if ((this.bitField0_ & 0x1) != 0) output.writeInt32(1, this.start_);  if ((this.bitField0_ & 0x2) != 0) output.writeInt32(2, this.end_);  if ((this.bitField0_ & 0x4) != 0) output.writeMessage(3, getOptions());  this.unknownFields.writeTo(output); } public int getSerializedSize() { int size = this.memoizedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) != 0) size += CodedOutputStream.computeInt32Size(1, this.start_);  if ((this.bitField0_ & 0x2) != 0) size += CodedOutputStream.computeInt32Size(2, this.end_);  if ((this.bitField0_ & 0x4) != 0) size += CodedOutputStream.computeMessageSize(3, getOptions());  size += this.unknownFields.getSerializedSize(); this.memoizedSize = size; return size; } public boolean equals(Object obj) { if (obj == this) return true;  if (!(obj instanceof ExtensionRange)) return super.equals(obj);  ExtensionRange other = (ExtensionRange)obj; if (hasStart() != other.hasStart()) return false;  if (hasStart() && getStart() != other.getStart()) return false;  if (hasEnd() != other.hasEnd()) return false;  if (hasEnd() && getEnd() != other.getEnd()) return false;  if (hasOptions() != other.hasOptions()) return false;  if (hasOptions() && !getOptions().equals(other.getOptions())) return false;  if (!this.unknownFields.equals(other.unknownFields)) return false;  return true; } public int hashCode() { if (this.memoizedHashCode != 0) return this.memoizedHashCode;  int hash = 41; hash = 19 * hash + getDescriptor().hashCode(); if (hasStart()) { hash = 37 * hash + 1; hash = 53 * hash + getStart(); }  if (hasEnd()) { hash = 37 * hash + 2; hash = 53 * hash + getEnd(); }  if (hasOptions()) { hash = 37 * hash + 3; hash = 53 * hash + getOptions().hashCode(); }  hash = 29 * hash + this.unknownFields.hashCode(); this.memoizedHashCode = hash; return hash; } public static ExtensionRange parseFrom(ByteBuffer data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static ExtensionRange parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static ExtensionRange parseFrom(ByteString data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static ExtensionRange parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static ExtensionRange parseFrom(byte[] data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static ExtensionRange parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static ExtensionRange parseFrom(InputStream input) throws IOException { return GeneratedMessageV3.<ExtensionRange>parseWithIOException(PARSER, input); } public static ExtensionRange parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<ExtensionRange>parseWithIOException(PARSER, input, extensionRegistry); } public static ExtensionRange parseDelimitedFrom(InputStream input) throws IOException { return GeneratedMessageV3.<ExtensionRange>parseDelimitedWithIOException(PARSER, input); } public static ExtensionRange parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<ExtensionRange>parseDelimitedWithIOException(PARSER, input, extensionRegistry); } public static ExtensionRange parseFrom(CodedInputStream input) throws IOException { return GeneratedMessageV3.<ExtensionRange>parseWithIOException(PARSER, input); } public static ExtensionRange parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<ExtensionRange>parseWithIOException(PARSER, input, extensionRegistry); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder() { return DEFAULT_INSTANCE.toBuilder(); } public static Builder newBuilder(ExtensionRange prototype) { return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype); } public Builder toBuilder() { return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this); } protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder { private int bitField0_; private int start_; private int end_; private DescriptorProtos.ExtensionRangeOptions options_; private SingleFieldBuilderV3<DescriptorProtos.ExtensionRangeOptions, DescriptorProtos.ExtensionRangeOptions.Builder, DescriptorProtos.ExtensionRangeOptionsOrBuilder> optionsBuilder_; public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)DescriptorProtos.DescriptorProto.ExtensionRange.class, (Class)Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getOptionsFieldBuilder();  } public Builder clear() { super.clear(); this.start_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.end_ = 0; this.bitField0_ &= 0xFFFFFFFD; if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor; } public DescriptorProtos.DescriptorProto.ExtensionRange getDefaultInstanceForType() { return DescriptorProtos.DescriptorProto.ExtensionRange.getDefaultInstance(); } public DescriptorProtos.DescriptorProto.ExtensionRange build() { DescriptorProtos.DescriptorProto.ExtensionRange result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.DescriptorProto.ExtensionRange buildPartial() { DescriptorProtos.DescriptorProto.ExtensionRange result = new DescriptorProtos.DescriptorProto.ExtensionRange(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.start_ = this.start_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) { result.end_ = this.end_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x4) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x4; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.DescriptorProto.ExtensionRange) return mergeFrom((DescriptorProtos.DescriptorProto.ExtensionRange)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.DescriptorProto.ExtensionRange other) { if (other == DescriptorProtos.DescriptorProto.ExtensionRange.getDefaultInstance()) return this;  if (other.hasStart()) setStart(other.getStart());  if (other.hasEnd()) setEnd(other.getEnd());  if (other.hasOptions()) mergeOptions(other.getOptions());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.DescriptorProto.ExtensionRange parsedMessage = null; try { parsedMessage = DescriptorProtos.DescriptorProto.ExtensionRange.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.DescriptorProto.ExtensionRange)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasStart() { return ((this.bitField0_ & 0x1) != 0); } public int getStart() { return this.start_; } public Builder setStart(int value) { this.bitField0_ |= 0x1; this.start_ = value; onChanged(); return this; } public Builder clearStart() { this.bitField0_ &= 0xFFFFFFFE; this.start_ = 0; onChanged(); return this; } public boolean hasEnd() { return ((this.bitField0_ & 0x2) != 0); } public int getEnd() { return this.end_; } public Builder setEnd(int value) { this.bitField0_ |= 0x2; this.end_ = value; onChanged(); return this; } public Builder clearEnd() { this.bitField0_ &= 0xFFFFFFFD; this.end_ = 0; onChanged(); return this; } public boolean hasOptions() { return ((this.bitField0_ & 0x4) != 0); } public DescriptorProtos.ExtensionRangeOptions getOptions() { if (this.optionsBuilder_ == null) return (this.options_ == null) ? DescriptorProtos.ExtensionRangeOptions.getDefaultInstance() : this.options_;  return this.optionsBuilder_.getMessage(); } public Builder setOptions(DescriptorProtos.ExtensionRangeOptions value) { if (this.optionsBuilder_ == null) { if (value == null) throw new NullPointerException();  this.options_ = value; onChanged(); } else { this.optionsBuilder_.setMessage(value); }  this.bitField0_ |= 0x4; return this; } public Builder setOptions(DescriptorProtos.ExtensionRangeOptions.Builder builderForValue) { if (this.optionsBuilder_ == null) { this.options_ = builderForValue.build(); onChanged(); } else { this.optionsBuilder_.setMessage(builderForValue.build()); }  this.bitField0_ |= 0x4; return this; } public Builder mergeOptions(DescriptorProtos.ExtensionRangeOptions value) { if (this.optionsBuilder_ == null) { if ((this.bitField0_ & 0x4) != 0 && this.options_ != null && this.options_ != DescriptorProtos.ExtensionRangeOptions.getDefaultInstance()) { this.options_ = DescriptorProtos.ExtensionRangeOptions.newBuilder(this.options_).mergeFrom(value).buildPartial(); } else { this.options_ = value; }  onChanged(); } else { this.optionsBuilder_.mergeFrom(value); }  this.bitField0_ |= 0x4; return this; } public Builder clearOptions() { if (this.optionsBuilder_ == null) { this.options_ = null; onChanged(); } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; return this; } public DescriptorProtos.ExtensionRangeOptions.Builder getOptionsBuilder() { this.bitField0_ |= 0x4; onChanged(); return getOptionsFieldBuilder().getBuilder(); } public DescriptorProtos.ExtensionRangeOptionsOrBuilder getOptionsOrBuilder() { if (this.optionsBuilder_ != null) return this.optionsBuilder_.getMessageOrBuilder();  return (this.options_ == null) ? DescriptorProtos.ExtensionRangeOptions.getDefaultInstance() : this.options_; } private SingleFieldBuilderV3<DescriptorProtos.ExtensionRangeOptions, DescriptorProtos.ExtensionRangeOptions.Builder, DescriptorProtos.ExtensionRangeOptionsOrBuilder> getOptionsFieldBuilder() { if (this.optionsBuilder_ == null) { this.optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean()); this.options_ = null; }  return this.optionsBuilder_; } public final Builder setUnknownFields(UnknownFieldSet unknownFields) { return super.setUnknownFields(unknownFields); } public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) { return super.mergeUnknownFields(unknownFields); } } private static final ExtensionRange DEFAULT_INSTANCE = new ExtensionRange(); public static ExtensionRange getDefaultInstance() { return DEFAULT_INSTANCE; } @Deprecated public static final Parser<ExtensionRange> PARSER = new AbstractParser<ExtensionRange>() { public DescriptorProtos.DescriptorProto.ExtensionRange parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new DescriptorProtos.DescriptorProto.ExtensionRange(input, extensionRegistry); } }; public static Parser<ExtensionRange> parser() { return PARSER; } public Parser<ExtensionRange> getParserForType() { return PARSER; } public ExtensionRange getDefaultInstanceForType() { return DEFAULT_INSTANCE; } } public static final class ReservedRange extends GeneratedMessageV3 implements ReservedRangeOrBuilder { private static final long serialVersionUID = 0L; private int bitField0_; public static final int START_FIELD_NUMBER = 1; private int start_; public static final int END_FIELD_NUMBER = 2; private int end_; private byte memoizedIsInitialized; private ReservedRange(GeneratedMessageV3.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; } private ReservedRange() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new ReservedRange(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ReservedRange(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.start_ = input.readInt32(); continue;case 16: this.bitField0_ |= 0x2; this.end_ = input.readInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ReservedRange.class, (Class)Builder.class); } public boolean hasStart() { return ((this.bitField0_ & 0x1) != 0); } public int getStart() { return this.start_; } public boolean hasEnd() { return ((this.bitField0_ & 0x2) != 0); } public int getEnd() { return this.end_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { if ((this.bitField0_ & 0x1) != 0) output.writeInt32(1, this.start_);  if ((this.bitField0_ & 0x2) != 0) output.writeInt32(2, this.end_);  this.unknownFields.writeTo(output); } public int getSerializedSize() { int size = this.memoizedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) != 0) size += CodedOutputStream.computeInt32Size(1, this.start_);  if ((this.bitField0_ & 0x2) != 0) size += CodedOutputStream.computeInt32Size(2, this.end_);  size += this.unknownFields.getSerializedSize(); this.memoizedSize = size; return size; } public boolean equals(Object obj) { if (obj == this) return true;  if (!(obj instanceof ReservedRange)) return super.equals(obj);  ReservedRange other = (ReservedRange)obj; if (hasStart() != other.hasStart()) return false;  if (hasStart() && getStart() != other.getStart()) return false;  if (hasEnd() != other.hasEnd()) return false;  if (hasEnd() && getEnd() != other.getEnd()) return false;  if (!this.unknownFields.equals(other.unknownFields)) return false;  return true; } public int hashCode() { if (this.memoizedHashCode != 0) return this.memoizedHashCode;  int hash = 41; hash = 19 * hash + getDescriptor().hashCode(); if (hasStart()) { hash = 37 * hash + 1; hash = 53 * hash + getStart(); }  if (hasEnd()) { hash = 37 * hash + 2; hash = 53 * hash + getEnd(); }  hash = 29 * hash + this.unknownFields.hashCode(); this.memoizedHashCode = hash; return hash; } public static ReservedRange parseFrom(ByteBuffer data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static ReservedRange parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static ReservedRange parseFrom(ByteString data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static ReservedRange parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static ReservedRange parseFrom(byte[] data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static ReservedRange parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static ReservedRange parseFrom(InputStream input) throws IOException { return GeneratedMessageV3.<ReservedRange>parseWithIOException(PARSER, input); } public static ReservedRange parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<ReservedRange>parseWithIOException(PARSER, input, extensionRegistry); } public static ReservedRange parseDelimitedFrom(InputStream input) throws IOException { return GeneratedMessageV3.<ReservedRange>parseDelimitedWithIOException(PARSER, input); } public static ReservedRange parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<ReservedRange>parseDelimitedWithIOException(PARSER, input, extensionRegistry); } public static ReservedRange parseFrom(CodedInputStream input) throws IOException { return GeneratedMessageV3.<ReservedRange>parseWithIOException(PARSER, input); } public static ReservedRange parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<ReservedRange>parseWithIOException(PARSER, input, extensionRegistry); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder() { return DEFAULT_INSTANCE.toBuilder(); } public static Builder newBuilder(ReservedRange prototype) { return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype); } public Builder toBuilder() { return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this); } protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder { private int bitField0_; private int start_; private int end_; public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)DescriptorProtos.DescriptorProto.ReservedRange.class, (Class)Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.start_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.end_ = 0; this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor; } public DescriptorProtos.DescriptorProto.ReservedRange getDefaultInstanceForType() { return DescriptorProtos.DescriptorProto.ReservedRange.getDefaultInstance(); } public DescriptorProtos.DescriptorProto.ReservedRange build() { DescriptorProtos.DescriptorProto.ReservedRange result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.DescriptorProto.ReservedRange buildPartial() { DescriptorProtos.DescriptorProto.ReservedRange result = new DescriptorProtos.DescriptorProto.ReservedRange(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.start_ = this.start_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) { result.end_ = this.end_; to_bitField0_ |= 0x2; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.DescriptorProto.ReservedRange) return mergeFrom((DescriptorProtos.DescriptorProto.ReservedRange)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.DescriptorProto.ReservedRange other) { if (other == DescriptorProtos.DescriptorProto.ReservedRange.getDefaultInstance()) return this;  if (other.hasStart()) setStart(other.getStart());  if (other.hasEnd()) setEnd(other.getEnd());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.DescriptorProto.ReservedRange parsedMessage = null; try { parsedMessage = DescriptorProtos.DescriptorProto.ReservedRange.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.DescriptorProto.ReservedRange)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasStart() { return ((this.bitField0_ & 0x1) != 0); } public int getStart() { return this.start_; } public Builder setStart(int value) { this.bitField0_ |= 0x1; this.start_ = value; onChanged(); return this; } public Builder clearStart() { this.bitField0_ &= 0xFFFFFFFE; this.start_ = 0; onChanged(); return this; } public boolean hasEnd() { return ((this.bitField0_ & 0x2) != 0); } public int getEnd() { return this.end_; } public Builder setEnd(int value) { this.bitField0_ |= 0x2; this.end_ = value; onChanged(); return this; } public Builder clearEnd() { this.bitField0_ &= 0xFFFFFFFD; this.end_ = 0; onChanged(); return this; } public final Builder setUnknownFields(UnknownFieldSet unknownFields) { return super.setUnknownFields(unknownFields); } public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) { return super.mergeUnknownFields(unknownFields); } } private static final ReservedRange DEFAULT_INSTANCE = new ReservedRange(); public static ReservedRange getDefaultInstance() { return DEFAULT_INSTANCE; } @Deprecated public static final Parser<ReservedRange> PARSER = new AbstractParser<ReservedRange>() { public DescriptorProtos.DescriptorProto.ReservedRange parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new DescriptorProtos.DescriptorProto.ReservedRange(input, extensionRegistry); } }; public static Parser<ReservedRange> parser() { return PARSER; } public Parser<ReservedRange> getParserForType() { return PARSER; } public ReservedRange getDefaultInstanceForType() { return DEFAULT_INSTANCE; } } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public List<DescriptorProtos.FieldDescriptorProto> getFieldList() { return this.field_; } public List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getFieldOrBuilderList() { return (List)this.field_; } public int getFieldCount() { return this.field_.size(); } private DescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; this.field_ = Collections.emptyList(); this.extension_ = Collections.emptyList(); this.nestedType_ = Collections.emptyList(); this.enumType_ = Collections.emptyList(); this.extensionRange_ = Collections.emptyList(); this.oneofDecl_ = Collections.emptyList(); this.reservedRange_ = Collections.emptyList(); this.reservedName_ = LazyStringArrayList.EMPTY; }
/*       */     public DescriptorProtos.FieldDescriptorProto getField(int index) { return this.field_.get(index); }
/*       */     public DescriptorProtos.FieldDescriptorProtoOrBuilder getFieldOrBuilder(int index) { return this.field_.get(index); }
/*  7277 */     public List<DescriptorProtos.FieldDescriptorProto> getExtensionList() { return this.extension_; } public List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList() { return (List)this.extension_; } public int getExtensionCount() { return this.extension_.size(); } public DescriptorProtos.FieldDescriptorProto getExtension(int index) { return this.extension_.get(index); } public DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int index) { return this.extension_.get(index); } public List<DescriptorProto> getNestedTypeList() { return this.nestedType_; } public List<? extends DescriptorProtos.DescriptorProtoOrBuilder> getNestedTypeOrBuilderList() { return (List)this.nestedType_; } public int getNestedTypeCount() { return this.nestedType_.size(); } public DescriptorProto getNestedType(int index) { return this.nestedType_.get(index); } public DescriptorProtos.DescriptorProtoOrBuilder getNestedTypeOrBuilder(int index) { return this.nestedType_.get(index); } public List<DescriptorProtos.EnumDescriptorProto> getEnumTypeList() { return this.enumType_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/*  7278 */       if (isInitialized == 1) return true; 
/*  7279 */       if (isInitialized == 0) return false; 
/*       */       int i;
/*  7281 */       for (i = 0; i < getFieldCount(); i++) {
/*  7282 */         if (!getField(i).isInitialized()) {
/*  7283 */           this.memoizedIsInitialized = 0;
/*  7284 */           return false;
/*       */         } 
/*       */       } 
/*  7287 */       for (i = 0; i < getExtensionCount(); i++) {
/*  7288 */         if (!getExtension(i).isInitialized()) {
/*  7289 */           this.memoizedIsInitialized = 0;
/*  7290 */           return false;
/*       */         } 
/*       */       } 
/*  7293 */       for (i = 0; i < getNestedTypeCount(); i++) {
/*  7294 */         if (!getNestedType(i).isInitialized()) {
/*  7295 */           this.memoizedIsInitialized = 0;
/*  7296 */           return false;
/*       */         } 
/*       */       } 
/*  7299 */       for (i = 0; i < getEnumTypeCount(); i++) {
/*  7300 */         if (!getEnumType(i).isInitialized()) {
/*  7301 */           this.memoizedIsInitialized = 0;
/*  7302 */           return false;
/*       */         } 
/*       */       } 
/*  7305 */       for (i = 0; i < getExtensionRangeCount(); i++) {
/*  7306 */         if (!getExtensionRange(i).isInitialized()) {
/*  7307 */           this.memoizedIsInitialized = 0;
/*  7308 */           return false;
/*       */         } 
/*       */       } 
/*  7311 */       for (i = 0; i < getOneofDeclCount(); i++) {
/*  7312 */         if (!getOneofDecl(i).isInitialized()) {
/*  7313 */           this.memoizedIsInitialized = 0;
/*  7314 */           return false;
/*       */         } 
/*       */       } 
/*  7317 */       if (hasOptions() && 
/*  7318 */         !getOptions().isInitialized()) {
/*  7319 */         this.memoizedIsInitialized = 0;
/*  7320 */         return false;
/*       */       } 
/*       */       
/*  7323 */       this.memoizedIsInitialized = 1;
/*  7324 */       return true; } public List<? extends DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList() { return (List)this.enumType_; } public int getEnumTypeCount() { return this.enumType_.size(); } public DescriptorProtos.EnumDescriptorProto getEnumType(int index) { return this.enumType_.get(index); } public DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int index) { return this.enumType_.get(index); } public List<ExtensionRange> getExtensionRangeList() { return this.extensionRange_; } public List<? extends ExtensionRangeOrBuilder> getExtensionRangeOrBuilderList() { return (List)this.extensionRange_; } public int getExtensionRangeCount() { return this.extensionRange_.size(); } public ExtensionRange getExtensionRange(int index) { return this.extensionRange_.get(index); } public ExtensionRangeOrBuilder getExtensionRangeOrBuilder(int index) { return this.extensionRange_.get(index); } public List<DescriptorProtos.OneofDescriptorProto> getOneofDeclList() { return this.oneofDecl_; } public List<? extends DescriptorProtos.OneofDescriptorProtoOrBuilder> getOneofDeclOrBuilderList() { return (List)this.oneofDecl_; } public int getOneofDeclCount() { return this.oneofDecl_.size(); } public DescriptorProtos.OneofDescriptorProto getOneofDecl(int index) { return this.oneofDecl_.get(index); } public DescriptorProtos.OneofDescriptorProtoOrBuilder getOneofDeclOrBuilder(int index) { return this.oneofDecl_.get(index); } public boolean hasOptions() { return ((this.bitField0_ & 0x2) != 0); } public DescriptorProtos.MessageOptions getOptions() { return (this.options_ == null) ? DescriptorProtos.MessageOptions.getDefaultInstance() : this.options_; } public DescriptorProtos.MessageOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? DescriptorProtos.MessageOptions.getDefaultInstance() : this.options_; } public List<ReservedRange> getReservedRangeList() { return this.reservedRange_; } public List<? extends ReservedRangeOrBuilder> getReservedRangeOrBuilderList() { return (List)this.reservedRange_; } public int getReservedRangeCount() { return this.reservedRange_.size(); } public ReservedRange getReservedRange(int index) { return this.reservedRange_.get(index); }
/*       */     public ReservedRangeOrBuilder getReservedRangeOrBuilder(int index) { return this.reservedRange_.get(index); }
/*       */     public ProtocolStringList getReservedNameList() { return this.reservedName_; }
/*       */     public int getReservedNameCount() { return this.reservedName_.size(); }
/*       */     public String getReservedName(int index) { return this.reservedName_.get(index); }
/*       */     public ByteString getReservedNameBytes(int index) { return this.reservedName_.getByteString(index); }
/*  7330 */     public void writeTo(CodedOutputStream output) throws IOException { if ((this.bitField0_ & 0x1) != 0)
/*  7331 */         GeneratedMessageV3.writeString(output, 1, this.name_); 
/*       */       int i;
/*  7333 */       for (i = 0; i < this.field_.size(); i++) {
/*  7334 */         output.writeMessage(2, this.field_.get(i));
/*       */       }
/*  7336 */       for (i = 0; i < this.nestedType_.size(); i++) {
/*  7337 */         output.writeMessage(3, this.nestedType_.get(i));
/*       */       }
/*  7339 */       for (i = 0; i < this.enumType_.size(); i++) {
/*  7340 */         output.writeMessage(4, this.enumType_.get(i));
/*       */       }
/*  7342 */       for (i = 0; i < this.extensionRange_.size(); i++) {
/*  7343 */         output.writeMessage(5, this.extensionRange_.get(i));
/*       */       }
/*  7345 */       for (i = 0; i < this.extension_.size(); i++) {
/*  7346 */         output.writeMessage(6, this.extension_.get(i));
/*       */       }
/*  7348 */       if ((this.bitField0_ & 0x2) != 0) {
/*  7349 */         output.writeMessage(7, getOptions());
/*       */       }
/*  7351 */       for (i = 0; i < this.oneofDecl_.size(); i++) {
/*  7352 */         output.writeMessage(8, this.oneofDecl_.get(i));
/*       */       }
/*  7354 */       for (i = 0; i < this.reservedRange_.size(); i++) {
/*  7355 */         output.writeMessage(9, this.reservedRange_.get(i));
/*       */       }
/*  7357 */       for (i = 0; i < this.reservedName_.size(); i++) {
/*  7358 */         GeneratedMessageV3.writeString(output, 10, this.reservedName_.getRaw(i));
/*       */       }
/*  7360 */       this.unknownFields.writeTo(output); }
/*       */ 
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/*  7365 */       int size = this.memoizedSize;
/*  7366 */       if (size != -1) return size;
/*       */       
/*  7368 */       size = 0;
/*  7369 */       if ((this.bitField0_ & 0x1) != 0)
/*  7370 */         size += GeneratedMessageV3.computeStringSize(1, this.name_); 
/*       */       int i;
/*  7372 */       for (i = 0; i < this.field_.size(); i++) {
/*  7373 */         size += 
/*  7374 */           CodedOutputStream.computeMessageSize(2, this.field_.get(i));
/*       */       }
/*  7376 */       for (i = 0; i < this.nestedType_.size(); i++) {
/*  7377 */         size += 
/*  7378 */           CodedOutputStream.computeMessageSize(3, this.nestedType_.get(i));
/*       */       }
/*  7380 */       for (i = 0; i < this.enumType_.size(); i++) {
/*  7381 */         size += 
/*  7382 */           CodedOutputStream.computeMessageSize(4, this.enumType_.get(i));
/*       */       }
/*  7384 */       for (i = 0; i < this.extensionRange_.size(); i++) {
/*  7385 */         size += 
/*  7386 */           CodedOutputStream.computeMessageSize(5, this.extensionRange_.get(i));
/*       */       }
/*  7388 */       for (i = 0; i < this.extension_.size(); i++) {
/*  7389 */         size += 
/*  7390 */           CodedOutputStream.computeMessageSize(6, this.extension_.get(i));
/*       */       }
/*  7392 */       if ((this.bitField0_ & 0x2) != 0) {
/*  7393 */         size += 
/*  7394 */           CodedOutputStream.computeMessageSize(7, getOptions());
/*       */       }
/*  7396 */       for (i = 0; i < this.oneofDecl_.size(); i++) {
/*  7397 */         size += 
/*  7398 */           CodedOutputStream.computeMessageSize(8, this.oneofDecl_.get(i));
/*       */       }
/*  7400 */       for (i = 0; i < this.reservedRange_.size(); i++) {
/*  7401 */         size += 
/*  7402 */           CodedOutputStream.computeMessageSize(9, this.reservedRange_.get(i));
/*       */       }
/*       */       
/*  7405 */       int dataSize = 0;
/*  7406 */       for (int j = 0; j < this.reservedName_.size(); j++) {
/*  7407 */         dataSize += computeStringSizeNoTag(this.reservedName_.getRaw(j));
/*       */       }
/*  7409 */       size += dataSize;
/*  7410 */       size += 1 * getReservedNameList().size();
/*       */       
/*  7412 */       size += this.unknownFields.getSerializedSize();
/*  7413 */       this.memoizedSize = size;
/*  7414 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/*  7419 */       if (obj == this) {
/*  7420 */         return true;
/*       */       }
/*  7422 */       if (!(obj instanceof DescriptorProto)) {
/*  7423 */         return super.equals(obj);
/*       */       }
/*  7425 */       DescriptorProto other = (DescriptorProto)obj;
/*       */       
/*  7427 */       if (hasName() != other.hasName()) return false; 
/*  7428 */       if (hasName() && 
/*       */         
/*  7430 */         !getName().equals(other.getName())) return false;
/*       */ 
/*       */       
/*  7433 */       if (!getFieldList().equals(other.getFieldList())) return false;
/*       */       
/*  7435 */       if (!getExtensionList().equals(other.getExtensionList())) return false;
/*       */       
/*  7437 */       if (!getNestedTypeList().equals(other.getNestedTypeList())) return false;
/*       */       
/*  7439 */       if (!getEnumTypeList().equals(other.getEnumTypeList())) return false;
/*       */       
/*  7441 */       if (!getExtensionRangeList().equals(other.getExtensionRangeList())) return false;
/*       */       
/*  7443 */       if (!getOneofDeclList().equals(other.getOneofDeclList())) return false; 
/*  7444 */       if (hasOptions() != other.hasOptions()) return false; 
/*  7445 */       if (hasOptions() && 
/*       */         
/*  7447 */         !getOptions().equals(other.getOptions())) return false;
/*       */ 
/*       */       
/*  7450 */       if (!getReservedRangeList().equals(other.getReservedRangeList())) return false;
/*       */       
/*  7452 */       if (!getReservedNameList().equals(other.getReservedNameList())) return false; 
/*  7453 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/*  7454 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/*  7459 */       if (this.memoizedHashCode != 0) {
/*  7460 */         return this.memoizedHashCode;
/*       */       }
/*  7462 */       int hash = 41;
/*  7463 */       hash = 19 * hash + getDescriptor().hashCode();
/*  7464 */       if (hasName()) {
/*  7465 */         hash = 37 * hash + 1;
/*  7466 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/*  7468 */       if (getFieldCount() > 0) {
/*  7469 */         hash = 37 * hash + 2;
/*  7470 */         hash = 53 * hash + getFieldList().hashCode();
/*       */       } 
/*  7472 */       if (getExtensionCount() > 0) {
/*  7473 */         hash = 37 * hash + 6;
/*  7474 */         hash = 53 * hash + getExtensionList().hashCode();
/*       */       } 
/*  7476 */       if (getNestedTypeCount() > 0) {
/*  7477 */         hash = 37 * hash + 3;
/*  7478 */         hash = 53 * hash + getNestedTypeList().hashCode();
/*       */       } 
/*  7480 */       if (getEnumTypeCount() > 0) {
/*  7481 */         hash = 37 * hash + 4;
/*  7482 */         hash = 53 * hash + getEnumTypeList().hashCode();
/*       */       } 
/*  7484 */       if (getExtensionRangeCount() > 0) {
/*  7485 */         hash = 37 * hash + 5;
/*  7486 */         hash = 53 * hash + getExtensionRangeList().hashCode();
/*       */       } 
/*  7488 */       if (getOneofDeclCount() > 0) {
/*  7489 */         hash = 37 * hash + 8;
/*  7490 */         hash = 53 * hash + getOneofDeclList().hashCode();
/*       */       } 
/*  7492 */       if (hasOptions()) {
/*  7493 */         hash = 37 * hash + 7;
/*  7494 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/*  7496 */       if (getReservedRangeCount() > 0) {
/*  7497 */         hash = 37 * hash + 9;
/*  7498 */         hash = 53 * hash + getReservedRangeList().hashCode();
/*       */       } 
/*  7500 */       if (getReservedNameCount() > 0) {
/*  7501 */         hash = 37 * hash + 10;
/*  7502 */         hash = 53 * hash + getReservedNameList().hashCode();
/*       */       } 
/*  7504 */       hash = 29 * hash + this.unknownFields.hashCode();
/*  7505 */       this.memoizedHashCode = hash;
/*  7506 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/*  7512 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  7518 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/*  7523 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  7529 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/*  7533 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/*  7539 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DescriptorProto parseFrom(InputStream input) throws IOException {
/*  7543 */       return 
/*  7544 */         GeneratedMessageV3.<DescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  7550 */       return 
/*  7551 */         GeneratedMessageV3.<DescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static DescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/*  7555 */       return 
/*  7556 */         GeneratedMessageV3.<DescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  7562 */       return 
/*  7563 */         GeneratedMessageV3.<DescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(CodedInputStream input) throws IOException {
/*  7568 */       return 
/*  7569 */         GeneratedMessageV3.<DescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static DescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/*  7575 */       return 
/*  7576 */         GeneratedMessageV3.<DescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/*  7580 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/*  7582 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(DescriptorProto prototype) {
/*  7585 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/*  7589 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/*  7590 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/*  7596 */       Builder builder = new Builder(parent);
/*  7597 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DescriptorProtos.DescriptorProtoOrBuilder { private int bitField0_; private Object name_; private List<DescriptorProtos.FieldDescriptorProto> field_; private RepeatedFieldBuilderV3<DescriptorProtos.FieldDescriptorProto, DescriptorProtos.FieldDescriptorProto.Builder, DescriptorProtos.FieldDescriptorProtoOrBuilder> fieldBuilder_; private List<DescriptorProtos.FieldDescriptorProto> extension_; private RepeatedFieldBuilderV3<DescriptorProtos.FieldDescriptorProto, DescriptorProtos.FieldDescriptorProto.Builder, DescriptorProtos.FieldDescriptorProtoOrBuilder> extensionBuilder_; private List<DescriptorProtos.DescriptorProto> nestedType_; private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto, Builder, DescriptorProtos.DescriptorProtoOrBuilder> nestedTypeBuilder_; private List<DescriptorProtos.EnumDescriptorProto> enumType_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.EnumDescriptorProto, DescriptorProtos.EnumDescriptorProto.Builder, DescriptorProtos.EnumDescriptorProtoOrBuilder> enumTypeBuilder_;
/*       */       private List<DescriptorProtos.DescriptorProto.ExtensionRange> extensionRange_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto.ExtensionRange, DescriptorProtos.DescriptorProto.ExtensionRange.Builder, DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder> extensionRangeBuilder_;
/*       */       private List<DescriptorProtos.OneofDescriptorProto> oneofDecl_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.OneofDescriptorProto, DescriptorProtos.OneofDescriptorProto.Builder, DescriptorProtos.OneofDescriptorProtoOrBuilder> oneofDeclBuilder_;
/*       */       private DescriptorProtos.MessageOptions options_;
/*       */       private SingleFieldBuilderV3<DescriptorProtos.MessageOptions, DescriptorProtos.MessageOptions.Builder, DescriptorProtos.MessageOptionsOrBuilder> optionsBuilder_;
/*       */       private List<DescriptorProtos.DescriptorProto.ReservedRange> reservedRange_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto.ReservedRange, DescriptorProtos.DescriptorProto.ReservedRange.Builder, DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder> reservedRangeBuilder_;
/*       */       private LazyStringList reservedName_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/*  7612 */         return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/*  7618 */         return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_fieldAccessorTable
/*  7619 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.DescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/*  8123 */         this.name_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  8207 */         this
/*  8208 */           .field_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  8447 */         this
/*  8448 */           .extension_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  8687 */         this
/*  8688 */           .nestedType_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  8927 */         this
/*  8928 */           .enumType_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  9167 */         this
/*  9168 */           .extensionRange_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  9407 */         this
/*  9408 */           .oneofDecl_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/*  9767 */         this
/*  9768 */           .reservedRange_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 10007 */         this.reservedName_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.name_ = ""; this.field_ = Collections.emptyList(); this.extension_ = Collections.emptyList(); this.nestedType_ = Collections.emptyList(); this.enumType_ = Collections.emptyList(); this.extensionRange_ = Collections.emptyList(); this.oneofDecl_ = Collections.emptyList(); this.reservedRange_ = Collections.emptyList(); this.reservedName_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) { getFieldFieldBuilder(); getExtensionFieldBuilder(); getNestedTypeFieldBuilder(); getEnumTypeFieldBuilder(); getExtensionRangeFieldBuilder(); getOneofDeclFieldBuilder(); getOptionsFieldBuilder(); getReservedRangeFieldBuilder(); }  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; if (this.fieldBuilder_ == null) { this.field_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; } else { this.fieldBuilder_.clear(); }  if (this.extensionBuilder_ == null) { this.extension_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFB; } else { this.extensionBuilder_.clear(); }  if (this.nestedTypeBuilder_ == null) { this.nestedType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFF7; } else { this.nestedTypeBuilder_.clear(); }  if (this.enumTypeBuilder_ == null) { this.enumType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFEF; } else { this.enumTypeBuilder_.clear(); }  if (this.extensionRangeBuilder_ == null) { this.extensionRange_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFDF; } else { this.extensionRangeBuilder_.clear(); }  if (this.oneofDeclBuilder_ == null) { this.oneofDecl_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFBF; } else { this.oneofDeclBuilder_.clear(); }  if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFF7F; if (this.reservedRangeBuilder_ == null) { this.reservedRange_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFEFF; } else { this.reservedRangeBuilder_.clear(); }  this.reservedName_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFDFF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_descriptor; } public DescriptorProtos.DescriptorProto getDefaultInstanceForType() { return DescriptorProtos.DescriptorProto.getDefaultInstance(); } public DescriptorProtos.DescriptorProto build() { DescriptorProtos.DescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.DescriptorProto buildPartial() { DescriptorProtos.DescriptorProto result = new DescriptorProtos.DescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if (this.fieldBuilder_ == null) { if ((this.bitField0_ & 0x2) != 0) { this.field_ = Collections.unmodifiableList(this.field_); this.bitField0_ &= 0xFFFFFFFD; }  result.field_ = this.field_; } else { result.field_ = this.fieldBuilder_.build(); }  if (this.extensionBuilder_ == null) { if ((this.bitField0_ & 0x4) != 0) { this.extension_ = Collections.unmodifiableList(this.extension_); this.bitField0_ &= 0xFFFFFFFB; }  result.extension_ = this.extension_; } else { result.extension_ = this.extensionBuilder_.build(); }  if (this.nestedTypeBuilder_ == null) { if ((this.bitField0_ & 0x8) != 0) { this.nestedType_ = Collections.unmodifiableList(this.nestedType_); this.bitField0_ &= 0xFFFFFFF7; }  result.nestedType_ = this.nestedType_; } else { result.nestedType_ = this.nestedTypeBuilder_.build(); }  if (this.enumTypeBuilder_ == null) { if ((this.bitField0_ & 0x10) != 0) { this.enumType_ = Collections.unmodifiableList(this.enumType_); this.bitField0_ &= 0xFFFFFFEF; }  result.enumType_ = this.enumType_; } else { result.enumType_ = this.enumTypeBuilder_.build(); }  if (this.extensionRangeBuilder_ == null) { if ((this.bitField0_ & 0x20) != 0) { this.extensionRange_ = Collections.unmodifiableList(this.extensionRange_); this.bitField0_ &= 0xFFFFFFDF; }  result.extensionRange_ = this.extensionRange_; } else { result.extensionRange_ = this.extensionRangeBuilder_.build(); }  if (this.oneofDeclBuilder_ == null) { if ((this.bitField0_ & 0x40) != 0) { this.oneofDecl_ = Collections.unmodifiableList(this.oneofDecl_); this.bitField0_ &= 0xFFFFFFBF; }  result.oneofDecl_ = this.oneofDecl_; } else { result.oneofDecl_ = this.oneofDeclBuilder_.build(); }  if ((from_bitField0_ & 0x80) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x2; }  if (this.reservedRangeBuilder_ == null) { if ((this.bitField0_ & 0x100) != 0) { this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_); this.bitField0_ &= 0xFFFFFEFF; }  result.reservedRange_ = this.reservedRange_; } else { result.reservedRange_ = this.reservedRangeBuilder_.build(); }  if ((this.bitField0_ & 0x200) != 0) { this.reservedName_ = this.reservedName_.getUnmodifiableView(); this.bitField0_ &= 0xFFFFFDFF; }  result.reservedName_ = this.reservedName_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.DescriptorProto) return mergeFrom((DescriptorProtos.DescriptorProto)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.DescriptorProto other) { if (other == DescriptorProtos.DescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (this.fieldBuilder_ == null) { if (!other.field_.isEmpty()) { if (this.field_.isEmpty()) { this.field_ = other.field_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureFieldIsMutable(); this.field_.addAll(other.field_); }  onChanged(); }  } else if (!other.field_.isEmpty()) { if (this.fieldBuilder_.isEmpty()) { this.fieldBuilder_.dispose(); this.fieldBuilder_ = null; this.field_ = other.field_; this.bitField0_ &= 0xFFFFFFFD; this.fieldBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getFieldFieldBuilder() : null; } else { this.fieldBuilder_.addAllMessages(other.field_); }  }  if (this.extensionBuilder_ == null) { if (!other.extension_.isEmpty()) { if (this.extension_.isEmpty()) { this.extension_ = other.extension_; this.bitField0_ &= 0xFFFFFFFB; } else { ensureExtensionIsMutable(); this.extension_.addAll(other.extension_); }  onChanged(); }  } else if (!other.extension_.isEmpty()) { if (this.extensionBuilder_.isEmpty()) { this.extensionBuilder_.dispose(); this.extensionBuilder_ = null; this.extension_ = other.extension_; this.bitField0_ &= 0xFFFFFFFB; this.extensionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getExtensionFieldBuilder() : null; } else { this.extensionBuilder_.addAllMessages(other.extension_); }  }  if (this.nestedTypeBuilder_ == null) { if (!other.nestedType_.isEmpty()) { if (this.nestedType_.isEmpty()) { this.nestedType_ = other.nestedType_; this.bitField0_ &= 0xFFFFFFF7; } else { ensureNestedTypeIsMutable(); this.nestedType_.addAll(other.nestedType_); }  onChanged(); }  } else if (!other.nestedType_.isEmpty()) { if (this.nestedTypeBuilder_.isEmpty()) { this.nestedTypeBuilder_.dispose(); this.nestedTypeBuilder_ = null; this.nestedType_ = other.nestedType_; this.bitField0_ &= 0xFFFFFFF7; this.nestedTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getNestedTypeFieldBuilder() : null; } else { this.nestedTypeBuilder_.addAllMessages(other.nestedType_); }  }  if (this.enumTypeBuilder_ == null) { if (!other.enumType_.isEmpty()) { if (this.enumType_.isEmpty()) { this.enumType_ = other.enumType_; this.bitField0_ &= 0xFFFFFFEF; } else { ensureEnumTypeIsMutable(); this.enumType_.addAll(other.enumType_); }  onChanged(); }  } else if (!other.enumType_.isEmpty()) { if (this.enumTypeBuilder_.isEmpty()) { this.enumTypeBuilder_.dispose(); this.enumTypeBuilder_ = null; this.enumType_ = other.enumType_; this.bitField0_ &= 0xFFFFFFEF; this.enumTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getEnumTypeFieldBuilder() : null; } else { this.enumTypeBuilder_.addAllMessages(other.enumType_); }  }  if (this.extensionRangeBuilder_ == null) { if (!other.extensionRange_.isEmpty()) { if (this.extensionRange_.isEmpty()) { this.extensionRange_ = other.extensionRange_; this.bitField0_ &= 0xFFFFFFDF; } else { ensureExtensionRangeIsMutable(); this.extensionRange_.addAll(other.extensionRange_); }  onChanged(); }  } else if (!other.extensionRange_.isEmpty()) { if (this.extensionRangeBuilder_.isEmpty()) { this.extensionRangeBuilder_.dispose(); this.extensionRangeBuilder_ = null; this.extensionRange_ = other.extensionRange_; this.bitField0_ &= 0xFFFFFFDF; this.extensionRangeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getExtensionRangeFieldBuilder() : null; } else { this.extensionRangeBuilder_.addAllMessages(other.extensionRange_); }  }  if (this.oneofDeclBuilder_ == null) { if (!other.oneofDecl_.isEmpty()) { if (this.oneofDecl_.isEmpty()) { this.oneofDecl_ = other.oneofDecl_; this.bitField0_ &= 0xFFFFFFBF; } else { ensureOneofDeclIsMutable(); this.oneofDecl_.addAll(other.oneofDecl_); }  onChanged(); }  } else if (!other.oneofDecl_.isEmpty()) { if (this.oneofDeclBuilder_.isEmpty()) { this.oneofDeclBuilder_.dispose(); this.oneofDeclBuilder_ = null; this.oneofDecl_ = other.oneofDecl_; this.bitField0_ &= 0xFFFFFFBF; this.oneofDeclBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getOneofDeclFieldBuilder() : null; } else { this.oneofDeclBuilder_.addAllMessages(other.oneofDecl_); }  }  if (other.hasOptions()) mergeOptions(other.getOptions());  if (this.reservedRangeBuilder_ == null) { if (!other.reservedRange_.isEmpty()) { if (this.reservedRange_.isEmpty()) { this.reservedRange_ = other.reservedRange_; this.bitField0_ &= 0xFFFFFEFF; } else { ensureReservedRangeIsMutable(); this.reservedRange_.addAll(other.reservedRange_); }  onChanged(); }  } else if (!other.reservedRange_.isEmpty()) { if (this.reservedRangeBuilder_.isEmpty()) { this.reservedRangeBuilder_.dispose(); this.reservedRangeBuilder_ = null; this.reservedRange_ = other.reservedRange_; this.bitField0_ &= 0xFFFFFEFF; this.reservedRangeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getReservedRangeFieldBuilder() : null; } else { this.reservedRangeBuilder_.addAllMessages(other.reservedRange_); }  }  if (!other.reservedName_.isEmpty()) { if (this.reservedName_.isEmpty()) { this.reservedName_ = other.reservedName_; this.bitField0_ &= 0xFFFFFDFF; } else { ensureReservedNameIsMutable(); this.reservedName_.addAll(other.reservedName_); }  onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { int i; for (i = 0; i < getFieldCount(); i++) { if (!getField(i).isInitialized()) return false;  }  for (i = 0; i < getExtensionCount(); i++) { if (!getExtension(i).isInitialized()) return false;  }  for (i = 0; i < getNestedTypeCount(); i++) { if (!getNestedType(i).isInitialized()) return false;  }  for (i = 0; i < getEnumTypeCount(); i++) { if (!getEnumType(i).isInitialized()) return false;  }  for (i = 0; i < getExtensionRangeCount(); i++) { if (!getExtensionRange(i).isInitialized()) return false;  }  for (i = 0; i < getOneofDeclCount(); i++) { if (!getOneofDecl(i).isInitialized()) return false;  }  if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.DescriptorProto parsedMessage = null; try { parsedMessage = DescriptorProtos.DescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.DescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFE; this.name_ = DescriptorProtos.DescriptorProto.getDefaultInstance().getName(); onChanged(); return this; } public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } private void ensureFieldIsMutable() { if ((this.bitField0_ & 0x2) == 0) { this.field_ = new ArrayList<>(this.field_); this.bitField0_ |= 0x2; }  } public List<DescriptorProtos.FieldDescriptorProto> getFieldList() { if (this.fieldBuilder_ == null) return Collections.unmodifiableList(this.field_);  return this.fieldBuilder_.getMessageList(); } public int getFieldCount() { if (this.fieldBuilder_ == null) return this.field_.size();  return this.fieldBuilder_.getCount(); } public DescriptorProtos.FieldDescriptorProto getField(int index) { if (this.fieldBuilder_ == null) return this.field_.get(index);  return this.fieldBuilder_.getMessage(index); } public Builder setField(int index, DescriptorProtos.FieldDescriptorProto value) { if (this.fieldBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureFieldIsMutable(); this.field_.set(index, value); onChanged(); } else { this.fieldBuilder_.setMessage(index, value); }  return this; } public Builder setField(int index, DescriptorProtos.FieldDescriptorProto.Builder builderForValue) { if (this.fieldBuilder_ == null) { ensureFieldIsMutable(); this.field_.set(index, builderForValue.build()); onChanged(); } else { this.fieldBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addField(DescriptorProtos.FieldDescriptorProto value) { if (this.fieldBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureFieldIsMutable(); this.field_.add(value); onChanged(); } else { this.fieldBuilder_.addMessage(value); }  return this; } public Builder addField(int index, DescriptorProtos.FieldDescriptorProto value) { if (this.fieldBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureFieldIsMutable(); this.field_.add(index, value); onChanged(); } else { this.fieldBuilder_.addMessage(index, value); }  return this; } public Builder addField(DescriptorProtos.FieldDescriptorProto.Builder builderForValue) { if (this.fieldBuilder_ == null) { ensureFieldIsMutable(); this.field_.add(builderForValue.build()); onChanged(); } else { this.fieldBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addField(int index, DescriptorProtos.FieldDescriptorProto.Builder builderForValue) { if (this.fieldBuilder_ == null) { ensureFieldIsMutable(); this.field_.add(index, builderForValue.build()); onChanged(); } else { this.fieldBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllField(Iterable<? extends DescriptorProtos.FieldDescriptorProto> values) { if (this.fieldBuilder_ == null) { ensureFieldIsMutable(); AbstractMessageLite.Builder.addAll(values, this.field_); onChanged(); } else { this.fieldBuilder_.addAllMessages(values); }  return this; } public Builder clearField() { if (this.fieldBuilder_ == null) { this.field_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; onChanged(); } else { this.fieldBuilder_.clear(); }  return this; } public Builder removeField(int index) { if (this.fieldBuilder_ == null) { ensureFieldIsMutable(); this.field_.remove(index); onChanged(); } else { this.fieldBuilder_.remove(index); }  return this; } public DescriptorProtos.FieldDescriptorProto.Builder getFieldBuilder(int index) { return getFieldFieldBuilder().getBuilder(index); } public DescriptorProtos.FieldDescriptorProtoOrBuilder getFieldOrBuilder(int index) { if (this.fieldBuilder_ == null) return this.field_.get(index);  return this.fieldBuilder_.getMessageOrBuilder(index); } public List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getFieldOrBuilderList() { if (this.fieldBuilder_ != null) return this.fieldBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.field_); } public DescriptorProtos.FieldDescriptorProto.Builder addFieldBuilder() { return getFieldFieldBuilder().addBuilder(DescriptorProtos.FieldDescriptorProto.getDefaultInstance()); } public DescriptorProtos.FieldDescriptorProto.Builder addFieldBuilder(int index) { return getFieldFieldBuilder().addBuilder(index, DescriptorProtos.FieldDescriptorProto.getDefaultInstance()); } public List<DescriptorProtos.FieldDescriptorProto.Builder> getFieldBuilderList() { return getFieldFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<DescriptorProtos.FieldDescriptorProto, DescriptorProtos.FieldDescriptorProto.Builder, DescriptorProtos.FieldDescriptorProtoOrBuilder> getFieldFieldBuilder() { if (this.fieldBuilder_ == null) { this.fieldBuilder_ = new RepeatedFieldBuilderV3<>(this.field_, ((this.bitField0_ & 0x2) != 0), getParentForChildren(), isClean()); this.field_ = null; }  return this.fieldBuilder_; } private void ensureExtensionIsMutable() { if ((this.bitField0_ & 0x4) == 0) { this.extension_ = new ArrayList<>(this.extension_); this.bitField0_ |= 0x4; }  } public List<DescriptorProtos.FieldDescriptorProto> getExtensionList() { if (this.extensionBuilder_ == null) return Collections.unmodifiableList(this.extension_);  return this.extensionBuilder_.getMessageList(); } public int getExtensionCount() { if (this.extensionBuilder_ == null) return this.extension_.size();  return this.extensionBuilder_.getCount(); } public DescriptorProtos.FieldDescriptorProto getExtension(int index) { if (this.extensionBuilder_ == null) return this.extension_.get(index);  return this.extensionBuilder_.getMessage(index); } public Builder setExtension(int index, DescriptorProtos.FieldDescriptorProto value) { if (this.extensionBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionIsMutable(); this.extension_.set(index, value); onChanged(); } else { this.extensionBuilder_.setMessage(index, value); }  return this; } public Builder setExtension(int index, DescriptorProtos.FieldDescriptorProto.Builder builderForValue) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.set(index, builderForValue.build()); onChanged(); } else { this.extensionBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addExtension(DescriptorProtos.FieldDescriptorProto value) { if (this.extensionBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionIsMutable(); this.extension_.add(value); onChanged(); } else { this.extensionBuilder_.addMessage(value); }  return this; } public Builder addExtension(int index, DescriptorProtos.FieldDescriptorProto value) { if (this.extensionBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionIsMutable(); this.extension_.add(index, value); onChanged(); } else { this.extensionBuilder_.addMessage(index, value); }  return this; } public Builder addExtension(DescriptorProtos.FieldDescriptorProto.Builder builderForValue) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.add(builderForValue.build()); onChanged(); } else { this.extensionBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addExtension(int index, DescriptorProtos.FieldDescriptorProto.Builder builderForValue) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.add(index, builderForValue.build()); onChanged(); } else { this.extensionBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllExtension(Iterable<? extends DescriptorProtos.FieldDescriptorProto> values) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); AbstractMessageLite.Builder.addAll(values, this.extension_); onChanged(); } else { this.extensionBuilder_.addAllMessages(values); }  return this; } public Builder clearExtension() { if (this.extensionBuilder_ == null) { this.extension_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFB; onChanged(); } else { this.extensionBuilder_.clear(); }  return this; } public Builder removeExtension(int index) { if (this.extensionBuilder_ == null) { ensureExtensionIsMutable(); this.extension_.remove(index); onChanged(); } else { this.extensionBuilder_.remove(index); }  return this; } public DescriptorProtos.FieldDescriptorProto.Builder getExtensionBuilder(int index) { return getExtensionFieldBuilder().getBuilder(index); } public DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int index) { if (this.extensionBuilder_ == null) return this.extension_.get(index);  return this.extensionBuilder_.getMessageOrBuilder(index); } public List<? extends DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionOrBuilderList() { if (this.extensionBuilder_ != null) return this.extensionBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.extension_); } public DescriptorProtos.FieldDescriptorProto.Builder addExtensionBuilder() { return getExtensionFieldBuilder().addBuilder(DescriptorProtos.FieldDescriptorProto.getDefaultInstance()); } public DescriptorProtos.FieldDescriptorProto.Builder addExtensionBuilder(int index) { return getExtensionFieldBuilder().addBuilder(index, DescriptorProtos.FieldDescriptorProto.getDefaultInstance()); } public List<DescriptorProtos.FieldDescriptorProto.Builder> getExtensionBuilderList() { return getExtensionFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<DescriptorProtos.FieldDescriptorProto, DescriptorProtos.FieldDescriptorProto.Builder, DescriptorProtos.FieldDescriptorProtoOrBuilder> getExtensionFieldBuilder() { if (this.extensionBuilder_ == null) { this.extensionBuilder_ = new RepeatedFieldBuilderV3<>(this.extension_, ((this.bitField0_ & 0x4) != 0), getParentForChildren(), isClean()); this.extension_ = null; }  return this.extensionBuilder_; } private void ensureNestedTypeIsMutable() { if ((this.bitField0_ & 0x8) == 0) { this.nestedType_ = new ArrayList<>(this.nestedType_); this.bitField0_ |= 0x8; }  } public List<DescriptorProtos.DescriptorProto> getNestedTypeList() { if (this.nestedTypeBuilder_ == null) return Collections.unmodifiableList(this.nestedType_);  return this.nestedTypeBuilder_.getMessageList(); } public int getNestedTypeCount() { if (this.nestedTypeBuilder_ == null) return this.nestedType_.size();  return this.nestedTypeBuilder_.getCount(); } public DescriptorProtos.DescriptorProto getNestedType(int index) { if (this.nestedTypeBuilder_ == null) return this.nestedType_.get(index);  return this.nestedTypeBuilder_.getMessage(index); } public Builder setNestedType(int index, DescriptorProtos.DescriptorProto value) { if (this.nestedTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureNestedTypeIsMutable(); this.nestedType_.set(index, value); onChanged(); } else { this.nestedTypeBuilder_.setMessage(index, value); }  return this; } public Builder setNestedType(int index, Builder builderForValue) { if (this.nestedTypeBuilder_ == null) { ensureNestedTypeIsMutable(); this.nestedType_.set(index, builderForValue.build()); onChanged(); } else { this.nestedTypeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addNestedType(DescriptorProtos.DescriptorProto value) { if (this.nestedTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureNestedTypeIsMutable(); this.nestedType_.add(value); onChanged(); } else { this.nestedTypeBuilder_.addMessage(value); }  return this; } public Builder addNestedType(int index, DescriptorProtos.DescriptorProto value) { if (this.nestedTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureNestedTypeIsMutable(); this.nestedType_.add(index, value); onChanged(); } else { this.nestedTypeBuilder_.addMessage(index, value); }  return this; } public Builder addNestedType(Builder builderForValue) { if (this.nestedTypeBuilder_ == null) { ensureNestedTypeIsMutable(); this.nestedType_.add(builderForValue.build()); onChanged(); } else { this.nestedTypeBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addNestedType(int index, Builder builderForValue) { if (this.nestedTypeBuilder_ == null) { ensureNestedTypeIsMutable(); this.nestedType_.add(index, builderForValue.build()); onChanged(); } else { this.nestedTypeBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllNestedType(Iterable<? extends DescriptorProtos.DescriptorProto> values) { if (this.nestedTypeBuilder_ == null) { ensureNestedTypeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.nestedType_); onChanged(); } else { this.nestedTypeBuilder_.addAllMessages(values); }  return this; } public Builder clearNestedType() { if (this.nestedTypeBuilder_ == null) { this.nestedType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFF7; onChanged(); } else { this.nestedTypeBuilder_.clear(); }  return this; } public Builder removeNestedType(int index) { if (this.nestedTypeBuilder_ == null) { ensureNestedTypeIsMutable(); this.nestedType_.remove(index); onChanged(); } else { this.nestedTypeBuilder_.remove(index); }  return this; } public Builder getNestedTypeBuilder(int index) { return getNestedTypeFieldBuilder().getBuilder(index); } public DescriptorProtos.DescriptorProtoOrBuilder getNestedTypeOrBuilder(int index) { if (this.nestedTypeBuilder_ == null) return this.nestedType_.get(index);  return this.nestedTypeBuilder_.getMessageOrBuilder(index); } public List<? extends DescriptorProtos.DescriptorProtoOrBuilder> getNestedTypeOrBuilderList() { if (this.nestedTypeBuilder_ != null) return this.nestedTypeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.nestedType_); } public Builder addNestedTypeBuilder() { return getNestedTypeFieldBuilder().addBuilder(DescriptorProtos.DescriptorProto.getDefaultInstance()); } public Builder addNestedTypeBuilder(int index) { return getNestedTypeFieldBuilder().addBuilder(index, DescriptorProtos.DescriptorProto.getDefaultInstance()); } public List<Builder> getNestedTypeBuilderList() { return getNestedTypeFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto, Builder, DescriptorProtos.DescriptorProtoOrBuilder> getNestedTypeFieldBuilder() { if (this.nestedTypeBuilder_ == null) { this.nestedTypeBuilder_ = new RepeatedFieldBuilderV3<>(this.nestedType_, ((this.bitField0_ & 0x8) != 0), getParentForChildren(), isClean()); this.nestedType_ = null; }  return this.nestedTypeBuilder_; } private void ensureEnumTypeIsMutable() { if ((this.bitField0_ & 0x10) == 0) { this.enumType_ = new ArrayList<>(this.enumType_); this.bitField0_ |= 0x10; }  } public List<DescriptorProtos.EnumDescriptorProto> getEnumTypeList() { if (this.enumTypeBuilder_ == null) return Collections.unmodifiableList(this.enumType_);  return this.enumTypeBuilder_.getMessageList(); }
/*       */       public int getEnumTypeCount() { if (this.enumTypeBuilder_ == null) return this.enumType_.size();  return this.enumTypeBuilder_.getCount(); }
/* 10009 */       private void ensureReservedNameIsMutable() { if ((this.bitField0_ & 0x200) == 0)
/* 10010 */         { this.reservedName_ = new LazyStringArrayList(this.reservedName_);
/* 10011 */           this.bitField0_ |= 0x200; }  } public DescriptorProtos.EnumDescriptorProto getEnumType(int index) { if (this.enumTypeBuilder_ == null) return this.enumType_.get(index);  return this.enumTypeBuilder_.getMessage(index); } public Builder setEnumType(int index, DescriptorProtos.EnumDescriptorProto value) { if (this.enumTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureEnumTypeIsMutable(); this.enumType_.set(index, value); onChanged(); } else { this.enumTypeBuilder_.setMessage(index, value); }  return this; } public Builder setEnumType(int index, DescriptorProtos.EnumDescriptorProto.Builder builderForValue) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.set(index, builderForValue.build()); onChanged(); } else { this.enumTypeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addEnumType(DescriptorProtos.EnumDescriptorProto value) { if (this.enumTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureEnumTypeIsMutable(); this.enumType_.add(value); onChanged(); } else { this.enumTypeBuilder_.addMessage(value); }  return this; } public Builder addEnumType(int index, DescriptorProtos.EnumDescriptorProto value) { if (this.enumTypeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureEnumTypeIsMutable(); this.enumType_.add(index, value); onChanged(); } else { this.enumTypeBuilder_.addMessage(index, value); }  return this; } public Builder addEnumType(DescriptorProtos.EnumDescriptorProto.Builder builderForValue) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.add(builderForValue.build()); onChanged(); } else { this.enumTypeBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addEnumType(int index, DescriptorProtos.EnumDescriptorProto.Builder builderForValue) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.add(index, builderForValue.build()); onChanged(); } else { this.enumTypeBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllEnumType(Iterable<? extends DescriptorProtos.EnumDescriptorProto> values) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.enumType_); onChanged(); } else { this.enumTypeBuilder_.addAllMessages(values); }  return this; } public Builder clearEnumType() { if (this.enumTypeBuilder_ == null) { this.enumType_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFEF; onChanged(); } else { this.enumTypeBuilder_.clear(); }  return this; } public Builder removeEnumType(int index) { if (this.enumTypeBuilder_ == null) { ensureEnumTypeIsMutable(); this.enumType_.remove(index); onChanged(); } else { this.enumTypeBuilder_.remove(index); }  return this; } public DescriptorProtos.EnumDescriptorProto.Builder getEnumTypeBuilder(int index) { return getEnumTypeFieldBuilder().getBuilder(index); } public DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int index) { if (this.enumTypeBuilder_ == null) return this.enumType_.get(index);  return this.enumTypeBuilder_.getMessageOrBuilder(index); } public List<? extends DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeOrBuilderList() { if (this.enumTypeBuilder_ != null) return this.enumTypeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.enumType_); } public DescriptorProtos.EnumDescriptorProto.Builder addEnumTypeBuilder() { return getEnumTypeFieldBuilder().addBuilder(DescriptorProtos.EnumDescriptorProto.getDefaultInstance()); } public DescriptorProtos.EnumDescriptorProto.Builder addEnumTypeBuilder(int index) { return getEnumTypeFieldBuilder().addBuilder(index, DescriptorProtos.EnumDescriptorProto.getDefaultInstance()); } public List<DescriptorProtos.EnumDescriptorProto.Builder> getEnumTypeBuilderList() { return getEnumTypeFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<DescriptorProtos.EnumDescriptorProto, DescriptorProtos.EnumDescriptorProto.Builder, DescriptorProtos.EnumDescriptorProtoOrBuilder> getEnumTypeFieldBuilder() { if (this.enumTypeBuilder_ == null) { this.enumTypeBuilder_ = new RepeatedFieldBuilderV3<>(this.enumType_, ((this.bitField0_ & 0x10) != 0), getParentForChildren(), isClean()); this.enumType_ = null; }  return this.enumTypeBuilder_; } private void ensureExtensionRangeIsMutable() { if ((this.bitField0_ & 0x20) == 0) { this.extensionRange_ = new ArrayList<>(this.extensionRange_); this.bitField0_ |= 0x20; }  } public List<DescriptorProtos.DescriptorProto.ExtensionRange> getExtensionRangeList() { if (this.extensionRangeBuilder_ == null) return Collections.unmodifiableList(this.extensionRange_);  return this.extensionRangeBuilder_.getMessageList(); } public int getExtensionRangeCount() { if (this.extensionRangeBuilder_ == null) return this.extensionRange_.size();  return this.extensionRangeBuilder_.getCount(); } public DescriptorProtos.DescriptorProto.ExtensionRange getExtensionRange(int index) { if (this.extensionRangeBuilder_ == null) return this.extensionRange_.get(index);  return this.extensionRangeBuilder_.getMessage(index); } public Builder setExtensionRange(int index, DescriptorProtos.DescriptorProto.ExtensionRange value) { if (this.extensionRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionRangeIsMutable(); this.extensionRange_.set(index, value); onChanged(); } else { this.extensionRangeBuilder_.setMessage(index, value); }  return this; } public Builder setExtensionRange(int index, DescriptorProtos.DescriptorProto.ExtensionRange.Builder builderForValue) { if (this.extensionRangeBuilder_ == null) { ensureExtensionRangeIsMutable(); this.extensionRange_.set(index, builderForValue.build()); onChanged(); } else { this.extensionRangeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addExtensionRange(DescriptorProtos.DescriptorProto.ExtensionRange value) { if (this.extensionRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionRangeIsMutable(); this.extensionRange_.add(value); onChanged(); } else { this.extensionRangeBuilder_.addMessage(value); }  return this; } public Builder addExtensionRange(int index, DescriptorProtos.DescriptorProto.ExtensionRange value) { if (this.extensionRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureExtensionRangeIsMutable(); this.extensionRange_.add(index, value); onChanged(); } else { this.extensionRangeBuilder_.addMessage(index, value); }  return this; } public Builder addExtensionRange(DescriptorProtos.DescriptorProto.ExtensionRange.Builder builderForValue) { if (this.extensionRangeBuilder_ == null) { ensureExtensionRangeIsMutable(); this.extensionRange_.add(builderForValue.build()); onChanged(); } else { this.extensionRangeBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addExtensionRange(int index, DescriptorProtos.DescriptorProto.ExtensionRange.Builder builderForValue) { if (this.extensionRangeBuilder_ == null) { ensureExtensionRangeIsMutable(); this.extensionRange_.add(index, builderForValue.build()); onChanged(); } else { this.extensionRangeBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllExtensionRange(Iterable<? extends DescriptorProtos.DescriptorProto.ExtensionRange> values) { if (this.extensionRangeBuilder_ == null) { ensureExtensionRangeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.extensionRange_); onChanged(); } else { this.extensionRangeBuilder_.addAllMessages(values); }  return this; } public Builder clearExtensionRange() { if (this.extensionRangeBuilder_ == null) { this.extensionRange_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFDF; onChanged(); } else { this.extensionRangeBuilder_.clear(); }  return this; } public Builder removeExtensionRange(int index) { if (this.extensionRangeBuilder_ == null) { ensureExtensionRangeIsMutable(); this.extensionRange_.remove(index); onChanged(); } else { this.extensionRangeBuilder_.remove(index); }  return this; } public DescriptorProtos.DescriptorProto.ExtensionRange.Builder getExtensionRangeBuilder(int index) { return getExtensionRangeFieldBuilder().getBuilder(index); } public DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder getExtensionRangeOrBuilder(int index) { if (this.extensionRangeBuilder_ == null) return this.extensionRange_.get(index);  return this.extensionRangeBuilder_.getMessageOrBuilder(index); } public List<? extends DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder> getExtensionRangeOrBuilderList() { if (this.extensionRangeBuilder_ != null) return this.extensionRangeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.extensionRange_); } public DescriptorProtos.DescriptorProto.ExtensionRange.Builder addExtensionRangeBuilder() { return getExtensionRangeFieldBuilder().addBuilder(DescriptorProtos.DescriptorProto.ExtensionRange.getDefaultInstance()); } public DescriptorProtos.DescriptorProto.ExtensionRange.Builder addExtensionRangeBuilder(int index) { return getExtensionRangeFieldBuilder().addBuilder(index, DescriptorProtos.DescriptorProto.ExtensionRange.getDefaultInstance()); } public List<DescriptorProtos.DescriptorProto.ExtensionRange.Builder> getExtensionRangeBuilderList() { return getExtensionRangeFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto.ExtensionRange, DescriptorProtos.DescriptorProto.ExtensionRange.Builder, DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder> getExtensionRangeFieldBuilder() { if (this.extensionRangeBuilder_ == null) { this.extensionRangeBuilder_ = new RepeatedFieldBuilderV3<>(this.extensionRange_, ((this.bitField0_ & 0x20) != 0), getParentForChildren(), isClean()); this.extensionRange_ = null; }  return this.extensionRangeBuilder_; } private void ensureOneofDeclIsMutable() { if ((this.bitField0_ & 0x40) == 0) { this.oneofDecl_ = new ArrayList<>(this.oneofDecl_); this.bitField0_ |= 0x40; }  } public List<DescriptorProtos.OneofDescriptorProto> getOneofDeclList() { if (this.oneofDeclBuilder_ == null) return Collections.unmodifiableList(this.oneofDecl_);  return this.oneofDeclBuilder_.getMessageList(); } public int getOneofDeclCount() { if (this.oneofDeclBuilder_ == null) return this.oneofDecl_.size();  return this.oneofDeclBuilder_.getCount(); } public DescriptorProtos.OneofDescriptorProto getOneofDecl(int index) { if (this.oneofDeclBuilder_ == null) return this.oneofDecl_.get(index);  return this.oneofDeclBuilder_.getMessage(index); } public Builder setOneofDecl(int index, DescriptorProtos.OneofDescriptorProto value) { if (this.oneofDeclBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureOneofDeclIsMutable(); this.oneofDecl_.set(index, value); onChanged(); } else { this.oneofDeclBuilder_.setMessage(index, value); }  return this; } public Builder setOneofDecl(int index, DescriptorProtos.OneofDescriptorProto.Builder builderForValue) { if (this.oneofDeclBuilder_ == null) { ensureOneofDeclIsMutable(); this.oneofDecl_.set(index, builderForValue.build()); onChanged(); } else { this.oneofDeclBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addOneofDecl(DescriptorProtos.OneofDescriptorProto value) { if (this.oneofDeclBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureOneofDeclIsMutable(); this.oneofDecl_.add(value); onChanged(); } else { this.oneofDeclBuilder_.addMessage(value); }  return this; } public Builder addOneofDecl(int index, DescriptorProtos.OneofDescriptorProto value) { if (this.oneofDeclBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureOneofDeclIsMutable(); this.oneofDecl_.add(index, value); onChanged(); } else { this.oneofDeclBuilder_.addMessage(index, value); }  return this; } public Builder addOneofDecl(DescriptorProtos.OneofDescriptorProto.Builder builderForValue) { if (this.oneofDeclBuilder_ == null) { ensureOneofDeclIsMutable(); this.oneofDecl_.add(builderForValue.build()); onChanged(); } else { this.oneofDeclBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addOneofDecl(int index, DescriptorProtos.OneofDescriptorProto.Builder builderForValue) { if (this.oneofDeclBuilder_ == null) { ensureOneofDeclIsMutable(); this.oneofDecl_.add(index, builderForValue.build()); onChanged(); } else { this.oneofDeclBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllOneofDecl(Iterable<? extends DescriptorProtos.OneofDescriptorProto> values) { if (this.oneofDeclBuilder_ == null) { ensureOneofDeclIsMutable(); AbstractMessageLite.Builder.addAll(values, this.oneofDecl_); onChanged(); } else { this.oneofDeclBuilder_.addAllMessages(values); }  return this; } public Builder clearOneofDecl() { if (this.oneofDeclBuilder_ == null) { this.oneofDecl_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFBF; onChanged(); } else { this.oneofDeclBuilder_.clear(); }  return this; } public Builder removeOneofDecl(int index) { if (this.oneofDeclBuilder_ == null) { ensureOneofDeclIsMutable(); this.oneofDecl_.remove(index); onChanged(); } else { this.oneofDeclBuilder_.remove(index); }  return this; } public DescriptorProtos.OneofDescriptorProto.Builder getOneofDeclBuilder(int index) { return getOneofDeclFieldBuilder().getBuilder(index); } public DescriptorProtos.OneofDescriptorProtoOrBuilder getOneofDeclOrBuilder(int index) { if (this.oneofDeclBuilder_ == null) return this.oneofDecl_.get(index);  return this.oneofDeclBuilder_.getMessageOrBuilder(index); } public List<? extends DescriptorProtos.OneofDescriptorProtoOrBuilder> getOneofDeclOrBuilderList() { if (this.oneofDeclBuilder_ != null) return this.oneofDeclBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.oneofDecl_); } public DescriptorProtos.OneofDescriptorProto.Builder addOneofDeclBuilder() { return getOneofDeclFieldBuilder().addBuilder(DescriptorProtos.OneofDescriptorProto.getDefaultInstance()); } public DescriptorProtos.OneofDescriptorProto.Builder addOneofDeclBuilder(int index) { return getOneofDeclFieldBuilder().addBuilder(index, DescriptorProtos.OneofDescriptorProto.getDefaultInstance()); } public List<DescriptorProtos.OneofDescriptorProto.Builder> getOneofDeclBuilderList() { return getOneofDeclFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<DescriptorProtos.OneofDescriptorProto, DescriptorProtos.OneofDescriptorProto.Builder, DescriptorProtos.OneofDescriptorProtoOrBuilder> getOneofDeclFieldBuilder() { if (this.oneofDeclBuilder_ == null) { this.oneofDeclBuilder_ = new RepeatedFieldBuilderV3<>(this.oneofDecl_, ((this.bitField0_ & 0x40) != 0), getParentForChildren(), isClean()); this.oneofDecl_ = null; }  return this.oneofDeclBuilder_; } public boolean hasOptions() { return ((this.bitField0_ & 0x80) != 0); } public DescriptorProtos.MessageOptions getOptions() { if (this.optionsBuilder_ == null) return (this.options_ == null) ? DescriptorProtos.MessageOptions.getDefaultInstance() : this.options_;  return this.optionsBuilder_.getMessage(); } public Builder setOptions(DescriptorProtos.MessageOptions value) { if (this.optionsBuilder_ == null) { if (value == null) throw new NullPointerException();  this.options_ = value; onChanged(); } else { this.optionsBuilder_.setMessage(value); }  this.bitField0_ |= 0x80; return this; } public Builder setOptions(DescriptorProtos.MessageOptions.Builder builderForValue) { if (this.optionsBuilder_ == null) { this.options_ = builderForValue.build(); onChanged(); } else { this.optionsBuilder_.setMessage(builderForValue.build()); }  this.bitField0_ |= 0x80; return this; } public Builder mergeOptions(DescriptorProtos.MessageOptions value) { if (this.optionsBuilder_ == null) { if ((this.bitField0_ & 0x80) != 0 && this.options_ != null && this.options_ != DescriptorProtos.MessageOptions.getDefaultInstance()) { this.options_ = DescriptorProtos.MessageOptions.newBuilder(this.options_).mergeFrom(value).buildPartial(); } else { this.options_ = value; }  onChanged(); } else { this.optionsBuilder_.mergeFrom(value); }  this.bitField0_ |= 0x80; return this; } public Builder clearOptions() { if (this.optionsBuilder_ == null) { this.options_ = null; onChanged(); } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFF7F; return this; } public DescriptorProtos.MessageOptions.Builder getOptionsBuilder() { this.bitField0_ |= 0x80; onChanged(); return getOptionsFieldBuilder().getBuilder(); } public DescriptorProtos.MessageOptionsOrBuilder getOptionsOrBuilder() { if (this.optionsBuilder_ != null) return this.optionsBuilder_.getMessageOrBuilder();  return (this.options_ == null) ? DescriptorProtos.MessageOptions.getDefaultInstance() : this.options_; } private SingleFieldBuilderV3<DescriptorProtos.MessageOptions, DescriptorProtos.MessageOptions.Builder, DescriptorProtos.MessageOptionsOrBuilder> getOptionsFieldBuilder() { if (this.optionsBuilder_ == null) { this.optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean()); this.options_ = null; }  return this.optionsBuilder_; } private void ensureReservedRangeIsMutable() { if ((this.bitField0_ & 0x100) == 0) { this.reservedRange_ = new ArrayList<>(this.reservedRange_); this.bitField0_ |= 0x100; }  } public List<DescriptorProtos.DescriptorProto.ReservedRange> getReservedRangeList() { if (this.reservedRangeBuilder_ == null) return Collections.unmodifiableList(this.reservedRange_);  return this.reservedRangeBuilder_.getMessageList(); } public int getReservedRangeCount() { if (this.reservedRangeBuilder_ == null) return this.reservedRange_.size();  return this.reservedRangeBuilder_.getCount(); } public DescriptorProtos.DescriptorProto.ReservedRange getReservedRange(int index) { if (this.reservedRangeBuilder_ == null) return this.reservedRange_.get(index);  return this.reservedRangeBuilder_.getMessage(index); } public Builder setReservedRange(int index, DescriptorProtos.DescriptorProto.ReservedRange value) { if (this.reservedRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureReservedRangeIsMutable(); this.reservedRange_.set(index, value); onChanged(); } else { this.reservedRangeBuilder_.setMessage(index, value); }  return this; } public Builder setReservedRange(int index, DescriptorProtos.DescriptorProto.ReservedRange.Builder builderForValue) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.set(index, builderForValue.build()); onChanged(); } else { this.reservedRangeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addReservedRange(DescriptorProtos.DescriptorProto.ReservedRange value) { if (this.reservedRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureReservedRangeIsMutable(); this.reservedRange_.add(value); onChanged(); } else { this.reservedRangeBuilder_.addMessage(value); }  return this; }
/*       */       public Builder addReservedRange(int index, DescriptorProtos.DescriptorProto.ReservedRange value) { if (this.reservedRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureReservedRangeIsMutable(); this.reservedRange_.add(index, value); onChanged(); } else { this.reservedRangeBuilder_.addMessage(index, value); }  return this; }
/*       */       public Builder addReservedRange(DescriptorProtos.DescriptorProto.ReservedRange.Builder builderForValue) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.add(builderForValue.build()); onChanged(); } else { this.reservedRangeBuilder_.addMessage(builderForValue.build()); }  return this; }
/*       */       public Builder addReservedRange(int index, DescriptorProtos.DescriptorProto.ReservedRange.Builder builderForValue) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.add(index, builderForValue.build()); onChanged(); } else { this.reservedRangeBuilder_.addMessage(index, builderForValue.build()); }  return this; }
/*       */       public Builder addAllReservedRange(Iterable<? extends DescriptorProtos.DescriptorProto.ReservedRange> values) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.reservedRange_); onChanged(); } else { this.reservedRangeBuilder_.addAllMessages(values); }  return this; }
/*       */       public Builder clearReservedRange() { if (this.reservedRangeBuilder_ == null) { this.reservedRange_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFEFF; onChanged(); } else { this.reservedRangeBuilder_.clear(); }  return this; }
/*       */       public Builder removeReservedRange(int index) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.remove(index); onChanged(); } else { this.reservedRangeBuilder_.remove(index); }  return this; }
/*       */       public DescriptorProtos.DescriptorProto.ReservedRange.Builder getReservedRangeBuilder(int index) { return getReservedRangeFieldBuilder().getBuilder(index); }
/*       */       public DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder getReservedRangeOrBuilder(int index) { if (this.reservedRangeBuilder_ == null) return this.reservedRange_.get(index);  return this.reservedRangeBuilder_.getMessageOrBuilder(index); }
/*       */       public List<? extends DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder> getReservedRangeOrBuilderList() { if (this.reservedRangeBuilder_ != null) return this.reservedRangeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.reservedRange_); }
/*       */       public DescriptorProtos.DescriptorProto.ReservedRange.Builder addReservedRangeBuilder() { return getReservedRangeFieldBuilder().addBuilder(DescriptorProtos.DescriptorProto.ReservedRange.getDefaultInstance()); }
/*       */       public DescriptorProtos.DescriptorProto.ReservedRange.Builder addReservedRangeBuilder(int index) { return getReservedRangeFieldBuilder().addBuilder(index, DescriptorProtos.DescriptorProto.ReservedRange.getDefaultInstance()); }
/*       */       public List<DescriptorProtos.DescriptorProto.ReservedRange.Builder> getReservedRangeBuilderList() { return getReservedRangeFieldBuilder().getBuilderList(); }
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.DescriptorProto.ReservedRange, DescriptorProtos.DescriptorProto.ReservedRange.Builder, DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder> getReservedRangeFieldBuilder() { if (this.reservedRangeBuilder_ == null) { this.reservedRangeBuilder_ = new RepeatedFieldBuilderV3<>(this.reservedRange_, ((this.bitField0_ & 0x100) != 0), getParentForChildren(), isClean()); this.reservedRange_ = null; }  return this.reservedRangeBuilder_; }
/* 10025 */       public ProtocolStringList getReservedNameList() { return this.reservedName_.getUnmodifiableView(); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getReservedNameCount() {
/* 10037 */         return this.reservedName_.size();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getReservedName(int index) {
/* 10050 */         return this.reservedName_.get(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getReservedNameBytes(int index) {
/* 10064 */         return this.reservedName_.getByteString(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setReservedName(int index, String value) {
/* 10079 */         if (value == null) {
/* 10080 */           throw new NullPointerException();
/*       */         }
/* 10082 */         ensureReservedNameIsMutable();
/* 10083 */         this.reservedName_.set(index, value);
/* 10084 */         onChanged();
/* 10085 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addReservedName(String value) {
/* 10099 */         if (value == null) {
/* 10100 */           throw new NullPointerException();
/*       */         }
/* 10102 */         ensureReservedNameIsMutable();
/* 10103 */         this.reservedName_.add(value);
/* 10104 */         onChanged();
/* 10105 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllReservedName(Iterable<String> values) {
/* 10119 */         ensureReservedNameIsMutable();
/* 10120 */         AbstractMessageLite.Builder.addAll(values, this.reservedName_);
/*       */         
/* 10122 */         onChanged();
/* 10123 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearReservedName() {
/* 10135 */         this.reservedName_ = LazyStringArrayList.EMPTY;
/* 10136 */         this.bitField0_ &= 0xFFFFFDFF;
/* 10137 */         onChanged();
/* 10138 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addReservedNameBytes(ByteString value) {
/* 10152 */         if (value == null) {
/* 10153 */           throw new NullPointerException();
/*       */         }
/* 10155 */         ensureReservedNameIsMutable();
/* 10156 */         this.reservedName_.add(value);
/* 10157 */         onChanged();
/* 10158 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 10163 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 10169 */         return super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 10179 */     private static final DescriptorProto DEFAULT_INSTANCE = new DescriptorProto();
/*       */ 
/*       */     
/*       */     public static DescriptorProto getDefaultInstance() {
/* 10183 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 10187 */     public static final Parser<DescriptorProto> PARSER = new AbstractParser<DescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.DescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 10193 */           return new DescriptorProtos.DescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<DescriptorProto> parser() {
/* 10198 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<DescriptorProto> getParserForType() {
/* 10203 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public DescriptorProto getDefaultInstanceForType() {
/* 10208 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/*       */     public static interface ReservedRangeOrBuilder
/*       */       extends MessageOrBuilder
/*       */     {
/*       */       boolean hasStart();
/*       */ 
/*       */       
/*       */       int getStart();
/*       */ 
/*       */       
/*       */       boolean hasEnd();
/*       */ 
/*       */       
/*       */       int getEnd();
/*       */     }
/*       */ 
/*       */     
/*       */     public static interface ExtensionRangeOrBuilder
/*       */       extends MessageOrBuilder
/*       */     {
/*       */       boolean hasStart();
/*       */ 
/*       */       
/*       */       int getStart();
/*       */       
/*       */       boolean hasEnd();
/*       */       
/*       */       int getEnd();
/*       */       
/*       */       boolean hasOptions();
/*       */       
/*       */       DescriptorProtos.ExtensionRangeOptions getOptions();
/*       */       
/*       */       DescriptorProtos.ExtensionRangeOptionsOrBuilder getOptionsOrBuilder();
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface ExtensionRangeOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<ExtensionRangeOptions>
/*       */   {
/*       */     List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();
/*       */     
/*       */     DescriptorProtos.UninterpretedOption getUninterpretedOption(int param1Int);
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */     
/*       */     List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */     
/*       */     DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static final class ExtensionRangeOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<ExtensionRangeOptions>
/*       */     implements ExtensionRangeOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */     private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */     private byte memoizedIsInitialized;
/*       */     
/*       */     private ExtensionRangeOptions(GeneratedMessageV3.ExtendableBuilder<ExtensionRangeOptions, ?> builder)
/*       */     {
/* 10273 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 10409 */       this.memoizedIsInitialized = -1; } private ExtensionRangeOptions() { this.memoizedIsInitialized = -1; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new ExtensionRangeOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ExtensionRangeOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 7994: if ((mutable_bitField0_ & 0x1) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ExtensionRangeOptions.class, (Class)Builder.class); } public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); }
/*       */     public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); }
/*       */     public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 10412 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 10413 */       if (isInitialized == 1) return true; 
/* 10414 */       if (isInitialized == 0) return false;
/*       */       
/* 10416 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 10417 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 10418 */           this.memoizedIsInitialized = 0;
/* 10419 */           return false;
/*       */         } 
/*       */       } 
/* 10422 */       if (!extensionsAreInitialized()) {
/* 10423 */         this.memoizedIsInitialized = 0;
/* 10424 */         return false;
/*       */       } 
/* 10426 */       this.memoizedIsInitialized = 1;
/* 10427 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 10435 */       GeneratedMessageV3.ExtendableMessage<ExtensionRangeOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 10436 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 10437 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 10439 */       extensionWriter.writeUntil(536870912, output);
/* 10440 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 10445 */       int size = this.memoizedSize;
/* 10446 */       if (size != -1) return size;
/*       */       
/* 10448 */       size = 0;
/* 10449 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 10450 */         size += 
/* 10451 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 10453 */       size += extensionsSerializedSize();
/* 10454 */       size += this.unknownFields.getSerializedSize();
/* 10455 */       this.memoizedSize = size;
/* 10456 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 10461 */       if (obj == this) {
/* 10462 */         return true;
/*       */       }
/* 10464 */       if (!(obj instanceof ExtensionRangeOptions)) {
/* 10465 */         return super.equals(obj);
/*       */       }
/* 10467 */       ExtensionRangeOptions other = (ExtensionRangeOptions)obj;
/*       */ 
/*       */       
/* 10470 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 10471 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 10472 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 10473 */         return false; 
/* 10474 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 10479 */       if (this.memoizedHashCode != 0) {
/* 10480 */         return this.memoizedHashCode;
/*       */       }
/* 10482 */       int hash = 41;
/* 10483 */       hash = 19 * hash + getDescriptor().hashCode();
/* 10484 */       if (getUninterpretedOptionCount() > 0) {
/* 10485 */         hash = 37 * hash + 999;
/* 10486 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 10488 */       hash = hashFields(hash, getExtensionFields());
/* 10489 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 10490 */       this.memoizedHashCode = hash;
/* 10491 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 10497 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 10503 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 10508 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 10514 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 10518 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 10524 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(InputStream input) throws IOException {
/* 10528 */       return 
/* 10529 */         GeneratedMessageV3.<ExtensionRangeOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 10535 */       return 
/* 10536 */         GeneratedMessageV3.<ExtensionRangeOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ExtensionRangeOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 10540 */       return 
/* 10541 */         GeneratedMessageV3.<ExtensionRangeOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 10547 */       return 
/* 10548 */         GeneratedMessageV3.<ExtensionRangeOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(CodedInputStream input) throws IOException {
/* 10553 */       return 
/* 10554 */         GeneratedMessageV3.<ExtensionRangeOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 10560 */       return 
/* 10561 */         GeneratedMessageV3.<ExtensionRangeOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 10565 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 10567 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(ExtensionRangeOptions prototype) {
/* 10570 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 10574 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 10575 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 10581 */       Builder builder = new Builder(parent);
/* 10582 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.ExtendableBuilder<ExtensionRangeOptions, Builder>
/*       */       implements DescriptorProtos.ExtensionRangeOptionsOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 10594 */         return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 10600 */         return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable
/* 10601 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.ExtensionRangeOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 10806 */         this
/* 10807 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_descriptor; } public DescriptorProtos.ExtensionRangeOptions getDefaultInstanceForType() { return DescriptorProtos.ExtensionRangeOptions.getDefaultInstance(); } public DescriptorProtos.ExtensionRangeOptions build() { DescriptorProtos.ExtensionRangeOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.ExtensionRangeOptions buildPartial() { DescriptorProtos.ExtensionRangeOptions result = new DescriptorProtos.ExtensionRangeOptions(this); int from_bitField0_ = this.bitField0_; if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFFE; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.ExtensionRangeOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.ExtensionRangeOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.ExtensionRangeOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.ExtensionRangeOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.ExtensionRangeOptions) return mergeFrom((DescriptorProtos.ExtensionRangeOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.ExtensionRangeOptions other) { if (other == DescriptorProtos.ExtensionRangeOptions.getDefaultInstance()) return this;  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFE; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.ExtensionRangeOptions parsedMessage = null; try { parsedMessage = DescriptorProtos.ExtensionRangeOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.ExtensionRangeOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 10809 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/* 10810 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 10811 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
/* 10826 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10827 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 10829 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 10840 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10841 */           return this.uninterpretedOption_.size();
/*       */         }
/* 10843 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
/* 10854 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10855 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 10857 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 10869 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10870 */           if (value == null) {
/* 10871 */             throw new NullPointerException();
/*       */           }
/* 10873 */           ensureUninterpretedOptionIsMutable();
/* 10874 */           this.uninterpretedOption_.set(index, value);
/* 10875 */           onChanged();
/*       */         } else {
/* 10877 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 10879 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 10890 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10891 */           ensureUninterpretedOptionIsMutable();
/* 10892 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 10893 */           onChanged();
/*       */         } else {
/* 10895 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 10897 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
/* 10907 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10908 */           if (value == null) {
/* 10909 */             throw new NullPointerException();
/*       */           }
/* 10911 */           ensureUninterpretedOptionIsMutable();
/* 10912 */           this.uninterpretedOption_.add(value);
/* 10913 */           onChanged();
/*       */         } else {
/* 10915 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 10917 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 10928 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10929 */           if (value == null) {
/* 10930 */             throw new NullPointerException();
/*       */           }
/* 10932 */           ensureUninterpretedOptionIsMutable();
/* 10933 */           this.uninterpretedOption_.add(index, value);
/* 10934 */           onChanged();
/*       */         } else {
/* 10936 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 10938 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 10949 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10950 */           ensureUninterpretedOptionIsMutable();
/* 10951 */           this.uninterpretedOption_.add(builderForValue.build());
/* 10952 */           onChanged();
/*       */         } else {
/* 10954 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 10956 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 10967 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10968 */           ensureUninterpretedOptionIsMutable();
/* 10969 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 10970 */           onChanged();
/*       */         } else {
/* 10972 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 10974 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
/* 10985 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 10986 */           ensureUninterpretedOptionIsMutable();
/* 10987 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 10989 */           onChanged();
/*       */         } else {
/* 10991 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 10993 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 11003 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 11004 */           this.uninterpretedOption_ = Collections.emptyList();
/* 11005 */           this.bitField0_ &= 0xFFFFFFFE;
/* 11006 */           onChanged();
/*       */         } else {
/* 11008 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 11010 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 11020 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 11021 */           ensureUninterpretedOptionIsMutable();
/* 11022 */           this.uninterpretedOption_.remove(index);
/* 11023 */           onChanged();
/*       */         } else {
/* 11025 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 11027 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 11038 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 11049 */         if (this.uninterpretedOptionBuilder_ == null)
/* 11050 */           return this.uninterpretedOption_.get(index); 
/* 11051 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 11063 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 11064 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 11066 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 11077 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 11078 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 11089 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 11090 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 11101 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 11106 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 11107 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 11112 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x1) != 0), getParentForChildren(), isClean());
/* 11113 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 11115 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 11120 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 11126 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 11136 */     private static final ExtensionRangeOptions DEFAULT_INSTANCE = new ExtensionRangeOptions();
/*       */ 
/*       */     
/*       */     public static ExtensionRangeOptions getDefaultInstance() {
/* 11140 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 11144 */     public static final Parser<ExtensionRangeOptions> PARSER = new AbstractParser<ExtensionRangeOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.ExtensionRangeOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 11150 */           return new DescriptorProtos.ExtensionRangeOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<ExtensionRangeOptions> parser() {
/* 11155 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<ExtensionRangeOptions> getParserForType() {
/* 11160 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public ExtensionRangeOptions getDefaultInstanceForType() {
/* 11165 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FieldDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasNumber();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getNumber();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLabel();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FieldDescriptorProto.Label getLabel();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasType();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FieldDescriptorProto.Type getType();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasTypeName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getTypeName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getTypeNameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasExtendee();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getExtendee();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getExtendeeBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDefaultValue();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getDefaultValue();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getDefaultValueBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOneofIndex();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getOneofIndex();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasJsonName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getJsonName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getJsonNameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FieldOptions getOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FieldOptionsOrBuilder getOptionsOrBuilder();
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class FieldDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements FieldDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object name_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NUMBER_FIELD_NUMBER = 3;
/*       */ 
/*       */ 
/*       */     
/*       */     private int number_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LABEL_FIELD_NUMBER = 4;
/*       */ 
/*       */ 
/*       */     
/*       */     private int label_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TYPE_FIELD_NUMBER = 5;
/*       */ 
/*       */ 
/*       */     
/*       */     private int type_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int TYPE_NAME_FIELD_NUMBER = 6;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object typeName_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int EXTENDEE_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object extendee_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEFAULT_VALUE_FIELD_NUMBER = 7;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object defaultValue_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ONEOF_INDEX_FIELD_NUMBER = 9;
/*       */ 
/*       */ 
/*       */     
/*       */     private int oneofIndex_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JSON_NAME_FIELD_NUMBER = 10;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object jsonName_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 8;
/*       */ 
/*       */ 
/*       */     
/*       */     private DescriptorProtos.FieldOptions options_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private FieldDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 11436 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 12442 */       this.memoizedIsInitialized = -1; } private FieldDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; this.label_ = 1; this.type_ = 1; this.typeName_ = ""; this.extendee_ = ""; this.defaultValue_ = ""; this.jsonName_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FieldDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FieldDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString byteString2; int rawValue; ByteString byteString1; DescriptorProtos.FieldOptions.Builder subBuilder; ByteString bs; Label label; Type value; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: byteString2 = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = byteString2; continue;case 18: byteString2 = input.readBytes(); this.bitField0_ |= 0x20; this.extendee_ = byteString2; continue;case 24: this.bitField0_ |= 0x2; this.number_ = input.readInt32(); continue;case 32: rawValue = input.readEnum(); label = Label.valueOf(rawValue); if (label == null) { unknownFields.mergeVarintField(4, rawValue); continue; }  this.bitField0_ |= 0x4; this.label_ = rawValue; continue;case 40: rawValue = input.readEnum(); value = Type.valueOf(rawValue); if (value == null) { unknownFields.mergeVarintField(5, rawValue); continue; }  this.bitField0_ |= 0x8; this.type_ = rawValue; continue;case 50: byteString1 = input.readBytes(); this.bitField0_ |= 0x10; this.typeName_ = byteString1; continue;case 58: byteString1 = input.readBytes(); this.bitField0_ |= 0x40; this.defaultValue_ = byteString1; continue;case 66: subBuilder = null; if ((this.bitField0_ & 0x200) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<DescriptorProtos.FieldOptions>readMessage(DescriptorProtos.FieldOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x200; continue;case 72: this.bitField0_ |= 0x80; this.oneofIndex_ = input.readInt32(); continue;case 82: bs = input.readBytes(); this.bitField0_ |= 0x100; this.jsonName_ = bs; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)FieldDescriptorProto.class, (Class)Builder.class); } public enum Type implements ProtocolMessageEnum {
/*       */       TYPE_DOUBLE(1), TYPE_FLOAT(2), TYPE_INT64(3), TYPE_UINT64(4), TYPE_INT32(5), TYPE_FIXED64(6), TYPE_FIXED32(7), TYPE_BOOL(8), TYPE_STRING(9), TYPE_GROUP(10), TYPE_MESSAGE(11), TYPE_BYTES(12), TYPE_UINT32(13), TYPE_ENUM(14), TYPE_SFIXED32(15), TYPE_SFIXED64(16), TYPE_SINT32(17), TYPE_SINT64(18); public static final int TYPE_DOUBLE_VALUE = 1; public static final int TYPE_FLOAT_VALUE = 2; public static final int TYPE_INT64_VALUE = 3; public static final int TYPE_UINT64_VALUE = 4; public static final int TYPE_INT32_VALUE = 5; public static final int TYPE_FIXED64_VALUE = 6; public static final int TYPE_FIXED32_VALUE = 7; public static final int TYPE_BOOL_VALUE = 8; public static final int TYPE_STRING_VALUE = 9; public static final int TYPE_GROUP_VALUE = 10; public static final int TYPE_MESSAGE_VALUE = 11; public static final int TYPE_BYTES_VALUE = 12; public static final int TYPE_UINT32_VALUE = 13; public static final int TYPE_ENUM_VALUE = 14; public static final int TYPE_SFIXED32_VALUE = 15; public static final int TYPE_SFIXED64_VALUE = 16; public static final int TYPE_SINT32_VALUE = 17; public static final int TYPE_SINT64_VALUE = 18; private static final Internal.EnumLiteMap<Type> internalValueMap = new Internal.EnumLiteMap<Type>() { public DescriptorProtos.FieldDescriptorProto.Type findValueByNumber(int number) { return DescriptorProtos.FieldDescriptorProto.Type.forNumber(number); } }
/*       */       ; private static final Type[] VALUES = values(); private final int value; public final int getNumber() { return this.value; } public static Type forNumber(int value) { switch (value) { case 1: return TYPE_DOUBLE;case 2: return TYPE_FLOAT;case 3: return TYPE_INT64;case 4: return TYPE_UINT64;case 5: return TYPE_INT32;case 6: return TYPE_FIXED64;case 7: return TYPE_FIXED32;case 8: return TYPE_BOOL;case 9: return TYPE_STRING;case 10: return TYPE_GROUP;case 11: return TYPE_MESSAGE;case 12: return TYPE_BYTES;case 13: return TYPE_UINT32;case 14: return TYPE_ENUM;case 15: return TYPE_SFIXED32;case 16: return TYPE_SFIXED64;case 17: return TYPE_SINT32;case 18: return TYPE_SINT64; }  return null; } public static Internal.EnumLiteMap<Type> internalGetValueMap() { return internalValueMap; } static {  } public final Descriptors.EnumValueDescriptor getValueDescriptor() { return getDescriptor().getValues().get(ordinal()); } public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); } public static final Descriptors.EnumDescriptor getDescriptor() { return DescriptorProtos.FieldDescriptorProto.getDescriptor().getEnumTypes().get(0); } Type(int value) { this.value = value; } } public enum Label implements ProtocolMessageEnum {
/* 12445 */       LABEL_OPTIONAL(1), LABEL_REQUIRED(2), LABEL_REPEATED(3); public static final int LABEL_OPTIONAL_VALUE = 1; public static final int LABEL_REQUIRED_VALUE = 2; public static final int LABEL_REPEATED_VALUE = 3; private static final Internal.EnumLiteMap<Label> internalValueMap = new Internal.EnumLiteMap<Label>() { public DescriptorProtos.FieldDescriptorProto.Label findValueByNumber(int number) { return DescriptorProtos.FieldDescriptorProto.Label.forNumber(number); } }; private static final Label[] VALUES = values(); private final int value; public final int getNumber() { return this.value; } public static Label forNumber(int value) { switch (value) { case 1: return LABEL_OPTIONAL;case 2: return LABEL_REQUIRED;case 3: return LABEL_REPEATED; }  return null; } public static Internal.EnumLiteMap<Label> internalGetValueMap() { return internalValueMap; } static {  } public final Descriptors.EnumValueDescriptor getValueDescriptor() { return getDescriptor().getValues().get(ordinal()); } public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); } public static final Descriptors.EnumDescriptor getDescriptor() { return DescriptorProtos.FieldDescriptorProto.getDescriptor().getEnumTypes().get(1); } Label(int value) { this.value = value; } } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public boolean hasNumber() { return ((this.bitField0_ & 0x2) != 0); } public int getNumber() { return this.number_; } public boolean hasLabel() { return ((this.bitField0_ & 0x4) != 0); } public Label getLabel() { Label result = Label.valueOf(this.label_); return (result == null) ? Label.LABEL_OPTIONAL : result; } public boolean hasType() { return ((this.bitField0_ & 0x8) != 0); } public Type getType() { Type result = Type.valueOf(this.type_); return (result == null) ? Type.TYPE_DOUBLE : result; } public boolean hasTypeName() { return ((this.bitField0_ & 0x10) != 0); } public String getTypeName() { Object ref = this.typeName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.typeName_ = s;  return s; } public ByteString getTypeNameBytes() { Object ref = this.typeName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.typeName_ = b; return b; }  return (ByteString)ref; } public boolean hasExtendee() { return ((this.bitField0_ & 0x20) != 0); } public String getExtendee() { Object ref = this.extendee_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.extendee_ = s;  return s; } public ByteString getExtendeeBytes() { Object ref = this.extendee_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.extendee_ = b; return b; }  return (ByteString)ref; } public boolean hasDefaultValue() { return ((this.bitField0_ & 0x40) != 0); } public String getDefaultValue() { Object ref = this.defaultValue_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.defaultValue_ = s;  return s; } public ByteString getDefaultValueBytes() { Object ref = this.defaultValue_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.defaultValue_ = b; return b; }  return (ByteString)ref; } public boolean hasOneofIndex() { return ((this.bitField0_ & 0x80) != 0); } public int getOneofIndex() { return this.oneofIndex_; } public boolean hasJsonName() { return ((this.bitField0_ & 0x100) != 0); } public String getJsonName() { Object ref = this.jsonName_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.jsonName_ = s;  return s; } public ByteString getJsonNameBytes() { Object ref = this.jsonName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.jsonName_ = b; return b; }  return (ByteString)ref; } public boolean hasOptions() { return ((this.bitField0_ & 0x200) != 0); } public DescriptorProtos.FieldOptions getOptions() { return (this.options_ == null) ? DescriptorProtos.FieldOptions.getDefaultInstance() : this.options_; } public DescriptorProtos.FieldOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? DescriptorProtos.FieldOptions.getDefaultInstance() : this.options_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 12446 */       if (isInitialized == 1) return true; 
/* 12447 */       if (isInitialized == 0) return false;
/*       */       
/* 12449 */       if (hasOptions() && 
/* 12450 */         !getOptions().isInitialized()) {
/* 12451 */         this.memoizedIsInitialized = 0;
/* 12452 */         return false;
/*       */       } 
/*       */       
/* 12455 */       this.memoizedIsInitialized = 1;
/* 12456 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 12462 */       if ((this.bitField0_ & 0x1) != 0) {
/* 12463 */         GeneratedMessageV3.writeString(output, 1, this.name_);
/*       */       }
/* 12465 */       if ((this.bitField0_ & 0x20) != 0) {
/* 12466 */         GeneratedMessageV3.writeString(output, 2, this.extendee_);
/*       */       }
/* 12468 */       if ((this.bitField0_ & 0x2) != 0) {
/* 12469 */         output.writeInt32(3, this.number_);
/*       */       }
/* 12471 */       if ((this.bitField0_ & 0x4) != 0) {
/* 12472 */         output.writeEnum(4, this.label_);
/*       */       }
/* 12474 */       if ((this.bitField0_ & 0x8) != 0) {
/* 12475 */         output.writeEnum(5, this.type_);
/*       */       }
/* 12477 */       if ((this.bitField0_ & 0x10) != 0) {
/* 12478 */         GeneratedMessageV3.writeString(output, 6, this.typeName_);
/*       */       }
/* 12480 */       if ((this.bitField0_ & 0x40) != 0) {
/* 12481 */         GeneratedMessageV3.writeString(output, 7, this.defaultValue_);
/*       */       }
/* 12483 */       if ((this.bitField0_ & 0x200) != 0) {
/* 12484 */         output.writeMessage(8, getOptions());
/*       */       }
/* 12486 */       if ((this.bitField0_ & 0x80) != 0) {
/* 12487 */         output.writeInt32(9, this.oneofIndex_);
/*       */       }
/* 12489 */       if ((this.bitField0_ & 0x100) != 0) {
/* 12490 */         GeneratedMessageV3.writeString(output, 10, this.jsonName_);
/*       */       }
/* 12492 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 12497 */       int size = this.memoizedSize;
/* 12498 */       if (size != -1) return size;
/*       */       
/* 12500 */       size = 0;
/* 12501 */       if ((this.bitField0_ & 0x1) != 0) {
/* 12502 */         size += GeneratedMessageV3.computeStringSize(1, this.name_);
/*       */       }
/* 12504 */       if ((this.bitField0_ & 0x20) != 0) {
/* 12505 */         size += GeneratedMessageV3.computeStringSize(2, this.extendee_);
/*       */       }
/* 12507 */       if ((this.bitField0_ & 0x2) != 0) {
/* 12508 */         size += 
/* 12509 */           CodedOutputStream.computeInt32Size(3, this.number_);
/*       */       }
/* 12511 */       if ((this.bitField0_ & 0x4) != 0) {
/* 12512 */         size += 
/* 12513 */           CodedOutputStream.computeEnumSize(4, this.label_);
/*       */       }
/* 12515 */       if ((this.bitField0_ & 0x8) != 0) {
/* 12516 */         size += 
/* 12517 */           CodedOutputStream.computeEnumSize(5, this.type_);
/*       */       }
/* 12519 */       if ((this.bitField0_ & 0x10) != 0) {
/* 12520 */         size += GeneratedMessageV3.computeStringSize(6, this.typeName_);
/*       */       }
/* 12522 */       if ((this.bitField0_ & 0x40) != 0) {
/* 12523 */         size += GeneratedMessageV3.computeStringSize(7, this.defaultValue_);
/*       */       }
/* 12525 */       if ((this.bitField0_ & 0x200) != 0) {
/* 12526 */         size += 
/* 12527 */           CodedOutputStream.computeMessageSize(8, getOptions());
/*       */       }
/* 12529 */       if ((this.bitField0_ & 0x80) != 0) {
/* 12530 */         size += 
/* 12531 */           CodedOutputStream.computeInt32Size(9, this.oneofIndex_);
/*       */       }
/* 12533 */       if ((this.bitField0_ & 0x100) != 0) {
/* 12534 */         size += GeneratedMessageV3.computeStringSize(10, this.jsonName_);
/*       */       }
/* 12536 */       size += this.unknownFields.getSerializedSize();
/* 12537 */       this.memoizedSize = size;
/* 12538 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 12543 */       if (obj == this) {
/* 12544 */         return true;
/*       */       }
/* 12546 */       if (!(obj instanceof FieldDescriptorProto)) {
/* 12547 */         return super.equals(obj);
/*       */       }
/* 12549 */       FieldDescriptorProto other = (FieldDescriptorProto)obj;
/*       */       
/* 12551 */       if (hasName() != other.hasName()) return false; 
/* 12552 */       if (hasName() && 
/*       */         
/* 12554 */         !getName().equals(other.getName())) return false;
/*       */       
/* 12556 */       if (hasNumber() != other.hasNumber()) return false; 
/* 12557 */       if (hasNumber() && 
/* 12558 */         getNumber() != other
/* 12559 */         .getNumber()) return false;
/*       */       
/* 12561 */       if (hasLabel() != other.hasLabel()) return false; 
/* 12562 */       if (hasLabel() && 
/* 12563 */         this.label_ != other.label_) return false;
/*       */       
/* 12565 */       if (hasType() != other.hasType()) return false; 
/* 12566 */       if (hasType() && 
/* 12567 */         this.type_ != other.type_) return false;
/*       */       
/* 12569 */       if (hasTypeName() != other.hasTypeName()) return false; 
/* 12570 */       if (hasTypeName() && 
/*       */         
/* 12572 */         !getTypeName().equals(other.getTypeName())) return false;
/*       */       
/* 12574 */       if (hasExtendee() != other.hasExtendee()) return false; 
/* 12575 */       if (hasExtendee() && 
/*       */         
/* 12577 */         !getExtendee().equals(other.getExtendee())) return false;
/*       */       
/* 12579 */       if (hasDefaultValue() != other.hasDefaultValue()) return false; 
/* 12580 */       if (hasDefaultValue() && 
/*       */         
/* 12582 */         !getDefaultValue().equals(other.getDefaultValue())) return false;
/*       */       
/* 12584 */       if (hasOneofIndex() != other.hasOneofIndex()) return false; 
/* 12585 */       if (hasOneofIndex() && 
/* 12586 */         getOneofIndex() != other
/* 12587 */         .getOneofIndex()) return false;
/*       */       
/* 12589 */       if (hasJsonName() != other.hasJsonName()) return false; 
/* 12590 */       if (hasJsonName() && 
/*       */         
/* 12592 */         !getJsonName().equals(other.getJsonName())) return false;
/*       */       
/* 12594 */       if (hasOptions() != other.hasOptions()) return false; 
/* 12595 */       if (hasOptions() && 
/*       */         
/* 12597 */         !getOptions().equals(other.getOptions())) return false;
/*       */       
/* 12599 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 12600 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 12605 */       if (this.memoizedHashCode != 0) {
/* 12606 */         return this.memoizedHashCode;
/*       */       }
/* 12608 */       int hash = 41;
/* 12609 */       hash = 19 * hash + getDescriptor().hashCode();
/* 12610 */       if (hasName()) {
/* 12611 */         hash = 37 * hash + 1;
/* 12612 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/* 12614 */       if (hasNumber()) {
/* 12615 */         hash = 37 * hash + 3;
/* 12616 */         hash = 53 * hash + getNumber();
/*       */       } 
/* 12618 */       if (hasLabel()) {
/* 12619 */         hash = 37 * hash + 4;
/* 12620 */         hash = 53 * hash + this.label_;
/*       */       } 
/* 12622 */       if (hasType()) {
/* 12623 */         hash = 37 * hash + 5;
/* 12624 */         hash = 53 * hash + this.type_;
/*       */       } 
/* 12626 */       if (hasTypeName()) {
/* 12627 */         hash = 37 * hash + 6;
/* 12628 */         hash = 53 * hash + getTypeName().hashCode();
/*       */       } 
/* 12630 */       if (hasExtendee()) {
/* 12631 */         hash = 37 * hash + 2;
/* 12632 */         hash = 53 * hash + getExtendee().hashCode();
/*       */       } 
/* 12634 */       if (hasDefaultValue()) {
/* 12635 */         hash = 37 * hash + 7;
/* 12636 */         hash = 53 * hash + getDefaultValue().hashCode();
/*       */       } 
/* 12638 */       if (hasOneofIndex()) {
/* 12639 */         hash = 37 * hash + 9;
/* 12640 */         hash = 53 * hash + getOneofIndex();
/*       */       } 
/* 12642 */       if (hasJsonName()) {
/* 12643 */         hash = 37 * hash + 10;
/* 12644 */         hash = 53 * hash + getJsonName().hashCode();
/*       */       } 
/* 12646 */       if (hasOptions()) {
/* 12647 */         hash = 37 * hash + 8;
/* 12648 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/* 12650 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 12651 */       this.memoizedHashCode = hash;
/* 12652 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 12658 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 12664 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 12669 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 12675 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 12679 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 12685 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(InputStream input) throws IOException {
/* 12689 */       return 
/* 12690 */         GeneratedMessageV3.<FieldDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 12696 */       return 
/* 12697 */         GeneratedMessageV3.<FieldDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FieldDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/* 12701 */       return 
/* 12702 */         GeneratedMessageV3.<FieldDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 12708 */       return 
/* 12709 */         GeneratedMessageV3.<FieldDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/* 12714 */       return 
/* 12715 */         GeneratedMessageV3.<FieldDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 12721 */       return 
/* 12722 */         GeneratedMessageV3.<FieldDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 12726 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 12728 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FieldDescriptorProto prototype) {
/* 12731 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 12735 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 12736 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 12742 */       Builder builder = new Builder(parent);
/* 12743 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DescriptorProtos.FieldDescriptorProtoOrBuilder { private int bitField0_; private Object name_;
/*       */       private int number_;
/*       */       private int label_;
/*       */       private int type_;
/*       */       private Object typeName_;
/*       */       private Object extendee_;
/*       */       private Object defaultValue_;
/*       */       private int oneofIndex_;
/*       */       private Object jsonName_;
/*       */       private DescriptorProtos.FieldOptions options_;
/*       */       private SingleFieldBuilderV3<DescriptorProtos.FieldOptions, DescriptorProtos.FieldOptions.Builder, DescriptorProtos.FieldOptionsOrBuilder> optionsBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 12758 */         return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 12764 */         return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable
/* 12765 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.FieldDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 13008 */         this.name_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 13129 */         this.label_ = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 13171 */         this.type_ = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 13233 */         this.typeName_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 13365 */         this.extendee_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 13479 */         this.defaultValue_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 13668 */         this.jsonName_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.name_ = ""; this.label_ = 1; this.type_ = 1; this.typeName_ = ""; this.extendee_ = ""; this.defaultValue_ = ""; this.jsonName_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getOptionsFieldBuilder();  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.number_ = 0; this.bitField0_ &= 0xFFFFFFFD; this.label_ = 1; this.bitField0_ &= 0xFFFFFFFB; this.type_ = 1; this.bitField0_ &= 0xFFFFFFF7; this.typeName_ = ""; this.bitField0_ &= 0xFFFFFFEF; this.extendee_ = ""; this.bitField0_ &= 0xFFFFFFDF; this.defaultValue_ = ""; this.bitField0_ &= 0xFFFFFFBF; this.oneofIndex_ = 0; this.bitField0_ &= 0xFFFFFF7F; this.jsonName_ = ""; this.bitField0_ &= 0xFFFFFEFF; if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFDFF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_descriptor; } public DescriptorProtos.FieldDescriptorProto getDefaultInstanceForType() { return DescriptorProtos.FieldDescriptorProto.getDefaultInstance(); } public DescriptorProtos.FieldDescriptorProto build() { DescriptorProtos.FieldDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.FieldDescriptorProto buildPartial() { DescriptorProtos.FieldDescriptorProto result = new DescriptorProtos.FieldDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if ((from_bitField0_ & 0x2) != 0) { result.number_ = this.number_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x4) != 0) to_bitField0_ |= 0x4;  result.label_ = this.label_; if ((from_bitField0_ & 0x8) != 0) to_bitField0_ |= 0x8;  result.type_ = this.type_; if ((from_bitField0_ & 0x10) != 0) to_bitField0_ |= 0x10;  result.typeName_ = this.typeName_; if ((from_bitField0_ & 0x20) != 0) to_bitField0_ |= 0x20;  result.extendee_ = this.extendee_; if ((from_bitField0_ & 0x40) != 0) to_bitField0_ |= 0x40;  result.defaultValue_ = this.defaultValue_; if ((from_bitField0_ & 0x80) != 0) { result.oneofIndex_ = this.oneofIndex_; to_bitField0_ |= 0x80; }  if ((from_bitField0_ & 0x100) != 0) to_bitField0_ |= 0x100;  result.jsonName_ = this.jsonName_; if ((from_bitField0_ & 0x200) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x200; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.FieldDescriptorProto) return mergeFrom((DescriptorProtos.FieldDescriptorProto)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.FieldDescriptorProto other) { if (other == DescriptorProtos.FieldDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (other.hasNumber()) setNumber(other.getNumber());  if (other.hasLabel()) setLabel(other.getLabel());  if (other.hasType()) setType(other.getType());  if (other.hasTypeName()) { this.bitField0_ |= 0x10; this.typeName_ = other.typeName_; onChanged(); }  if (other.hasExtendee()) { this.bitField0_ |= 0x20; this.extendee_ = other.extendee_; onChanged(); }  if (other.hasDefaultValue()) { this.bitField0_ |= 0x40; this.defaultValue_ = other.defaultValue_; onChanged(); }  if (other.hasOneofIndex()) setOneofIndex(other.getOneofIndex());  if (other.hasJsonName()) { this.bitField0_ |= 0x100; this.jsonName_ = other.jsonName_; onChanged(); }  if (other.hasOptions()) mergeOptions(other.getOptions());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.FieldDescriptorProto parsedMessage = null; try { parsedMessage = DescriptorProtos.FieldDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.FieldDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFE; this.name_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getName(); onChanged(); return this; } public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public boolean hasNumber() { return ((this.bitField0_ & 0x2) != 0); } public int getNumber() { return this.number_; } public Builder setNumber(int value) { this.bitField0_ |= 0x2; this.number_ = value; onChanged(); return this; } public Builder clearNumber() { this.bitField0_ &= 0xFFFFFFFD; this.number_ = 0; onChanged(); return this; } public boolean hasLabel() { return ((this.bitField0_ & 0x4) != 0); } public DescriptorProtos.FieldDescriptorProto.Label getLabel() { DescriptorProtos.FieldDescriptorProto.Label result = DescriptorProtos.FieldDescriptorProto.Label.valueOf(this.label_); return (result == null) ? DescriptorProtos.FieldDescriptorProto.Label.LABEL_OPTIONAL : result; } public Builder setLabel(DescriptorProtos.FieldDescriptorProto.Label value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x4; this.label_ = value.getNumber(); onChanged(); return this; } public Builder clearLabel() { this.bitField0_ &= 0xFFFFFFFB; this.label_ = 1; onChanged(); return this; } public boolean hasType() { return ((this.bitField0_ & 0x8) != 0); } public DescriptorProtos.FieldDescriptorProto.Type getType() { DescriptorProtos.FieldDescriptorProto.Type result = DescriptorProtos.FieldDescriptorProto.Type.valueOf(this.type_); return (result == null) ? DescriptorProtos.FieldDescriptorProto.Type.TYPE_DOUBLE : result; } public Builder setType(DescriptorProtos.FieldDescriptorProto.Type value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x8; this.type_ = value.getNumber(); onChanged(); return this; } public Builder clearType() { this.bitField0_ &= 0xFFFFFFF7; this.type_ = 1; onChanged(); return this; } public boolean hasTypeName() { return ((this.bitField0_ & 0x10) != 0); } public String getTypeName() { Object ref = this.typeName_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.typeName_ = s;  return s; }  return (String)ref; } public ByteString getTypeNameBytes() { Object ref = this.typeName_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.typeName_ = b; return b; }  return (ByteString)ref; } public Builder setTypeName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x10; this.typeName_ = value; onChanged(); return this; } public Builder clearTypeName() { this.bitField0_ &= 0xFFFFFFEF; this.typeName_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getTypeName(); onChanged(); return this; } public Builder setTypeNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x10; this.typeName_ = value; onChanged(); return this; } public boolean hasExtendee() { return ((this.bitField0_ & 0x20) != 0); } public String getExtendee() { Object ref = this.extendee_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.extendee_ = s;  return s; }  return (String)ref; } public ByteString getExtendeeBytes() { Object ref = this.extendee_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.extendee_ = b; return b; }  return (ByteString)ref; } public Builder setExtendee(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x20; this.extendee_ = value; onChanged(); return this; }
/*       */       public Builder clearExtendee() { this.bitField0_ &= 0xFFFFFFDF; this.extendee_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getExtendee(); onChanged(); return this; }
/*       */       public Builder setExtendeeBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x20; this.extendee_ = value; onChanged(); return this; }
/*       */       public boolean hasDefaultValue() { return ((this.bitField0_ & 0x40) != 0); }
/*       */       public String getDefaultValue() { Object ref = this.defaultValue_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.defaultValue_ = s;  return s; }  return (String)ref; }
/*       */       public ByteString getDefaultValueBytes() { Object ref = this.defaultValue_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.defaultValue_ = b; return b; }  return (ByteString)ref; }
/*       */       public Builder setDefaultValue(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40; this.defaultValue_ = value; onChanged(); return this; }
/*       */       public Builder clearDefaultValue() { this.bitField0_ &= 0xFFFFFFBF; this.defaultValue_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getDefaultValue(); onChanged(); return this; }
/*       */       public Builder setDefaultValueBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40; this.defaultValue_ = value; onChanged(); return this; }
/*       */       public boolean hasOneofIndex() { return ((this.bitField0_ & 0x80) != 0); }
/*       */       public int getOneofIndex() { return this.oneofIndex_; }
/*       */       public Builder setOneofIndex(int value) { this.bitField0_ |= 0x80; this.oneofIndex_ = value; onChanged(); return this; }
/*       */       public Builder clearOneofIndex() { this.bitField0_ &= 0xFFFFFF7F; this.oneofIndex_ = 0; onChanged(); return this; }
/* 13681 */       public boolean hasJsonName() { return ((this.bitField0_ & 0x100) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getJsonName() {
/* 13695 */         Object ref = this.jsonName_;
/* 13696 */         if (!(ref instanceof String)) {
/* 13697 */           ByteString bs = (ByteString)ref;
/*       */           
/* 13699 */           String s = bs.toStringUtf8();
/* 13700 */           if (bs.isValidUtf8()) {
/* 13701 */             this.jsonName_ = s;
/*       */           }
/* 13703 */           return s;
/*       */         } 
/* 13705 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getJsonNameBytes() {
/* 13721 */         Object ref = this.jsonName_;
/* 13722 */         if (ref instanceof String) {
/*       */           
/* 13724 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 13726 */           this.jsonName_ = b;
/* 13727 */           return b;
/*       */         } 
/* 13729 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setJsonName(String value) {
/* 13746 */         if (value == null) {
/* 13747 */           throw new NullPointerException();
/*       */         }
/* 13749 */         this.bitField0_ |= 0x100;
/* 13750 */         this.jsonName_ = value;
/* 13751 */         onChanged();
/* 13752 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearJsonName() {
/* 13766 */         this.bitField0_ &= 0xFFFFFEFF;
/* 13767 */         this.jsonName_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getJsonName();
/* 13768 */         onChanged();
/* 13769 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setJsonNameBytes(ByteString value) {
/* 13785 */         if (value == null) {
/* 13786 */           throw new NullPointerException();
/*       */         }
/* 13788 */         this.bitField0_ |= 0x100;
/* 13789 */         this.jsonName_ = value;
/* 13790 */         onChanged();
/* 13791 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasOptions() {
/* 13802 */         return ((this.bitField0_ & 0x200) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.FieldOptions getOptions() {
/* 13809 */         if (this.optionsBuilder_ == null) {
/* 13810 */           return (this.options_ == null) ? DescriptorProtos.FieldOptions.getDefaultInstance() : this.options_;
/*       */         }
/* 13812 */         return this.optionsBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(DescriptorProtos.FieldOptions value) {
/* 13819 */         if (this.optionsBuilder_ == null) {
/* 13820 */           if (value == null) {
/* 13821 */             throw new NullPointerException();
/*       */           }
/* 13823 */           this.options_ = value;
/* 13824 */           onChanged();
/*       */         } else {
/* 13826 */           this.optionsBuilder_.setMessage(value);
/*       */         } 
/* 13828 */         this.bitField0_ |= 0x200;
/* 13829 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(DescriptorProtos.FieldOptions.Builder builderForValue) {
/* 13836 */         if (this.optionsBuilder_ == null) {
/* 13837 */           this.options_ = builderForValue.build();
/* 13838 */           onChanged();
/*       */         } else {
/* 13840 */           this.optionsBuilder_.setMessage(builderForValue.build());
/*       */         } 
/* 13842 */         this.bitField0_ |= 0x200;
/* 13843 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeOptions(DescriptorProtos.FieldOptions value) {
/* 13849 */         if (this.optionsBuilder_ == null) {
/* 13850 */           if ((this.bitField0_ & 0x200) != 0 && this.options_ != null && this.options_ != 
/*       */             
/* 13852 */             DescriptorProtos.FieldOptions.getDefaultInstance()) {
/* 13853 */             this
/* 13854 */               .options_ = DescriptorProtos.FieldOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 13856 */             this.options_ = value;
/*       */           } 
/* 13858 */           onChanged();
/*       */         } else {
/* 13860 */           this.optionsBuilder_.mergeFrom(value);
/*       */         } 
/* 13862 */         this.bitField0_ |= 0x200;
/* 13863 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOptions() {
/* 13869 */         if (this.optionsBuilder_ == null) {
/* 13870 */           this.options_ = null;
/* 13871 */           onChanged();
/*       */         } else {
/* 13873 */           this.optionsBuilder_.clear();
/*       */         } 
/* 13875 */         this.bitField0_ &= 0xFFFFFDFF;
/* 13876 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.FieldOptions.Builder getOptionsBuilder() {
/* 13882 */         this.bitField0_ |= 0x200;
/* 13883 */         onChanged();
/* 13884 */         return getOptionsFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.FieldOptionsOrBuilder getOptionsOrBuilder() {
/* 13890 */         if (this.optionsBuilder_ != null) {
/* 13891 */           return this.optionsBuilder_.getMessageOrBuilder();
/*       */         }
/* 13893 */         return (this.options_ == null) ? 
/* 13894 */           DescriptorProtos.FieldOptions.getDefaultInstance() : this.options_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DescriptorProtos.FieldOptions, DescriptorProtos.FieldOptions.Builder, DescriptorProtos.FieldOptionsOrBuilder> getOptionsFieldBuilder() {
/* 13903 */         if (this.optionsBuilder_ == null) {
/* 13904 */           this
/*       */ 
/*       */ 
/*       */             
/* 13908 */             .optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean());
/* 13909 */           this.options_ = null;
/*       */         } 
/* 13911 */         return this.optionsBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 13916 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 13922 */         return super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 13932 */     private static final FieldDescriptorProto DEFAULT_INSTANCE = new FieldDescriptorProto();
/*       */ 
/*       */     
/*       */     public static FieldDescriptorProto getDefaultInstance() {
/* 13936 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 13940 */     public static final Parser<FieldDescriptorProto> PARSER = new AbstractParser<FieldDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.FieldDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 13946 */           return new DescriptorProtos.FieldDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FieldDescriptorProto> parser() {
/* 13951 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FieldDescriptorProto> getParserForType() {
/* 13956 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FieldDescriptorProto getDefaultInstanceForType() {
/* 13961 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface OneofDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.OneofOptions getOptions();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.OneofOptionsOrBuilder getOptionsOrBuilder();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class OneofDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements OneofDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */     
/*       */     private volatile Object name_;
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 2;
/*       */     
/*       */     private DescriptorProtos.OneofOptions options_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private OneofDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 14016 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 14173 */       this.memoizedIsInitialized = -1; } private OneofDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new OneofDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private OneofDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; DescriptorProtos.OneofOptions.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = bs; continue;case 18: subBuilder = null; if ((this.bitField0_ & 0x2) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<DescriptorProtos.OneofOptions>readMessage(DescriptorProtos.OneofOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x2; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)OneofDescriptorProto.class, (Class)Builder.class); } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public boolean hasOptions() { return ((this.bitField0_ & 0x2) != 0); }
/*       */     public DescriptorProtos.OneofOptions getOptions() { return (this.options_ == null) ? DescriptorProtos.OneofOptions.getDefaultInstance() : this.options_; }
/*       */     public DescriptorProtos.OneofOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? DescriptorProtos.OneofOptions.getDefaultInstance() : this.options_; }
/* 14176 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 14177 */       if (isInitialized == 1) return true; 
/* 14178 */       if (isInitialized == 0) return false;
/*       */       
/* 14180 */       if (hasOptions() && 
/* 14181 */         !getOptions().isInitialized()) {
/* 14182 */         this.memoizedIsInitialized = 0;
/* 14183 */         return false;
/*       */       } 
/*       */       
/* 14186 */       this.memoizedIsInitialized = 1;
/* 14187 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 14193 */       if ((this.bitField0_ & 0x1) != 0) {
/* 14194 */         GeneratedMessageV3.writeString(output, 1, this.name_);
/*       */       }
/* 14196 */       if ((this.bitField0_ & 0x2) != 0) {
/* 14197 */         output.writeMessage(2, getOptions());
/*       */       }
/* 14199 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 14204 */       int size = this.memoizedSize;
/* 14205 */       if (size != -1) return size;
/*       */       
/* 14207 */       size = 0;
/* 14208 */       if ((this.bitField0_ & 0x1) != 0) {
/* 14209 */         size += GeneratedMessageV3.computeStringSize(1, this.name_);
/*       */       }
/* 14211 */       if ((this.bitField0_ & 0x2) != 0) {
/* 14212 */         size += 
/* 14213 */           CodedOutputStream.computeMessageSize(2, getOptions());
/*       */       }
/* 14215 */       size += this.unknownFields.getSerializedSize();
/* 14216 */       this.memoizedSize = size;
/* 14217 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 14222 */       if (obj == this) {
/* 14223 */         return true;
/*       */       }
/* 14225 */       if (!(obj instanceof OneofDescriptorProto)) {
/* 14226 */         return super.equals(obj);
/*       */       }
/* 14228 */       OneofDescriptorProto other = (OneofDescriptorProto)obj;
/*       */       
/* 14230 */       if (hasName() != other.hasName()) return false; 
/* 14231 */       if (hasName() && 
/*       */         
/* 14233 */         !getName().equals(other.getName())) return false;
/*       */       
/* 14235 */       if (hasOptions() != other.hasOptions()) return false; 
/* 14236 */       if (hasOptions() && 
/*       */         
/* 14238 */         !getOptions().equals(other.getOptions())) return false;
/*       */       
/* 14240 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 14241 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 14246 */       if (this.memoizedHashCode != 0) {
/* 14247 */         return this.memoizedHashCode;
/*       */       }
/* 14249 */       int hash = 41;
/* 14250 */       hash = 19 * hash + getDescriptor().hashCode();
/* 14251 */       if (hasName()) {
/* 14252 */         hash = 37 * hash + 1;
/* 14253 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/* 14255 */       if (hasOptions()) {
/* 14256 */         hash = 37 * hash + 2;
/* 14257 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/* 14259 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 14260 */       this.memoizedHashCode = hash;
/* 14261 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 14267 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 14273 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 14278 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 14284 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 14288 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 14294 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(InputStream input) throws IOException {
/* 14298 */       return 
/* 14299 */         GeneratedMessageV3.<OneofDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 14305 */       return 
/* 14306 */         GeneratedMessageV3.<OneofDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static OneofDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/* 14310 */       return 
/* 14311 */         GeneratedMessageV3.<OneofDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 14317 */       return 
/* 14318 */         GeneratedMessageV3.<OneofDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/* 14323 */       return 
/* 14324 */         GeneratedMessageV3.<OneofDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 14330 */       return 
/* 14331 */         GeneratedMessageV3.<OneofDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 14335 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 14337 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(OneofDescriptorProto prototype) {
/* 14340 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 14344 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 14345 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 14351 */       Builder builder = new Builder(parent);
/* 14352 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DescriptorProtos.OneofDescriptorProtoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private Object name_;
/*       */       private DescriptorProtos.OneofOptions options_;
/*       */       private SingleFieldBuilderV3<DescriptorProtos.OneofOptions, DescriptorProtos.OneofOptions.Builder, DescriptorProtos.OneofOptionsOrBuilder> optionsBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 14367 */         return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 14373 */         return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable
/* 14374 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.OneofDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 14537 */         this.name_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.name_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getOptionsFieldBuilder();  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_descriptor; } public DescriptorProtos.OneofDescriptorProto getDefaultInstanceForType() { return DescriptorProtos.OneofDescriptorProto.getDefaultInstance(); } public DescriptorProtos.OneofDescriptorProto build() { DescriptorProtos.OneofDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.OneofDescriptorProto buildPartial() { DescriptorProtos.OneofDescriptorProto result = new DescriptorProtos.OneofDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if ((from_bitField0_ & 0x2) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x2; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.OneofDescriptorProto) return mergeFrom((DescriptorProtos.OneofDescriptorProto)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DescriptorProtos.OneofDescriptorProto other) { if (other == DescriptorProtos.OneofDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (other.hasOptions()) mergeOptions(other.getOptions());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { if (hasOptions() && !getOptions().isInitialized()) return false;  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.OneofDescriptorProto parsedMessage = null; try { parsedMessage = DescriptorProtos.OneofDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.OneofDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 14543 */       public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getName() {
/* 14550 */         Object ref = this.name_;
/* 14551 */         if (!(ref instanceof String)) {
/* 14552 */           ByteString bs = (ByteString)ref;
/*       */           
/* 14554 */           String s = bs.toStringUtf8();
/* 14555 */           if (bs.isValidUtf8()) {
/* 14556 */             this.name_ = s;
/*       */           }
/* 14558 */           return s;
/*       */         } 
/* 14560 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getNameBytes() {
/* 14569 */         Object ref = this.name_;
/* 14570 */         if (ref instanceof String) {
/*       */           
/* 14572 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 14574 */           this.name_ = b;
/* 14575 */           return b;
/*       */         } 
/* 14577 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setName(String value) {
/* 14587 */         if (value == null) {
/* 14588 */           throw new NullPointerException();
/*       */         }
/* 14590 */         this.bitField0_ |= 0x1;
/* 14591 */         this.name_ = value;
/* 14592 */         onChanged();
/* 14593 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearName() {
/* 14600 */         this.bitField0_ &= 0xFFFFFFFE;
/* 14601 */         this.name_ = DescriptorProtos.OneofDescriptorProto.getDefaultInstance().getName();
/* 14602 */         onChanged();
/* 14603 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setNameBytes(ByteString value) {
/* 14612 */         if (value == null) {
/* 14613 */           throw new NullPointerException();
/*       */         }
/* 14615 */         this.bitField0_ |= 0x1;
/* 14616 */         this.name_ = value;
/* 14617 */         onChanged();
/* 14618 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasOptions() {
/* 14629 */         return ((this.bitField0_ & 0x2) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.OneofOptions getOptions() {
/* 14636 */         if (this.optionsBuilder_ == null) {
/* 14637 */           return (this.options_ == null) ? DescriptorProtos.OneofOptions.getDefaultInstance() : this.options_;
/*       */         }
/* 14639 */         return this.optionsBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(DescriptorProtos.OneofOptions value) {
/* 14646 */         if (this.optionsBuilder_ == null) {
/* 14647 */           if (value == null) {
/* 14648 */             throw new NullPointerException();
/*       */           }
/* 14650 */           this.options_ = value;
/* 14651 */           onChanged();
/*       */         } else {
/* 14653 */           this.optionsBuilder_.setMessage(value);
/*       */         } 
/* 14655 */         this.bitField0_ |= 0x2;
/* 14656 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(DescriptorProtos.OneofOptions.Builder builderForValue) {
/* 14663 */         if (this.optionsBuilder_ == null) {
/* 14664 */           this.options_ = builderForValue.build();
/* 14665 */           onChanged();
/*       */         } else {
/* 14667 */           this.optionsBuilder_.setMessage(builderForValue.build());
/*       */         } 
/* 14669 */         this.bitField0_ |= 0x2;
/* 14670 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeOptions(DescriptorProtos.OneofOptions value) {
/* 14676 */         if (this.optionsBuilder_ == null) {
/* 14677 */           if ((this.bitField0_ & 0x2) != 0 && this.options_ != null && this.options_ != 
/*       */             
/* 14679 */             DescriptorProtos.OneofOptions.getDefaultInstance()) {
/* 14680 */             this
/* 14681 */               .options_ = DescriptorProtos.OneofOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 14683 */             this.options_ = value;
/*       */           } 
/* 14685 */           onChanged();
/*       */         } else {
/* 14687 */           this.optionsBuilder_.mergeFrom(value);
/*       */         } 
/* 14689 */         this.bitField0_ |= 0x2;
/* 14690 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOptions() {
/* 14696 */         if (this.optionsBuilder_ == null) {
/* 14697 */           this.options_ = null;
/* 14698 */           onChanged();
/*       */         } else {
/* 14700 */           this.optionsBuilder_.clear();
/*       */         } 
/* 14702 */         this.bitField0_ &= 0xFFFFFFFD;
/* 14703 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.OneofOptions.Builder getOptionsBuilder() {
/* 14709 */         this.bitField0_ |= 0x2;
/* 14710 */         onChanged();
/* 14711 */         return getOptionsFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.OneofOptionsOrBuilder getOptionsOrBuilder() {
/* 14717 */         if (this.optionsBuilder_ != null) {
/* 14718 */           return this.optionsBuilder_.getMessageOrBuilder();
/*       */         }
/* 14720 */         return (this.options_ == null) ? 
/* 14721 */           DescriptorProtos.OneofOptions.getDefaultInstance() : this.options_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DescriptorProtos.OneofOptions, DescriptorProtos.OneofOptions.Builder, DescriptorProtos.OneofOptionsOrBuilder> getOptionsFieldBuilder() {
/* 14730 */         if (this.optionsBuilder_ == null) {
/* 14731 */           this
/*       */ 
/*       */ 
/*       */             
/* 14735 */             .optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean());
/* 14736 */           this.options_ = null;
/*       */         } 
/* 14738 */         return this.optionsBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 14743 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 14749 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 14759 */     private static final OneofDescriptorProto DEFAULT_INSTANCE = new OneofDescriptorProto();
/*       */ 
/*       */     
/*       */     public static OneofDescriptorProto getDefaultInstance() {
/* 14763 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 14767 */     public static final Parser<OneofDescriptorProto> PARSER = new AbstractParser<OneofDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.OneofDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 14773 */           return new DescriptorProtos.OneofDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<OneofDescriptorProto> parser() {
/* 14778 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<OneofDescriptorProto> getParserForType() {
/* 14783 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public OneofDescriptorProto getDefaultInstanceForType() {
/* 14788 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface EnumDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.EnumValueDescriptorProto> getValueList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.EnumValueDescriptorProto getValue(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getValueCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.EnumValueDescriptorProtoOrBuilder> getValueOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.EnumValueDescriptorProtoOrBuilder getValueOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.EnumOptions getOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.EnumOptionsOrBuilder getOptionsOrBuilder();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.EnumDescriptorProto.EnumReservedRange> getReservedRangeList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.EnumDescriptorProto.EnumReservedRange getReservedRange(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getReservedRangeCount();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder> getReservedRangeOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder getReservedRangeOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<String> getReservedNameList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getReservedNameCount();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getReservedName(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getReservedNameBytes(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class EnumDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements EnumDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object name_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int VALUE_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.EnumValueDescriptorProto> value_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 3;
/*       */ 
/*       */ 
/*       */     
/*       */     private DescriptorProtos.EnumOptions options_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int RESERVED_RANGE_FIELD_NUMBER = 4;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<EnumReservedRange> reservedRange_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int RESERVED_NAME_FIELD_NUMBER = 5;
/*       */ 
/*       */ 
/*       */     
/*       */     private LazyStringList reservedName_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private EnumDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 14966 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 16011 */       this.memoizedIsInitialized = -1; } private EnumDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; this.value_ = Collections.emptyList(); this.reservedRange_ = Collections.emptyList(); this.reservedName_ = LazyStringArrayList.EMPTY; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new EnumDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private EnumDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString byteString1; DescriptorProtos.EnumOptions.Builder subBuilder; ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: byteString1 = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = byteString1; continue;case 18: if ((mutable_bitField0_ & 0x2) == 0) { this.value_ = new ArrayList<>(); mutable_bitField0_ |= 0x2; }  this.value_.add(input.readMessage(DescriptorProtos.EnumValueDescriptorProto.PARSER, extensionRegistry)); continue;case 26: subBuilder = null; if ((this.bitField0_ & 0x2) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<DescriptorProtos.EnumOptions>readMessage(DescriptorProtos.EnumOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x2; continue;case 34: if ((mutable_bitField0_ & 0x8) == 0) { this.reservedRange_ = new ArrayList<>(); mutable_bitField0_ |= 0x8; }  this.reservedRange_.add(input.readMessage(EnumReservedRange.PARSER, extensionRegistry)); continue;case 42: bs = input.readBytes(); if ((mutable_bitField0_ & 0x10) == 0) { this.reservedName_ = new LazyStringArrayList(); mutable_bitField0_ |= 0x10; }  this.reservedName_.add(bs); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x2) != 0) this.value_ = Collections.unmodifiableList(this.value_);  if ((mutable_bitField0_ & 0x8) != 0) this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_);  if ((mutable_bitField0_ & 0x10) != 0) this.reservedName_ = this.reservedName_.getUnmodifiableView();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EnumDescriptorProto.class, (Class)Builder.class); } public static final class EnumReservedRange extends GeneratedMessageV3 implements EnumReservedRangeOrBuilder {
/*       */       private static final long serialVersionUID = 0L; private int bitField0_; public static final int START_FIELD_NUMBER = 1; private int start_; public static final int END_FIELD_NUMBER = 2; private int end_; private byte memoizedIsInitialized; private EnumReservedRange(GeneratedMessageV3.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; } private EnumReservedRange() { this.memoizedIsInitialized = -1; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new EnumReservedRange(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private EnumReservedRange(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.start_ = input.readInt32(); continue;case 16: this.bitField0_ |= 0x2; this.end_ = input.readInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EnumReservedRange.class, (Class)Builder.class); } public boolean hasStart() { return ((this.bitField0_ & 0x1) != 0); } public int getStart() { return this.start_; } public boolean hasEnd() { return ((this.bitField0_ & 0x2) != 0); } public int getEnd() { return this.end_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { if ((this.bitField0_ & 0x1) != 0) output.writeInt32(1, this.start_);  if ((this.bitField0_ & 0x2) != 0) output.writeInt32(2, this.end_);  this.unknownFields.writeTo(output); } public int getSerializedSize() { int size = this.memoizedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) != 0) size += CodedOutputStream.computeInt32Size(1, this.start_);  if ((this.bitField0_ & 0x2) != 0) size += CodedOutputStream.computeInt32Size(2, this.end_);  size += this.unknownFields.getSerializedSize(); this.memoizedSize = size; return size; } public boolean equals(Object obj) { if (obj == this) return true;  if (!(obj instanceof EnumReservedRange)) return super.equals(obj);  EnumReservedRange other = (EnumReservedRange)obj; if (hasStart() != other.hasStart()) return false;  if (hasStart() && getStart() != other.getStart()) return false;  if (hasEnd() != other.hasEnd()) return false;  if (hasEnd() && getEnd() != other.getEnd()) return false;  if (!this.unknownFields.equals(other.unknownFields)) return false;  return true; } public int hashCode() { if (this.memoizedHashCode != 0) return this.memoizedHashCode;  int hash = 41; hash = 19 * hash + getDescriptor().hashCode(); if (hasStart()) { hash = 37 * hash + 1; hash = 53 * hash + getStart(); }  if (hasEnd()) { hash = 37 * hash + 2; hash = 53 * hash + getEnd(); }  hash = 29 * hash + this.unknownFields.hashCode(); this.memoizedHashCode = hash; return hash; } public static EnumReservedRange parseFrom(ByteBuffer data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static EnumReservedRange parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static EnumReservedRange parseFrom(ByteString data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static EnumReservedRange parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static EnumReservedRange parseFrom(byte[] data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static EnumReservedRange parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static EnumReservedRange parseFrom(InputStream input) throws IOException { return GeneratedMessageV3.<EnumReservedRange>parseWithIOException(PARSER, input); } public static EnumReservedRange parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<EnumReservedRange>parseWithIOException(PARSER, input, extensionRegistry); } public static EnumReservedRange parseDelimitedFrom(InputStream input) throws IOException { return GeneratedMessageV3.<EnumReservedRange>parseDelimitedWithIOException(PARSER, input); } public static EnumReservedRange parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<EnumReservedRange>parseDelimitedWithIOException(PARSER, input, extensionRegistry); } public static EnumReservedRange parseFrom(CodedInputStream input) throws IOException { return GeneratedMessageV3.<EnumReservedRange>parseWithIOException(PARSER, input); } public static EnumReservedRange parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<EnumReservedRange>parseWithIOException(PARSER, input, extensionRegistry); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder() { return DEFAULT_INSTANCE.toBuilder(); } public static Builder newBuilder(EnumReservedRange prototype) { return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype); } public Builder toBuilder() { return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this); } protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder {
/*       */         private int bitField0_; private int start_; private int end_; public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)DescriptorProtos.EnumDescriptorProto.EnumReservedRange.class, (Class)Builder.class); } private Builder() { maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.start_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.end_ = 0; this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor; } public DescriptorProtos.EnumDescriptorProto.EnumReservedRange getDefaultInstanceForType() { return DescriptorProtos.EnumDescriptorProto.EnumReservedRange.getDefaultInstance(); } public DescriptorProtos.EnumDescriptorProto.EnumReservedRange build() { DescriptorProtos.EnumDescriptorProto.EnumReservedRange result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.EnumDescriptorProto.EnumReservedRange buildPartial() { DescriptorProtos.EnumDescriptorProto.EnumReservedRange result = new DescriptorProtos.EnumDescriptorProto.EnumReservedRange(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.start_ = this.start_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) { result.end_ = this.end_; to_bitField0_ |= 0x2; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.EnumDescriptorProto.EnumReservedRange) return mergeFrom((DescriptorProtos.EnumDescriptorProto.EnumReservedRange)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.EnumDescriptorProto.EnumReservedRange other) { if (other == DescriptorProtos.EnumDescriptorProto.EnumReservedRange.getDefaultInstance()) return this;  if (other.hasStart()) setStart(other.getStart());  if (other.hasEnd()) setEnd(other.getEnd());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.EnumDescriptorProto.EnumReservedRange parsedMessage = null; try { parsedMessage = DescriptorProtos.EnumDescriptorProto.EnumReservedRange.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasStart() { return ((this.bitField0_ & 0x1) != 0); } public int getStart() { return this.start_; } public Builder setStart(int value) { this.bitField0_ |= 0x1; this.start_ = value; onChanged(); return this; } public Builder clearStart() { this.bitField0_ &= 0xFFFFFFFE; this.start_ = 0; onChanged(); return this; } public boolean hasEnd() { return ((this.bitField0_ & 0x2) != 0); } public int getEnd() { return this.end_; } public Builder setEnd(int value) { this.bitField0_ |= 0x2; this.end_ = value; onChanged(); return this; } public Builder clearEnd() { this.bitField0_ &= 0xFFFFFFFD; this.end_ = 0; onChanged(); return this; } public final Builder setUnknownFields(UnknownFieldSet unknownFields) { return super.setUnknownFields(unknownFields); } public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) { return super.mergeUnknownFields(unknownFields); } } private static final EnumReservedRange DEFAULT_INSTANCE = new EnumReservedRange(); public static EnumReservedRange getDefaultInstance() { return DEFAULT_INSTANCE; } @Deprecated public static final Parser<EnumReservedRange> PARSER = new AbstractParser<EnumReservedRange>() { public DescriptorProtos.EnumDescriptorProto.EnumReservedRange parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new DescriptorProtos.EnumDescriptorProto.EnumReservedRange(input, extensionRegistry); } }
/* 16014 */       ; public static Parser<EnumReservedRange> parser() { return PARSER; } public Parser<EnumReservedRange> getParserForType() { return PARSER; } public EnumReservedRange getDefaultInstanceForType() { return DEFAULT_INSTANCE; } } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public List<DescriptorProtos.EnumValueDescriptorProto> getValueList() { return this.value_; } public List<? extends DescriptorProtos.EnumValueDescriptorProtoOrBuilder> getValueOrBuilderList() { return (List)this.value_; } public int getValueCount() { return this.value_.size(); } public DescriptorProtos.EnumValueDescriptorProto getValue(int index) { return this.value_.get(index); } public DescriptorProtos.EnumValueDescriptorProtoOrBuilder getValueOrBuilder(int index) { return this.value_.get(index); } public boolean hasOptions() { return ((this.bitField0_ & 0x2) != 0); } public DescriptorProtos.EnumOptions getOptions() { return (this.options_ == null) ? DescriptorProtos.EnumOptions.getDefaultInstance() : this.options_; } public DescriptorProtos.EnumOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? DescriptorProtos.EnumOptions.getDefaultInstance() : this.options_; } public List<EnumReservedRange> getReservedRangeList() { return this.reservedRange_; } public List<? extends EnumReservedRangeOrBuilder> getReservedRangeOrBuilderList() { return (List)this.reservedRange_; } public int getReservedRangeCount() { return this.reservedRange_.size(); } public EnumReservedRange getReservedRange(int index) { return this.reservedRange_.get(index); } public EnumReservedRangeOrBuilder getReservedRangeOrBuilder(int index) { return this.reservedRange_.get(index); } public ProtocolStringList getReservedNameList() { return this.reservedName_; } public int getReservedNameCount() { return this.reservedName_.size(); } public String getReservedName(int index) { return this.reservedName_.get(index); } public ByteString getReservedNameBytes(int index) { return this.reservedName_.getByteString(index); } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 16015 */       if (isInitialized == 1) return true; 
/* 16016 */       if (isInitialized == 0) return false;
/*       */       
/* 16018 */       for (int i = 0; i < getValueCount(); i++) {
/* 16019 */         if (!getValue(i).isInitialized()) {
/* 16020 */           this.memoizedIsInitialized = 0;
/* 16021 */           return false;
/*       */         } 
/*       */       } 
/* 16024 */       if (hasOptions() && 
/* 16025 */         !getOptions().isInitialized()) {
/* 16026 */         this.memoizedIsInitialized = 0;
/* 16027 */         return false;
/*       */       } 
/*       */       
/* 16030 */       this.memoizedIsInitialized = 1;
/* 16031 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 16037 */       if ((this.bitField0_ & 0x1) != 0)
/* 16038 */         GeneratedMessageV3.writeString(output, 1, this.name_); 
/*       */       int i;
/* 16040 */       for (i = 0; i < this.value_.size(); i++) {
/* 16041 */         output.writeMessage(2, this.value_.get(i));
/*       */       }
/* 16043 */       if ((this.bitField0_ & 0x2) != 0) {
/* 16044 */         output.writeMessage(3, getOptions());
/*       */       }
/* 16046 */       for (i = 0; i < this.reservedRange_.size(); i++) {
/* 16047 */         output.writeMessage(4, this.reservedRange_.get(i));
/*       */       }
/* 16049 */       for (i = 0; i < this.reservedName_.size(); i++) {
/* 16050 */         GeneratedMessageV3.writeString(output, 5, this.reservedName_.getRaw(i));
/*       */       }
/* 16052 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 16057 */       int size = this.memoizedSize;
/* 16058 */       if (size != -1) return size;
/*       */       
/* 16060 */       size = 0;
/* 16061 */       if ((this.bitField0_ & 0x1) != 0)
/* 16062 */         size += GeneratedMessageV3.computeStringSize(1, this.name_); 
/*       */       int i;
/* 16064 */       for (i = 0; i < this.value_.size(); i++) {
/* 16065 */         size += 
/* 16066 */           CodedOutputStream.computeMessageSize(2, this.value_.get(i));
/*       */       }
/* 16068 */       if ((this.bitField0_ & 0x2) != 0) {
/* 16069 */         size += 
/* 16070 */           CodedOutputStream.computeMessageSize(3, getOptions());
/*       */       }
/* 16072 */       for (i = 0; i < this.reservedRange_.size(); i++) {
/* 16073 */         size += 
/* 16074 */           CodedOutputStream.computeMessageSize(4, this.reservedRange_.get(i));
/*       */       }
/*       */       
/* 16077 */       int dataSize = 0;
/* 16078 */       for (int j = 0; j < this.reservedName_.size(); j++) {
/* 16079 */         dataSize += computeStringSizeNoTag(this.reservedName_.getRaw(j));
/*       */       }
/* 16081 */       size += dataSize;
/* 16082 */       size += 1 * getReservedNameList().size();
/*       */       
/* 16084 */       size += this.unknownFields.getSerializedSize();
/* 16085 */       this.memoizedSize = size;
/* 16086 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 16091 */       if (obj == this) {
/* 16092 */         return true;
/*       */       }
/* 16094 */       if (!(obj instanceof EnumDescriptorProto)) {
/* 16095 */         return super.equals(obj);
/*       */       }
/* 16097 */       EnumDescriptorProto other = (EnumDescriptorProto)obj;
/*       */       
/* 16099 */       if (hasName() != other.hasName()) return false; 
/* 16100 */       if (hasName() && 
/*       */         
/* 16102 */         !getName().equals(other.getName())) return false;
/*       */ 
/*       */       
/* 16105 */       if (!getValueList().equals(other.getValueList())) return false; 
/* 16106 */       if (hasOptions() != other.hasOptions()) return false; 
/* 16107 */       if (hasOptions() && 
/*       */         
/* 16109 */         !getOptions().equals(other.getOptions())) return false;
/*       */ 
/*       */       
/* 16112 */       if (!getReservedRangeList().equals(other.getReservedRangeList())) return false;
/*       */       
/* 16114 */       if (!getReservedNameList().equals(other.getReservedNameList())) return false; 
/* 16115 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 16116 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 16121 */       if (this.memoizedHashCode != 0) {
/* 16122 */         return this.memoizedHashCode;
/*       */       }
/* 16124 */       int hash = 41;
/* 16125 */       hash = 19 * hash + getDescriptor().hashCode();
/* 16126 */       if (hasName()) {
/* 16127 */         hash = 37 * hash + 1;
/* 16128 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/* 16130 */       if (getValueCount() > 0) {
/* 16131 */         hash = 37 * hash + 2;
/* 16132 */         hash = 53 * hash + getValueList().hashCode();
/*       */       } 
/* 16134 */       if (hasOptions()) {
/* 16135 */         hash = 37 * hash + 3;
/* 16136 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/* 16138 */       if (getReservedRangeCount() > 0) {
/* 16139 */         hash = 37 * hash + 4;
/* 16140 */         hash = 53 * hash + getReservedRangeList().hashCode();
/*       */       } 
/* 16142 */       if (getReservedNameCount() > 0) {
/* 16143 */         hash = 37 * hash + 5;
/* 16144 */         hash = 53 * hash + getReservedNameList().hashCode();
/*       */       } 
/* 16146 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 16147 */       this.memoizedHashCode = hash;
/* 16148 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 16154 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 16160 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 16165 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 16171 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 16175 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 16181 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(InputStream input) throws IOException {
/* 16185 */       return 
/* 16186 */         GeneratedMessageV3.<EnumDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 16192 */       return 
/* 16193 */         GeneratedMessageV3.<EnumDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/* 16197 */       return 
/* 16198 */         GeneratedMessageV3.<EnumDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 16204 */       return 
/* 16205 */         GeneratedMessageV3.<EnumDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/* 16210 */       return 
/* 16211 */         GeneratedMessageV3.<EnumDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 16217 */       return 
/* 16218 */         GeneratedMessageV3.<EnumDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 16222 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 16224 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(EnumDescriptorProto prototype) {
/* 16227 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 16231 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 16232 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 16238 */       Builder builder = new Builder(parent);
/* 16239 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DescriptorProtos.EnumDescriptorProtoOrBuilder {
/*       */       private int bitField0_;
/*       */       private Object name_;
/*       */       private List<DescriptorProtos.EnumValueDescriptorProto> value_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.EnumValueDescriptorProto, DescriptorProtos.EnumValueDescriptorProto.Builder, DescriptorProtos.EnumValueDescriptorProtoOrBuilder> valueBuilder_;
/*       */       private DescriptorProtos.EnumOptions options_;
/*       */       private SingleFieldBuilderV3<DescriptorProtos.EnumOptions, DescriptorProtos.EnumOptions.Builder, DescriptorProtos.EnumOptionsOrBuilder> optionsBuilder_;
/*       */       private List<DescriptorProtos.EnumDescriptorProto.EnumReservedRange> reservedRange_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.EnumDescriptorProto.EnumReservedRange, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder, DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder> reservedRangeBuilder_;
/*       */       private LazyStringList reservedName_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 16254 */         return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 16260 */         return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable
/* 16261 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.EnumDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 16530 */         this.name_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 16614 */         this
/* 16615 */           .value_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 16974 */         this
/* 16975 */           .reservedRange_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 17322 */         this.reservedName_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.name_ = ""; this.value_ = Collections.emptyList(); this.reservedRange_ = Collections.emptyList(); this.reservedName_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) { getValueFieldBuilder(); getOptionsFieldBuilder(); getReservedRangeFieldBuilder(); }  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; if (this.valueBuilder_ == null) { this.value_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; } else { this.valueBuilder_.clear(); }  if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; if (this.reservedRangeBuilder_ == null) { this.reservedRange_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFF7; } else { this.reservedRangeBuilder_.clear(); }  this.reservedName_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFFEF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_descriptor; } public DescriptorProtos.EnumDescriptorProto getDefaultInstanceForType() { return DescriptorProtos.EnumDescriptorProto.getDefaultInstance(); } public DescriptorProtos.EnumDescriptorProto build() { DescriptorProtos.EnumDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.EnumDescriptorProto buildPartial() { DescriptorProtos.EnumDescriptorProto result = new DescriptorProtos.EnumDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if (this.valueBuilder_ == null) { if ((this.bitField0_ & 0x2) != 0) { this.value_ = Collections.unmodifiableList(this.value_); this.bitField0_ &= 0xFFFFFFFD; }  result.value_ = this.value_; } else { result.value_ = this.valueBuilder_.build(); }  if ((from_bitField0_ & 0x4) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x2; }  if (this.reservedRangeBuilder_ == null) { if ((this.bitField0_ & 0x8) != 0) { this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_); this.bitField0_ &= 0xFFFFFFF7; }  result.reservedRange_ = this.reservedRange_; } else { result.reservedRange_ = this.reservedRangeBuilder_.build(); }  if ((this.bitField0_ & 0x10) != 0) { this.reservedName_ = this.reservedName_.getUnmodifiableView(); this.bitField0_ &= 0xFFFFFFEF; }  result.reservedName_ = this.reservedName_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.EnumDescriptorProto) return mergeFrom((DescriptorProtos.EnumDescriptorProto)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.EnumDescriptorProto other) { if (other == DescriptorProtos.EnumDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (this.valueBuilder_ == null) { if (!other.value_.isEmpty()) { if (this.value_.isEmpty()) { this.value_ = other.value_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureValueIsMutable(); this.value_.addAll(other.value_); }  onChanged(); }  } else if (!other.value_.isEmpty()) { if (this.valueBuilder_.isEmpty()) { this.valueBuilder_.dispose(); this.valueBuilder_ = null; this.value_ = other.value_; this.bitField0_ &= 0xFFFFFFFD; this.valueBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getValueFieldBuilder() : null; } else { this.valueBuilder_.addAllMessages(other.value_); }  }  if (other.hasOptions()) mergeOptions(other.getOptions());  if (this.reservedRangeBuilder_ == null) { if (!other.reservedRange_.isEmpty()) { if (this.reservedRange_.isEmpty()) { this.reservedRange_ = other.reservedRange_; this.bitField0_ &= 0xFFFFFFF7; } else { ensureReservedRangeIsMutable(); this.reservedRange_.addAll(other.reservedRange_); }  onChanged(); }  } else if (!other.reservedRange_.isEmpty()) { if (this.reservedRangeBuilder_.isEmpty()) { this.reservedRangeBuilder_.dispose(); this.reservedRangeBuilder_ = null; this.reservedRange_ = other.reservedRange_; this.bitField0_ &= 0xFFFFFFF7; this.reservedRangeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getReservedRangeFieldBuilder() : null; } else { this.reservedRangeBuilder_.addAllMessages(other.reservedRange_); }  }  if (!other.reservedName_.isEmpty()) { if (this.reservedName_.isEmpty()) { this.reservedName_ = other.reservedName_; this.bitField0_ &= 0xFFFFFFEF; } else { ensureReservedNameIsMutable(); this.reservedName_.addAll(other.reservedName_); }  onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getValueCount(); i++) { if (!getValue(i).isInitialized()) return false;  }  if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.EnumDescriptorProto parsedMessage = null; try { parsedMessage = DescriptorProtos.EnumDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.EnumDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFE; this.name_ = DescriptorProtos.EnumDescriptorProto.getDefaultInstance().getName(); onChanged(); return this; } public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } private void ensureValueIsMutable() { if ((this.bitField0_ & 0x2) == 0) { this.value_ = new ArrayList<>(this.value_); this.bitField0_ |= 0x2; }  } public List<DescriptorProtos.EnumValueDescriptorProto> getValueList() { if (this.valueBuilder_ == null) return Collections.unmodifiableList(this.value_);  return this.valueBuilder_.getMessageList(); } public int getValueCount() { if (this.valueBuilder_ == null) return this.value_.size();  return this.valueBuilder_.getCount(); } public DescriptorProtos.EnumValueDescriptorProto getValue(int index) { if (this.valueBuilder_ == null) return this.value_.get(index);  return this.valueBuilder_.getMessage(index); } public Builder setValue(int index, DescriptorProtos.EnumValueDescriptorProto value) { if (this.valueBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureValueIsMutable(); this.value_.set(index, value); onChanged(); } else { this.valueBuilder_.setMessage(index, value); }  return this; } public Builder setValue(int index, DescriptorProtos.EnumValueDescriptorProto.Builder builderForValue) { if (this.valueBuilder_ == null) { ensureValueIsMutable(); this.value_.set(index, builderForValue.build()); onChanged(); } else { this.valueBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addValue(DescriptorProtos.EnumValueDescriptorProto value) { if (this.valueBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureValueIsMutable(); this.value_.add(value); onChanged(); } else { this.valueBuilder_.addMessage(value); }  return this; } public Builder addValue(int index, DescriptorProtos.EnumValueDescriptorProto value) { if (this.valueBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureValueIsMutable(); this.value_.add(index, value); onChanged(); } else { this.valueBuilder_.addMessage(index, value); }  return this; } public Builder addValue(DescriptorProtos.EnumValueDescriptorProto.Builder builderForValue) { if (this.valueBuilder_ == null) { ensureValueIsMutable(); this.value_.add(builderForValue.build()); onChanged(); } else { this.valueBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addValue(int index, DescriptorProtos.EnumValueDescriptorProto.Builder builderForValue) { if (this.valueBuilder_ == null) { ensureValueIsMutable(); this.value_.add(index, builderForValue.build()); onChanged(); } else { this.valueBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllValue(Iterable<? extends DescriptorProtos.EnumValueDescriptorProto> values) { if (this.valueBuilder_ == null) { ensureValueIsMutable(); AbstractMessageLite.Builder.addAll(values, this.value_); onChanged(); } else { this.valueBuilder_.addAllMessages(values); }  return this; } public Builder clearValue() { if (this.valueBuilder_ == null) { this.value_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; onChanged(); } else { this.valueBuilder_.clear(); }  return this; } public Builder removeValue(int index) { if (this.valueBuilder_ == null) { ensureValueIsMutable(); this.value_.remove(index); onChanged(); } else { this.valueBuilder_.remove(index); }  return this; } public DescriptorProtos.EnumValueDescriptorProto.Builder getValueBuilder(int index) { return getValueFieldBuilder().getBuilder(index); } public DescriptorProtos.EnumValueDescriptorProtoOrBuilder getValueOrBuilder(int index) { if (this.valueBuilder_ == null) return this.value_.get(index);  return this.valueBuilder_.getMessageOrBuilder(index); } public List<? extends DescriptorProtos.EnumValueDescriptorProtoOrBuilder> getValueOrBuilderList() { if (this.valueBuilder_ != null) return this.valueBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.value_); } public DescriptorProtos.EnumValueDescriptorProto.Builder addValueBuilder() { return getValueFieldBuilder().addBuilder(DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance()); } public DescriptorProtos.EnumValueDescriptorProto.Builder addValueBuilder(int index) { return getValueFieldBuilder().addBuilder(index, DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance()); } public List<DescriptorProtos.EnumValueDescriptorProto.Builder> getValueBuilderList() { return getValueFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<DescriptorProtos.EnumValueDescriptorProto, DescriptorProtos.EnumValueDescriptorProto.Builder, DescriptorProtos.EnumValueDescriptorProtoOrBuilder> getValueFieldBuilder() { if (this.valueBuilder_ == null) { this.valueBuilder_ = new RepeatedFieldBuilderV3<>(this.value_, ((this.bitField0_ & 0x2) != 0), getParentForChildren(), isClean()); this.value_ = null; }  return this.valueBuilder_; } public boolean hasOptions() { return ((this.bitField0_ & 0x4) != 0); } public DescriptorProtos.EnumOptions getOptions() { if (this.optionsBuilder_ == null) return (this.options_ == null) ? DescriptorProtos.EnumOptions.getDefaultInstance() : this.options_;  return this.optionsBuilder_.getMessage(); } public Builder setOptions(DescriptorProtos.EnumOptions value) { if (this.optionsBuilder_ == null) { if (value == null) throw new NullPointerException();  this.options_ = value; onChanged(); } else { this.optionsBuilder_.setMessage(value); }  this.bitField0_ |= 0x4; return this; } public Builder setOptions(DescriptorProtos.EnumOptions.Builder builderForValue) { if (this.optionsBuilder_ == null) { this.options_ = builderForValue.build(); onChanged(); } else { this.optionsBuilder_.setMessage(builderForValue.build()); }  this.bitField0_ |= 0x4; return this; } public Builder mergeOptions(DescriptorProtos.EnumOptions value) { if (this.optionsBuilder_ == null) { if ((this.bitField0_ & 0x4) != 0 && this.options_ != null && this.options_ != DescriptorProtos.EnumOptions.getDefaultInstance()) { this.options_ = DescriptorProtos.EnumOptions.newBuilder(this.options_).mergeFrom(value).buildPartial(); } else { this.options_ = value; }  onChanged(); } else { this.optionsBuilder_.mergeFrom(value); }  this.bitField0_ |= 0x4; return this; } public Builder clearOptions() { if (this.optionsBuilder_ == null) { this.options_ = null; onChanged(); } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; return this; } public DescriptorProtos.EnumOptions.Builder getOptionsBuilder() { this.bitField0_ |= 0x4; onChanged(); return getOptionsFieldBuilder().getBuilder(); } public DescriptorProtos.EnumOptionsOrBuilder getOptionsOrBuilder() { if (this.optionsBuilder_ != null) return this.optionsBuilder_.getMessageOrBuilder();  return (this.options_ == null) ? DescriptorProtos.EnumOptions.getDefaultInstance() : this.options_; } private SingleFieldBuilderV3<DescriptorProtos.EnumOptions, DescriptorProtos.EnumOptions.Builder, DescriptorProtos.EnumOptionsOrBuilder> getOptionsFieldBuilder() { if (this.optionsBuilder_ == null) { this.optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean()); this.options_ = null; }  return this.optionsBuilder_; } private void ensureReservedRangeIsMutable() { if ((this.bitField0_ & 0x8) == 0) { this.reservedRange_ = new ArrayList<>(this.reservedRange_); this.bitField0_ |= 0x8; }  } public List<DescriptorProtos.EnumDescriptorProto.EnumReservedRange> getReservedRangeList() { if (this.reservedRangeBuilder_ == null) return Collections.unmodifiableList(this.reservedRange_);  return this.reservedRangeBuilder_.getMessageList(); } public int getReservedRangeCount() { if (this.reservedRangeBuilder_ == null) return this.reservedRange_.size();  return this.reservedRangeBuilder_.getCount(); } public DescriptorProtos.EnumDescriptorProto.EnumReservedRange getReservedRange(int index) { if (this.reservedRangeBuilder_ == null) return this.reservedRange_.get(index);  return this.reservedRangeBuilder_.getMessage(index); } public Builder setReservedRange(int index, DescriptorProtos.EnumDescriptorProto.EnumReservedRange value) { if (this.reservedRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureReservedRangeIsMutable(); this.reservedRange_.set(index, value); onChanged(); } else { this.reservedRangeBuilder_.setMessage(index, value); }  return this; } public Builder setReservedRange(int index, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder builderForValue) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.set(index, builderForValue.build()); onChanged(); } else { this.reservedRangeBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addReservedRange(DescriptorProtos.EnumDescriptorProto.EnumReservedRange value) { if (this.reservedRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureReservedRangeIsMutable(); this.reservedRange_.add(value); onChanged(); } else { this.reservedRangeBuilder_.addMessage(value); }  return this; } public Builder addReservedRange(int index, DescriptorProtos.EnumDescriptorProto.EnumReservedRange value) { if (this.reservedRangeBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureReservedRangeIsMutable(); this.reservedRange_.add(index, value); onChanged(); } else { this.reservedRangeBuilder_.addMessage(index, value); }  return this; } public Builder addReservedRange(DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder builderForValue) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.add(builderForValue.build()); onChanged(); } else { this.reservedRangeBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addReservedRange(int index, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder builderForValue) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.add(index, builderForValue.build()); onChanged(); } else { this.reservedRangeBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllReservedRange(Iterable<? extends DescriptorProtos.EnumDescriptorProto.EnumReservedRange> values) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); AbstractMessageLite.Builder.addAll(values, this.reservedRange_); onChanged(); } else { this.reservedRangeBuilder_.addAllMessages(values); }  return this; } public Builder clearReservedRange() { if (this.reservedRangeBuilder_ == null) { this.reservedRange_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFF7; onChanged(); } else { this.reservedRangeBuilder_.clear(); }  return this; } public Builder removeReservedRange(int index) { if (this.reservedRangeBuilder_ == null) { ensureReservedRangeIsMutable(); this.reservedRange_.remove(index); onChanged(); } else { this.reservedRangeBuilder_.remove(index); }  return this; } public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder getReservedRangeBuilder(int index) { return getReservedRangeFieldBuilder().getBuilder(index); } public DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder getReservedRangeOrBuilder(int index) { if (this.reservedRangeBuilder_ == null) return this.reservedRange_.get(index);  return this.reservedRangeBuilder_.getMessageOrBuilder(index); } public List<? extends DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder> getReservedRangeOrBuilderList() { if (this.reservedRangeBuilder_ != null) return this.reservedRangeBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.reservedRange_); } public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder addReservedRangeBuilder() { return getReservedRangeFieldBuilder().addBuilder(DescriptorProtos.EnumDescriptorProto.EnumReservedRange.getDefaultInstance()); } public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder addReservedRangeBuilder(int index) { return getReservedRangeFieldBuilder().addBuilder(index, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.getDefaultInstance()); } public List<DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder> getReservedRangeBuilderList() { return getReservedRangeFieldBuilder().getBuilderList(); }
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.EnumDescriptorProto.EnumReservedRange, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder, DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder> getReservedRangeFieldBuilder() { if (this.reservedRangeBuilder_ == null) { this.reservedRangeBuilder_ = new RepeatedFieldBuilderV3<>(this.reservedRange_, ((this.bitField0_ & 0x8) != 0), getParentForChildren(), isClean()); this.reservedRange_ = null; }  return this.reservedRangeBuilder_; }
/* 17324 */       private void ensureReservedNameIsMutable() { if ((this.bitField0_ & 0x10) == 0) {
/* 17325 */           this.reservedName_ = new LazyStringArrayList(this.reservedName_);
/* 17326 */           this.bitField0_ |= 0x10;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ProtocolStringList getReservedNameList() {
/* 17340 */         return this.reservedName_.getUnmodifiableView();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getReservedNameCount() {
/* 17352 */         return this.reservedName_.size();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getReservedName(int index) {
/* 17365 */         return this.reservedName_.get(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getReservedNameBytes(int index) {
/* 17379 */         return this.reservedName_.getByteString(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setReservedName(int index, String value) {
/* 17394 */         if (value == null) {
/* 17395 */           throw new NullPointerException();
/*       */         }
/* 17397 */         ensureReservedNameIsMutable();
/* 17398 */         this.reservedName_.set(index, value);
/* 17399 */         onChanged();
/* 17400 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addReservedName(String value) {
/* 17414 */         if (value == null) {
/* 17415 */           throw new NullPointerException();
/*       */         }
/* 17417 */         ensureReservedNameIsMutable();
/* 17418 */         this.reservedName_.add(value);
/* 17419 */         onChanged();
/* 17420 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllReservedName(Iterable<String> values) {
/* 17434 */         ensureReservedNameIsMutable();
/* 17435 */         AbstractMessageLite.Builder.addAll(values, this.reservedName_);
/*       */         
/* 17437 */         onChanged();
/* 17438 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearReservedName() {
/* 17450 */         this.reservedName_ = LazyStringArrayList.EMPTY;
/* 17451 */         this.bitField0_ &= 0xFFFFFFEF;
/* 17452 */         onChanged();
/* 17453 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addReservedNameBytes(ByteString value) {
/* 17467 */         if (value == null) {
/* 17468 */           throw new NullPointerException();
/*       */         }
/* 17470 */         ensureReservedNameIsMutable();
/* 17471 */         this.reservedName_.add(value);
/* 17472 */         onChanged();
/* 17473 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 17478 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 17484 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 17494 */     private static final EnumDescriptorProto DEFAULT_INSTANCE = new EnumDescriptorProto();
/*       */ 
/*       */     
/*       */     public static EnumDescriptorProto getDefaultInstance() {
/* 17498 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 17502 */     public static final Parser<EnumDescriptorProto> PARSER = new AbstractParser<EnumDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.EnumDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 17508 */           return new DescriptorProtos.EnumDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<EnumDescriptorProto> parser() {
/* 17513 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<EnumDescriptorProto> getParserForType() {
/* 17518 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public EnumDescriptorProto getDefaultInstanceForType() {
/* 17523 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/*       */     public static interface EnumReservedRangeOrBuilder
/*       */       extends MessageOrBuilder
/*       */     {
/*       */       boolean hasStart();
/*       */ 
/*       */       
/*       */       int getStart();
/*       */ 
/*       */       
/*       */       boolean hasEnd();
/*       */ 
/*       */       
/*       */       int getEnd();
/*       */     }
/*       */   }
/*       */ 
/*       */   
/*       */   public static interface EnumValueDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */     
/*       */     boolean hasNumber();
/*       */ 
/*       */     
/*       */     int getNumber();
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */     
/*       */     DescriptorProtos.EnumValueOptions getOptions();
/*       */ 
/*       */     
/*       */     DescriptorProtos.EnumValueOptionsOrBuilder getOptionsOrBuilder();
/*       */   }
/*       */ 
/*       */   
/*       */   public static final class EnumValueDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements EnumValueDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */     private volatile Object name_;
/*       */     public static final int NUMBER_FIELD_NUMBER = 2;
/*       */     private int number_;
/*       */     public static final int OPTIONS_FIELD_NUMBER = 3;
/*       */     private DescriptorProtos.EnumValueOptions options_;
/*       */     private byte memoizedIsInitialized;
/*       */     
/*       */     private EnumValueDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 17589 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 17768 */       this.memoizedIsInitialized = -1; } private EnumValueDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new EnumValueDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private EnumValueDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; DescriptorProtos.EnumValueOptions.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = bs; continue;case 16: this.bitField0_ |= 0x2; this.number_ = input.readInt32(); continue;case 26: subBuilder = null; if ((this.bitField0_ & 0x4) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<DescriptorProtos.EnumValueOptions>readMessage(DescriptorProtos.EnumValueOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x4; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EnumValueDescriptorProto.class, (Class)Builder.class); } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public boolean hasNumber() { return ((this.bitField0_ & 0x2) != 0); } public int getNumber() { return this.number_; } public boolean hasOptions() { return ((this.bitField0_ & 0x4) != 0); }
/*       */     public DescriptorProtos.EnumValueOptions getOptions() { return (this.options_ == null) ? DescriptorProtos.EnumValueOptions.getDefaultInstance() : this.options_; }
/*       */     public DescriptorProtos.EnumValueOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? DescriptorProtos.EnumValueOptions.getDefaultInstance() : this.options_; }
/* 17771 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 17772 */       if (isInitialized == 1) return true; 
/* 17773 */       if (isInitialized == 0) return false;
/*       */       
/* 17775 */       if (hasOptions() && 
/* 17776 */         !getOptions().isInitialized()) {
/* 17777 */         this.memoizedIsInitialized = 0;
/* 17778 */         return false;
/*       */       } 
/*       */       
/* 17781 */       this.memoizedIsInitialized = 1;
/* 17782 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 17788 */       if ((this.bitField0_ & 0x1) != 0) {
/* 17789 */         GeneratedMessageV3.writeString(output, 1, this.name_);
/*       */       }
/* 17791 */       if ((this.bitField0_ & 0x2) != 0) {
/* 17792 */         output.writeInt32(2, this.number_);
/*       */       }
/* 17794 */       if ((this.bitField0_ & 0x4) != 0) {
/* 17795 */         output.writeMessage(3, getOptions());
/*       */       }
/* 17797 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 17802 */       int size = this.memoizedSize;
/* 17803 */       if (size != -1) return size;
/*       */       
/* 17805 */       size = 0;
/* 17806 */       if ((this.bitField0_ & 0x1) != 0) {
/* 17807 */         size += GeneratedMessageV3.computeStringSize(1, this.name_);
/*       */       }
/* 17809 */       if ((this.bitField0_ & 0x2) != 0) {
/* 17810 */         size += 
/* 17811 */           CodedOutputStream.computeInt32Size(2, this.number_);
/*       */       }
/* 17813 */       if ((this.bitField0_ & 0x4) != 0) {
/* 17814 */         size += 
/* 17815 */           CodedOutputStream.computeMessageSize(3, getOptions());
/*       */       }
/* 17817 */       size += this.unknownFields.getSerializedSize();
/* 17818 */       this.memoizedSize = size;
/* 17819 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 17824 */       if (obj == this) {
/* 17825 */         return true;
/*       */       }
/* 17827 */       if (!(obj instanceof EnumValueDescriptorProto)) {
/* 17828 */         return super.equals(obj);
/*       */       }
/* 17830 */       EnumValueDescriptorProto other = (EnumValueDescriptorProto)obj;
/*       */       
/* 17832 */       if (hasName() != other.hasName()) return false; 
/* 17833 */       if (hasName() && 
/*       */         
/* 17835 */         !getName().equals(other.getName())) return false;
/*       */       
/* 17837 */       if (hasNumber() != other.hasNumber()) return false; 
/* 17838 */       if (hasNumber() && 
/* 17839 */         getNumber() != other
/* 17840 */         .getNumber()) return false;
/*       */       
/* 17842 */       if (hasOptions() != other.hasOptions()) return false; 
/* 17843 */       if (hasOptions() && 
/*       */         
/* 17845 */         !getOptions().equals(other.getOptions())) return false;
/*       */       
/* 17847 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 17848 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 17853 */       if (this.memoizedHashCode != 0) {
/* 17854 */         return this.memoizedHashCode;
/*       */       }
/* 17856 */       int hash = 41;
/* 17857 */       hash = 19 * hash + getDescriptor().hashCode();
/* 17858 */       if (hasName()) {
/* 17859 */         hash = 37 * hash + 1;
/* 17860 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/* 17862 */       if (hasNumber()) {
/* 17863 */         hash = 37 * hash + 2;
/* 17864 */         hash = 53 * hash + getNumber();
/*       */       } 
/* 17866 */       if (hasOptions()) {
/* 17867 */         hash = 37 * hash + 3;
/* 17868 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/* 17870 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 17871 */       this.memoizedHashCode = hash;
/* 17872 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 17878 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 17884 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 17889 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 17895 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 17899 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 17905 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(InputStream input) throws IOException {
/* 17909 */       return 
/* 17910 */         GeneratedMessageV3.<EnumValueDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 17916 */       return 
/* 17917 */         GeneratedMessageV3.<EnumValueDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumValueDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/* 17921 */       return 
/* 17922 */         GeneratedMessageV3.<EnumValueDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 17928 */       return 
/* 17929 */         GeneratedMessageV3.<EnumValueDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/* 17934 */       return 
/* 17935 */         GeneratedMessageV3.<EnumValueDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 17941 */       return 
/* 17942 */         GeneratedMessageV3.<EnumValueDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 17946 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 17948 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(EnumValueDescriptorProto prototype) {
/* 17951 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 17955 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 17956 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 17962 */       Builder builder = new Builder(parent);
/* 17963 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DescriptorProtos.EnumValueDescriptorProtoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       private Object name_;
/*       */       private int number_;
/*       */       private DescriptorProtos.EnumValueOptions options_;
/*       */       private SingleFieldBuilderV3<DescriptorProtos.EnumValueOptions, DescriptorProtos.EnumValueOptions.Builder, DescriptorProtos.EnumValueOptionsOrBuilder> optionsBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 17978 */         return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 17984 */         return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable
/* 17985 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.EnumValueDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 18157 */         this.name_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.name_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getOptionsFieldBuilder();  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.number_ = 0; this.bitField0_ &= 0xFFFFFFFD; if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_descriptor; } public DescriptorProtos.EnumValueDescriptorProto getDefaultInstanceForType() { return DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance(); } public DescriptorProtos.EnumValueDescriptorProto build() { DescriptorProtos.EnumValueDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.EnumValueDescriptorProto buildPartial() { DescriptorProtos.EnumValueDescriptorProto result = new DescriptorProtos.EnumValueDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if ((from_bitField0_ & 0x2) != 0) { result.number_ = this.number_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x4) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x4; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); }
/*       */       public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); }
/*       */       public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.EnumValueDescriptorProto) return mergeFrom((DescriptorProtos.EnumValueDescriptorProto)other);  super.mergeFrom(other); return this; }
/*       */       public Builder mergeFrom(DescriptorProtos.EnumValueDescriptorProto other) { if (other == DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (other.hasNumber()) setNumber(other.getNumber());  if (other.hasOptions()) mergeOptions(other.getOptions());  mergeUnknownFields(other.unknownFields); onChanged(); return this; }
/*       */       public final boolean isInitialized() { if (hasOptions() && !getOptions().isInitialized()) return false;  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.EnumValueDescriptorProto parsedMessage = null; try { parsedMessage = DescriptorProtos.EnumValueDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.EnumValueDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 18163 */       public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getName() {
/* 18170 */         Object ref = this.name_;
/* 18171 */         if (!(ref instanceof String)) {
/* 18172 */           ByteString bs = (ByteString)ref;
/*       */           
/* 18174 */           String s = bs.toStringUtf8();
/* 18175 */           if (bs.isValidUtf8()) {
/* 18176 */             this.name_ = s;
/*       */           }
/* 18178 */           return s;
/*       */         } 
/* 18180 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getNameBytes() {
/* 18189 */         Object ref = this.name_;
/* 18190 */         if (ref instanceof String) {
/*       */           
/* 18192 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 18194 */           this.name_ = b;
/* 18195 */           return b;
/*       */         } 
/* 18197 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setName(String value) {
/* 18207 */         if (value == null) {
/* 18208 */           throw new NullPointerException();
/*       */         }
/* 18210 */         this.bitField0_ |= 0x1;
/* 18211 */         this.name_ = value;
/* 18212 */         onChanged();
/* 18213 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearName() {
/* 18220 */         this.bitField0_ &= 0xFFFFFFFE;
/* 18221 */         this.name_ = DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance().getName();
/* 18222 */         onChanged();
/* 18223 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setNameBytes(ByteString value) {
/* 18232 */         if (value == null) {
/* 18233 */           throw new NullPointerException();
/*       */         }
/* 18235 */         this.bitField0_ |= 0x1;
/* 18236 */         this.name_ = value;
/* 18237 */         onChanged();
/* 18238 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasNumber() {
/* 18247 */         return ((this.bitField0_ & 0x2) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getNumber() {
/* 18254 */         return this.number_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setNumber(int value) {
/* 18262 */         this.bitField0_ |= 0x2;
/* 18263 */         this.number_ = value;
/* 18264 */         onChanged();
/* 18265 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearNumber() {
/* 18272 */         this.bitField0_ &= 0xFFFFFFFD;
/* 18273 */         this.number_ = 0;
/* 18274 */         onChanged();
/* 18275 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasOptions() {
/* 18286 */         return ((this.bitField0_ & 0x4) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.EnumValueOptions getOptions() {
/* 18293 */         if (this.optionsBuilder_ == null) {
/* 18294 */           return (this.options_ == null) ? DescriptorProtos.EnumValueOptions.getDefaultInstance() : this.options_;
/*       */         }
/* 18296 */         return this.optionsBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(DescriptorProtos.EnumValueOptions value) {
/* 18303 */         if (this.optionsBuilder_ == null) {
/* 18304 */           if (value == null) {
/* 18305 */             throw new NullPointerException();
/*       */           }
/* 18307 */           this.options_ = value;
/* 18308 */           onChanged();
/*       */         } else {
/* 18310 */           this.optionsBuilder_.setMessage(value);
/*       */         } 
/* 18312 */         this.bitField0_ |= 0x4;
/* 18313 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(DescriptorProtos.EnumValueOptions.Builder builderForValue) {
/* 18320 */         if (this.optionsBuilder_ == null) {
/* 18321 */           this.options_ = builderForValue.build();
/* 18322 */           onChanged();
/*       */         } else {
/* 18324 */           this.optionsBuilder_.setMessage(builderForValue.build());
/*       */         } 
/* 18326 */         this.bitField0_ |= 0x4;
/* 18327 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeOptions(DescriptorProtos.EnumValueOptions value) {
/* 18333 */         if (this.optionsBuilder_ == null) {
/* 18334 */           if ((this.bitField0_ & 0x4) != 0 && this.options_ != null && this.options_ != 
/*       */             
/* 18336 */             DescriptorProtos.EnumValueOptions.getDefaultInstance()) {
/* 18337 */             this
/* 18338 */               .options_ = DescriptorProtos.EnumValueOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 18340 */             this.options_ = value;
/*       */           } 
/* 18342 */           onChanged();
/*       */         } else {
/* 18344 */           this.optionsBuilder_.mergeFrom(value);
/*       */         } 
/* 18346 */         this.bitField0_ |= 0x4;
/* 18347 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOptions() {
/* 18353 */         if (this.optionsBuilder_ == null) {
/* 18354 */           this.options_ = null;
/* 18355 */           onChanged();
/*       */         } else {
/* 18357 */           this.optionsBuilder_.clear();
/*       */         } 
/* 18359 */         this.bitField0_ &= 0xFFFFFFFB;
/* 18360 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.EnumValueOptions.Builder getOptionsBuilder() {
/* 18366 */         this.bitField0_ |= 0x4;
/* 18367 */         onChanged();
/* 18368 */         return getOptionsFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.EnumValueOptionsOrBuilder getOptionsOrBuilder() {
/* 18374 */         if (this.optionsBuilder_ != null) {
/* 18375 */           return this.optionsBuilder_.getMessageOrBuilder();
/*       */         }
/* 18377 */         return (this.options_ == null) ? 
/* 18378 */           DescriptorProtos.EnumValueOptions.getDefaultInstance() : this.options_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DescriptorProtos.EnumValueOptions, DescriptorProtos.EnumValueOptions.Builder, DescriptorProtos.EnumValueOptionsOrBuilder> getOptionsFieldBuilder() {
/* 18387 */         if (this.optionsBuilder_ == null) {
/* 18388 */           this
/*       */ 
/*       */ 
/*       */             
/* 18392 */             .optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean());
/* 18393 */           this.options_ = null;
/*       */         } 
/* 18395 */         return this.optionsBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 18400 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 18406 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 18416 */     private static final EnumValueDescriptorProto DEFAULT_INSTANCE = new EnumValueDescriptorProto();
/*       */ 
/*       */     
/*       */     public static EnumValueDescriptorProto getDefaultInstance() {
/* 18420 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 18424 */     public static final Parser<EnumValueDescriptorProto> PARSER = new AbstractParser<EnumValueDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.EnumValueDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 18430 */           return new DescriptorProtos.EnumValueDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<EnumValueDescriptorProto> parser() {
/* 18435 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<EnumValueDescriptorProto> getParserForType() {
/* 18440 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public EnumValueDescriptorProto getDefaultInstanceForType() {
/* 18445 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface ServiceDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.MethodDescriptorProto> getMethodList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.MethodDescriptorProto getMethod(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getMethodCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.MethodDescriptorProtoOrBuilder> getMethodOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.MethodDescriptorProtoOrBuilder getMethodOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.ServiceOptions getOptions();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.ServiceOptionsOrBuilder getOptionsOrBuilder();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class ServiceDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements ServiceDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     
/*       */     private int bitField0_;
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */     
/*       */     private volatile Object name_;
/*       */     
/*       */     public static final int METHOD_FIELD_NUMBER = 2;
/*       */     
/*       */     private List<DescriptorProtos.MethodDescriptorProto> method_;
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 3;
/*       */     
/*       */     private DescriptorProtos.ServiceOptions options_;
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */     
/*       */     private ServiceDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 18524 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 18729 */       this.memoizedIsInitialized = -1; } private ServiceDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; this.method_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new ServiceDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ServiceDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; DescriptorProtos.ServiceOptions.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = bs; continue;case 18: if ((mutable_bitField0_ & 0x2) == 0) { this.method_ = new ArrayList<>(); mutable_bitField0_ |= 0x2; }  this.method_.add(input.readMessage(DescriptorProtos.MethodDescriptorProto.PARSER, extensionRegistry)); continue;case 26: subBuilder = null; if ((this.bitField0_ & 0x2) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<DescriptorProtos.ServiceOptions>readMessage(DescriptorProtos.ServiceOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x2; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x2) != 0) this.method_ = Collections.unmodifiableList(this.method_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ServiceDescriptorProto.class, (Class)Builder.class); } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public List<DescriptorProtos.MethodDescriptorProto> getMethodList() { return this.method_; } public List<? extends DescriptorProtos.MethodDescriptorProtoOrBuilder> getMethodOrBuilderList() { return (List)this.method_; } public int getMethodCount() { return this.method_.size(); } public DescriptorProtos.MethodDescriptorProto getMethod(int index) { return this.method_.get(index); } public DescriptorProtos.MethodDescriptorProtoOrBuilder getMethodOrBuilder(int index) { return this.method_.get(index); } public boolean hasOptions() { return ((this.bitField0_ & 0x2) != 0); }
/*       */     public DescriptorProtos.ServiceOptions getOptions() { return (this.options_ == null) ? DescriptorProtos.ServiceOptions.getDefaultInstance() : this.options_; }
/*       */     public DescriptorProtos.ServiceOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? DescriptorProtos.ServiceOptions.getDefaultInstance() : this.options_; }
/* 18732 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 18733 */       if (isInitialized == 1) return true; 
/* 18734 */       if (isInitialized == 0) return false;
/*       */       
/* 18736 */       for (int i = 0; i < getMethodCount(); i++) {
/* 18737 */         if (!getMethod(i).isInitialized()) {
/* 18738 */           this.memoizedIsInitialized = 0;
/* 18739 */           return false;
/*       */         } 
/*       */       } 
/* 18742 */       if (hasOptions() && 
/* 18743 */         !getOptions().isInitialized()) {
/* 18744 */         this.memoizedIsInitialized = 0;
/* 18745 */         return false;
/*       */       } 
/*       */       
/* 18748 */       this.memoizedIsInitialized = 1;
/* 18749 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 18755 */       if ((this.bitField0_ & 0x1) != 0) {
/* 18756 */         GeneratedMessageV3.writeString(output, 1, this.name_);
/*       */       }
/* 18758 */       for (int i = 0; i < this.method_.size(); i++) {
/* 18759 */         output.writeMessage(2, this.method_.get(i));
/*       */       }
/* 18761 */       if ((this.bitField0_ & 0x2) != 0) {
/* 18762 */         output.writeMessage(3, getOptions());
/*       */       }
/* 18764 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 18769 */       int size = this.memoizedSize;
/* 18770 */       if (size != -1) return size;
/*       */       
/* 18772 */       size = 0;
/* 18773 */       if ((this.bitField0_ & 0x1) != 0) {
/* 18774 */         size += GeneratedMessageV3.computeStringSize(1, this.name_);
/*       */       }
/* 18776 */       for (int i = 0; i < this.method_.size(); i++) {
/* 18777 */         size += 
/* 18778 */           CodedOutputStream.computeMessageSize(2, this.method_.get(i));
/*       */       }
/* 18780 */       if ((this.bitField0_ & 0x2) != 0) {
/* 18781 */         size += 
/* 18782 */           CodedOutputStream.computeMessageSize(3, getOptions());
/*       */       }
/* 18784 */       size += this.unknownFields.getSerializedSize();
/* 18785 */       this.memoizedSize = size;
/* 18786 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 18791 */       if (obj == this) {
/* 18792 */         return true;
/*       */       }
/* 18794 */       if (!(obj instanceof ServiceDescriptorProto)) {
/* 18795 */         return super.equals(obj);
/*       */       }
/* 18797 */       ServiceDescriptorProto other = (ServiceDescriptorProto)obj;
/*       */       
/* 18799 */       if (hasName() != other.hasName()) return false; 
/* 18800 */       if (hasName() && 
/*       */         
/* 18802 */         !getName().equals(other.getName())) return false;
/*       */ 
/*       */       
/* 18805 */       if (!getMethodList().equals(other.getMethodList())) return false; 
/* 18806 */       if (hasOptions() != other.hasOptions()) return false; 
/* 18807 */       if (hasOptions() && 
/*       */         
/* 18809 */         !getOptions().equals(other.getOptions())) return false;
/*       */       
/* 18811 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 18812 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 18817 */       if (this.memoizedHashCode != 0) {
/* 18818 */         return this.memoizedHashCode;
/*       */       }
/* 18820 */       int hash = 41;
/* 18821 */       hash = 19 * hash + getDescriptor().hashCode();
/* 18822 */       if (hasName()) {
/* 18823 */         hash = 37 * hash + 1;
/* 18824 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/* 18826 */       if (getMethodCount() > 0) {
/* 18827 */         hash = 37 * hash + 2;
/* 18828 */         hash = 53 * hash + getMethodList().hashCode();
/*       */       } 
/* 18830 */       if (hasOptions()) {
/* 18831 */         hash = 37 * hash + 3;
/* 18832 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/* 18834 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 18835 */       this.memoizedHashCode = hash;
/* 18836 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 18842 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 18848 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 18853 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 18859 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 18863 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 18869 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(InputStream input) throws IOException {
/* 18873 */       return 
/* 18874 */         GeneratedMessageV3.<ServiceDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 18880 */       return 
/* 18881 */         GeneratedMessageV3.<ServiceDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ServiceDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/* 18885 */       return 
/* 18886 */         GeneratedMessageV3.<ServiceDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 18892 */       return 
/* 18893 */         GeneratedMessageV3.<ServiceDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/* 18898 */       return 
/* 18899 */         GeneratedMessageV3.<ServiceDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 18905 */       return 
/* 18906 */         GeneratedMessageV3.<ServiceDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 18910 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 18912 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(ServiceDescriptorProto prototype) {
/* 18915 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 18919 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 18920 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 18926 */       Builder builder = new Builder(parent);
/* 18927 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DescriptorProtos.ServiceDescriptorProtoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       private Object name_;
/*       */       private List<DescriptorProtos.MethodDescriptorProto> method_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.MethodDescriptorProto, DescriptorProtos.MethodDescriptorProto.Builder, DescriptorProtos.MethodDescriptorProtoOrBuilder> methodBuilder_;
/*       */       private DescriptorProtos.ServiceOptions options_;
/*       */       private SingleFieldBuilderV3<DescriptorProtos.ServiceOptions, DescriptorProtos.ServiceOptions.Builder, DescriptorProtos.ServiceOptionsOrBuilder> optionsBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 18942 */         return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 18948 */         return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable
/* 18949 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.ServiceDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 19159 */         this.name_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 19243 */         this
/* 19244 */           .method_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.name_ = ""; this.method_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) { getMethodFieldBuilder(); getOptionsFieldBuilder(); }  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; if (this.methodBuilder_ == null) { this.method_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; } else { this.methodBuilder_.clear(); }  if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFFB; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_descriptor; } public DescriptorProtos.ServiceDescriptorProto getDefaultInstanceForType() { return DescriptorProtos.ServiceDescriptorProto.getDefaultInstance(); } public DescriptorProtos.ServiceDescriptorProto build() { DescriptorProtos.ServiceDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.ServiceDescriptorProto buildPartial() { DescriptorProtos.ServiceDescriptorProto result = new DescriptorProtos.ServiceDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if (this.methodBuilder_ == null) { if ((this.bitField0_ & 0x2) != 0) { this.method_ = Collections.unmodifiableList(this.method_); this.bitField0_ &= 0xFFFFFFFD; }  result.method_ = this.method_; } else { result.method_ = this.methodBuilder_.build(); }  if ((from_bitField0_ & 0x4) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x2; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.ServiceDescriptorProto) return mergeFrom((DescriptorProtos.ServiceDescriptorProto)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.ServiceDescriptorProto other) { if (other == DescriptorProtos.ServiceDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (this.methodBuilder_ == null) { if (!other.method_.isEmpty()) { if (this.method_.isEmpty()) { this.method_ = other.method_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureMethodIsMutable(); this.method_.addAll(other.method_); }  onChanged(); }  } else if (!other.method_.isEmpty()) { if (this.methodBuilder_.isEmpty()) { this.methodBuilder_.dispose(); this.methodBuilder_ = null; this.method_ = other.method_; this.bitField0_ &= 0xFFFFFFFD; this.methodBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getMethodFieldBuilder() : null; } else { this.methodBuilder_.addAllMessages(other.method_); }  }  if (other.hasOptions()) mergeOptions(other.getOptions());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getMethodCount(); i++) { if (!getMethod(i).isInitialized()) return false;  }  if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.ServiceDescriptorProto parsedMessage = null; try { parsedMessage = DescriptorProtos.ServiceDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.ServiceDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFE; this.name_ = DescriptorProtos.ServiceDescriptorProto.getDefaultInstance().getName(); onChanged(); return this; }
/*       */       public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; }
/* 19246 */       private void ensureMethodIsMutable() { if ((this.bitField0_ & 0x2) == 0) {
/* 19247 */           this.method_ = new ArrayList<>(this.method_);
/* 19248 */           this.bitField0_ |= 0x2;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.MethodDescriptorProto> getMethodList() {
/* 19259 */         if (this.methodBuilder_ == null) {
/* 19260 */           return Collections.unmodifiableList(this.method_);
/*       */         }
/* 19262 */         return this.methodBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getMethodCount() {
/* 19269 */         if (this.methodBuilder_ == null) {
/* 19270 */           return this.method_.size();
/*       */         }
/* 19272 */         return this.methodBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.MethodDescriptorProto getMethod(int index) {
/* 19279 */         if (this.methodBuilder_ == null) {
/* 19280 */           return this.method_.get(index);
/*       */         }
/* 19282 */         return this.methodBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMethod(int index, DescriptorProtos.MethodDescriptorProto value) {
/* 19290 */         if (this.methodBuilder_ == null) {
/* 19291 */           if (value == null) {
/* 19292 */             throw new NullPointerException();
/*       */           }
/* 19294 */           ensureMethodIsMutable();
/* 19295 */           this.method_.set(index, value);
/* 19296 */           onChanged();
/*       */         } else {
/* 19298 */           this.methodBuilder_.setMessage(index, value);
/*       */         } 
/* 19300 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setMethod(int index, DescriptorProtos.MethodDescriptorProto.Builder builderForValue) {
/* 19307 */         if (this.methodBuilder_ == null) {
/* 19308 */           ensureMethodIsMutable();
/* 19309 */           this.method_.set(index, builderForValue.build());
/* 19310 */           onChanged();
/*       */         } else {
/* 19312 */           this.methodBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 19314 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMethod(DescriptorProtos.MethodDescriptorProto value) {
/* 19320 */         if (this.methodBuilder_ == null) {
/* 19321 */           if (value == null) {
/* 19322 */             throw new NullPointerException();
/*       */           }
/* 19324 */           ensureMethodIsMutable();
/* 19325 */           this.method_.add(value);
/* 19326 */           onChanged();
/*       */         } else {
/* 19328 */           this.methodBuilder_.addMessage(value);
/*       */         } 
/* 19330 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMethod(int index, DescriptorProtos.MethodDescriptorProto value) {
/* 19337 */         if (this.methodBuilder_ == null) {
/* 19338 */           if (value == null) {
/* 19339 */             throw new NullPointerException();
/*       */           }
/* 19341 */           ensureMethodIsMutable();
/* 19342 */           this.method_.add(index, value);
/* 19343 */           onChanged();
/*       */         } else {
/* 19345 */           this.methodBuilder_.addMessage(index, value);
/*       */         } 
/* 19347 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMethod(DescriptorProtos.MethodDescriptorProto.Builder builderForValue) {
/* 19354 */         if (this.methodBuilder_ == null) {
/* 19355 */           ensureMethodIsMutable();
/* 19356 */           this.method_.add(builderForValue.build());
/* 19357 */           onChanged();
/*       */         } else {
/* 19359 */           this.methodBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 19361 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addMethod(int index, DescriptorProtos.MethodDescriptorProto.Builder builderForValue) {
/* 19368 */         if (this.methodBuilder_ == null) {
/* 19369 */           ensureMethodIsMutable();
/* 19370 */           this.method_.add(index, builderForValue.build());
/* 19371 */           onChanged();
/*       */         } else {
/* 19373 */           this.methodBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 19375 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllMethod(Iterable<? extends DescriptorProtos.MethodDescriptorProto> values) {
/* 19382 */         if (this.methodBuilder_ == null) {
/* 19383 */           ensureMethodIsMutable();
/* 19384 */           AbstractMessageLite.Builder.addAll(values, this.method_);
/*       */           
/* 19386 */           onChanged();
/*       */         } else {
/* 19388 */           this.methodBuilder_.addAllMessages(values);
/*       */         } 
/* 19390 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearMethod() {
/* 19396 */         if (this.methodBuilder_ == null) {
/* 19397 */           this.method_ = Collections.emptyList();
/* 19398 */           this.bitField0_ &= 0xFFFFFFFD;
/* 19399 */           onChanged();
/*       */         } else {
/* 19401 */           this.methodBuilder_.clear();
/*       */         } 
/* 19403 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeMethod(int index) {
/* 19409 */         if (this.methodBuilder_ == null) {
/* 19410 */           ensureMethodIsMutable();
/* 19411 */           this.method_.remove(index);
/* 19412 */           onChanged();
/*       */         } else {
/* 19414 */           this.methodBuilder_.remove(index);
/*       */         } 
/* 19416 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.MethodDescriptorProto.Builder getMethodBuilder(int index) {
/* 19423 */         return getMethodFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.MethodDescriptorProtoOrBuilder getMethodOrBuilder(int index) {
/* 19430 */         if (this.methodBuilder_ == null)
/* 19431 */           return this.method_.get(index); 
/* 19432 */         return this.methodBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DescriptorProtos.MethodDescriptorProtoOrBuilder> getMethodOrBuilderList() {
/* 19440 */         if (this.methodBuilder_ != null) {
/* 19441 */           return this.methodBuilder_.getMessageOrBuilderList();
/*       */         }
/* 19443 */         return Collections.unmodifiableList((List)this.method_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.MethodDescriptorProto.Builder addMethodBuilder() {
/* 19450 */         return getMethodFieldBuilder().addBuilder(
/* 19451 */             DescriptorProtos.MethodDescriptorProto.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.MethodDescriptorProto.Builder addMethodBuilder(int index) {
/* 19458 */         return getMethodFieldBuilder().addBuilder(index, 
/* 19459 */             DescriptorProtos.MethodDescriptorProto.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.MethodDescriptorProto.Builder> getMethodBuilderList() {
/* 19466 */         return getMethodFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.MethodDescriptorProto, DescriptorProtos.MethodDescriptorProto.Builder, DescriptorProtos.MethodDescriptorProtoOrBuilder> getMethodFieldBuilder() {
/* 19471 */         if (this.methodBuilder_ == null) {
/* 19472 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 19477 */             .methodBuilder_ = new RepeatedFieldBuilderV3<>(this.method_, ((this.bitField0_ & 0x2) != 0), getParentForChildren(), isClean());
/* 19478 */           this.method_ = null;
/*       */         } 
/* 19480 */         return this.methodBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasOptions() {
/* 19491 */         return ((this.bitField0_ & 0x4) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.ServiceOptions getOptions() {
/* 19498 */         if (this.optionsBuilder_ == null) {
/* 19499 */           return (this.options_ == null) ? DescriptorProtos.ServiceOptions.getDefaultInstance() : this.options_;
/*       */         }
/* 19501 */         return this.optionsBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(DescriptorProtos.ServiceOptions value) {
/* 19508 */         if (this.optionsBuilder_ == null) {
/* 19509 */           if (value == null) {
/* 19510 */             throw new NullPointerException();
/*       */           }
/* 19512 */           this.options_ = value;
/* 19513 */           onChanged();
/*       */         } else {
/* 19515 */           this.optionsBuilder_.setMessage(value);
/*       */         } 
/* 19517 */         this.bitField0_ |= 0x4;
/* 19518 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(DescriptorProtos.ServiceOptions.Builder builderForValue) {
/* 19525 */         if (this.optionsBuilder_ == null) {
/* 19526 */           this.options_ = builderForValue.build();
/* 19527 */           onChanged();
/*       */         } else {
/* 19529 */           this.optionsBuilder_.setMessage(builderForValue.build());
/*       */         } 
/* 19531 */         this.bitField0_ |= 0x4;
/* 19532 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeOptions(DescriptorProtos.ServiceOptions value) {
/* 19538 */         if (this.optionsBuilder_ == null) {
/* 19539 */           if ((this.bitField0_ & 0x4) != 0 && this.options_ != null && this.options_ != 
/*       */             
/* 19541 */             DescriptorProtos.ServiceOptions.getDefaultInstance()) {
/* 19542 */             this
/* 19543 */               .options_ = DescriptorProtos.ServiceOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 19545 */             this.options_ = value;
/*       */           } 
/* 19547 */           onChanged();
/*       */         } else {
/* 19549 */           this.optionsBuilder_.mergeFrom(value);
/*       */         } 
/* 19551 */         this.bitField0_ |= 0x4;
/* 19552 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOptions() {
/* 19558 */         if (this.optionsBuilder_ == null) {
/* 19559 */           this.options_ = null;
/* 19560 */           onChanged();
/*       */         } else {
/* 19562 */           this.optionsBuilder_.clear();
/*       */         } 
/* 19564 */         this.bitField0_ &= 0xFFFFFFFB;
/* 19565 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.ServiceOptions.Builder getOptionsBuilder() {
/* 19571 */         this.bitField0_ |= 0x4;
/* 19572 */         onChanged();
/* 19573 */         return getOptionsFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.ServiceOptionsOrBuilder getOptionsOrBuilder() {
/* 19579 */         if (this.optionsBuilder_ != null) {
/* 19580 */           return this.optionsBuilder_.getMessageOrBuilder();
/*       */         }
/* 19582 */         return (this.options_ == null) ? 
/* 19583 */           DescriptorProtos.ServiceOptions.getDefaultInstance() : this.options_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DescriptorProtos.ServiceOptions, DescriptorProtos.ServiceOptions.Builder, DescriptorProtos.ServiceOptionsOrBuilder> getOptionsFieldBuilder() {
/* 19592 */         if (this.optionsBuilder_ == null) {
/* 19593 */           this
/*       */ 
/*       */ 
/*       */             
/* 19597 */             .optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean());
/* 19598 */           this.options_ = null;
/*       */         } 
/* 19600 */         return this.optionsBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 19605 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 19611 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 19621 */     private static final ServiceDescriptorProto DEFAULT_INSTANCE = new ServiceDescriptorProto();
/*       */ 
/*       */     
/*       */     public static ServiceDescriptorProto getDefaultInstance() {
/* 19625 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 19629 */     public static final Parser<ServiceDescriptorProto> PARSER = new AbstractParser<ServiceDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.ServiceDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 19635 */           return new DescriptorProtos.ServiceDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<ServiceDescriptorProto> parser() {
/* 19640 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<ServiceDescriptorProto> getParserForType() {
/* 19645 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public ServiceDescriptorProto getDefaultInstanceForType() {
/* 19650 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface MethodDescriptorProtoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     boolean hasName();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getName();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getNameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasInputType();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getInputType();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getInputTypeBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOutputType();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getOutputType();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getOutputTypeBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.MethodOptions getOptions();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.MethodOptionsOrBuilder getOptionsOrBuilder();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasClientStreaming();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getClientStreaming();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasServerStreaming();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getServerStreaming();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class MethodDescriptorProto
/*       */     extends GeneratedMessageV3
/*       */     implements MethodDescriptorProtoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 1;
/*       */ 
/*       */     
/*       */     private volatile Object name_;
/*       */ 
/*       */     
/*       */     public static final int INPUT_TYPE_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private volatile Object inputType_;
/*       */ 
/*       */     
/*       */     public static final int OUTPUT_TYPE_FIELD_NUMBER = 3;
/*       */ 
/*       */     
/*       */     private volatile Object outputType_;
/*       */ 
/*       */     
/*       */     public static final int OPTIONS_FIELD_NUMBER = 4;
/*       */ 
/*       */     
/*       */     private DescriptorProtos.MethodOptions options_;
/*       */ 
/*       */     
/*       */     public static final int CLIENT_STREAMING_FIELD_NUMBER = 5;
/*       */ 
/*       */     
/*       */     private boolean clientStreaming_;
/*       */ 
/*       */     
/*       */     public static final int SERVER_STREAMING_FIELD_NUMBER = 6;
/*       */ 
/*       */     
/*       */     private boolean serverStreaming_;
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */     
/*       */     private MethodDescriptorProto(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 19792 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 20128 */       this.memoizedIsInitialized = -1; } private MethodDescriptorProto() { this.memoizedIsInitialized = -1; this.name_ = ""; this.inputType_ = ""; this.outputType_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new MethodDescriptorProto(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private MethodDescriptorProto(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; DescriptorProtos.MethodOptions.Builder subBuilder; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.name_ = bs; continue;case 18: bs = input.readBytes(); this.bitField0_ |= 0x2; this.inputType_ = bs; continue;case 26: bs = input.readBytes(); this.bitField0_ |= 0x4; this.outputType_ = bs; continue;case 34: subBuilder = null; if ((this.bitField0_ & 0x8) != 0) subBuilder = this.options_.toBuilder();  this.options_ = input.<DescriptorProtos.MethodOptions>readMessage(DescriptorProtos.MethodOptions.PARSER, extensionRegistry); if (subBuilder != null) { subBuilder.mergeFrom(this.options_); this.options_ = subBuilder.buildPartial(); }  this.bitField0_ |= 0x8; continue;case 40: this.bitField0_ |= 0x10; this.clientStreaming_ = input.readBool(); continue;case 48: this.bitField0_ |= 0x20; this.serverStreaming_ = input.readBool(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)MethodDescriptorProto.class, (Class)Builder.class); } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public boolean hasInputType() { return ((this.bitField0_ & 0x2) != 0); } public String getInputType() { Object ref = this.inputType_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.inputType_ = s;  return s; } public ByteString getInputTypeBytes() { Object ref = this.inputType_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.inputType_ = b; return b; }  return (ByteString)ref; } public boolean hasOutputType() { return ((this.bitField0_ & 0x4) != 0); } public String getOutputType() { Object ref = this.outputType_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.outputType_ = s;  return s; } public ByteString getOutputTypeBytes() { Object ref = this.outputType_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.outputType_ = b; return b; }  return (ByteString)ref; } public boolean hasOptions() { return ((this.bitField0_ & 0x8) != 0); } public DescriptorProtos.MethodOptions getOptions() { return (this.options_ == null) ? DescriptorProtos.MethodOptions.getDefaultInstance() : this.options_; } public DescriptorProtos.MethodOptionsOrBuilder getOptionsOrBuilder() { return (this.options_ == null) ? DescriptorProtos.MethodOptions.getDefaultInstance() : this.options_; } public boolean hasClientStreaming() { return ((this.bitField0_ & 0x10) != 0); } public boolean getClientStreaming() { return this.clientStreaming_; }
/*       */     public boolean hasServerStreaming() { return ((this.bitField0_ & 0x20) != 0); }
/*       */     public boolean getServerStreaming() { return this.serverStreaming_; }
/* 20131 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 20132 */       if (isInitialized == 1) return true; 
/* 20133 */       if (isInitialized == 0) return false;
/*       */       
/* 20135 */       if (hasOptions() && 
/* 20136 */         !getOptions().isInitialized()) {
/* 20137 */         this.memoizedIsInitialized = 0;
/* 20138 */         return false;
/*       */       } 
/*       */       
/* 20141 */       this.memoizedIsInitialized = 1;
/* 20142 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 20148 */       if ((this.bitField0_ & 0x1) != 0) {
/* 20149 */         GeneratedMessageV3.writeString(output, 1, this.name_);
/*       */       }
/* 20151 */       if ((this.bitField0_ & 0x2) != 0) {
/* 20152 */         GeneratedMessageV3.writeString(output, 2, this.inputType_);
/*       */       }
/* 20154 */       if ((this.bitField0_ & 0x4) != 0) {
/* 20155 */         GeneratedMessageV3.writeString(output, 3, this.outputType_);
/*       */       }
/* 20157 */       if ((this.bitField0_ & 0x8) != 0) {
/* 20158 */         output.writeMessage(4, getOptions());
/*       */       }
/* 20160 */       if ((this.bitField0_ & 0x10) != 0) {
/* 20161 */         output.writeBool(5, this.clientStreaming_);
/*       */       }
/* 20163 */       if ((this.bitField0_ & 0x20) != 0) {
/* 20164 */         output.writeBool(6, this.serverStreaming_);
/*       */       }
/* 20166 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 20171 */       int size = this.memoizedSize;
/* 20172 */       if (size != -1) return size;
/*       */       
/* 20174 */       size = 0;
/* 20175 */       if ((this.bitField0_ & 0x1) != 0) {
/* 20176 */         size += GeneratedMessageV3.computeStringSize(1, this.name_);
/*       */       }
/* 20178 */       if ((this.bitField0_ & 0x2) != 0) {
/* 20179 */         size += GeneratedMessageV3.computeStringSize(2, this.inputType_);
/*       */       }
/* 20181 */       if ((this.bitField0_ & 0x4) != 0) {
/* 20182 */         size += GeneratedMessageV3.computeStringSize(3, this.outputType_);
/*       */       }
/* 20184 */       if ((this.bitField0_ & 0x8) != 0) {
/* 20185 */         size += 
/* 20186 */           CodedOutputStream.computeMessageSize(4, getOptions());
/*       */       }
/* 20188 */       if ((this.bitField0_ & 0x10) != 0) {
/* 20189 */         size += 
/* 20190 */           CodedOutputStream.computeBoolSize(5, this.clientStreaming_);
/*       */       }
/* 20192 */       if ((this.bitField0_ & 0x20) != 0) {
/* 20193 */         size += 
/* 20194 */           CodedOutputStream.computeBoolSize(6, this.serverStreaming_);
/*       */       }
/* 20196 */       size += this.unknownFields.getSerializedSize();
/* 20197 */       this.memoizedSize = size;
/* 20198 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 20203 */       if (obj == this) {
/* 20204 */         return true;
/*       */       }
/* 20206 */       if (!(obj instanceof MethodDescriptorProto)) {
/* 20207 */         return super.equals(obj);
/*       */       }
/* 20209 */       MethodDescriptorProto other = (MethodDescriptorProto)obj;
/*       */       
/* 20211 */       if (hasName() != other.hasName()) return false; 
/* 20212 */       if (hasName() && 
/*       */         
/* 20214 */         !getName().equals(other.getName())) return false;
/*       */       
/* 20216 */       if (hasInputType() != other.hasInputType()) return false; 
/* 20217 */       if (hasInputType() && 
/*       */         
/* 20219 */         !getInputType().equals(other.getInputType())) return false;
/*       */       
/* 20221 */       if (hasOutputType() != other.hasOutputType()) return false; 
/* 20222 */       if (hasOutputType() && 
/*       */         
/* 20224 */         !getOutputType().equals(other.getOutputType())) return false;
/*       */       
/* 20226 */       if (hasOptions() != other.hasOptions()) return false; 
/* 20227 */       if (hasOptions() && 
/*       */         
/* 20229 */         !getOptions().equals(other.getOptions())) return false;
/*       */       
/* 20231 */       if (hasClientStreaming() != other.hasClientStreaming()) return false; 
/* 20232 */       if (hasClientStreaming() && 
/* 20233 */         getClientStreaming() != other
/* 20234 */         .getClientStreaming()) return false;
/*       */       
/* 20236 */       if (hasServerStreaming() != other.hasServerStreaming()) return false; 
/* 20237 */       if (hasServerStreaming() && 
/* 20238 */         getServerStreaming() != other
/* 20239 */         .getServerStreaming()) return false;
/*       */       
/* 20241 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 20242 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 20247 */       if (this.memoizedHashCode != 0) {
/* 20248 */         return this.memoizedHashCode;
/*       */       }
/* 20250 */       int hash = 41;
/* 20251 */       hash = 19 * hash + getDescriptor().hashCode();
/* 20252 */       if (hasName()) {
/* 20253 */         hash = 37 * hash + 1;
/* 20254 */         hash = 53 * hash + getName().hashCode();
/*       */       } 
/* 20256 */       if (hasInputType()) {
/* 20257 */         hash = 37 * hash + 2;
/* 20258 */         hash = 53 * hash + getInputType().hashCode();
/*       */       } 
/* 20260 */       if (hasOutputType()) {
/* 20261 */         hash = 37 * hash + 3;
/* 20262 */         hash = 53 * hash + getOutputType().hashCode();
/*       */       } 
/* 20264 */       if (hasOptions()) {
/* 20265 */         hash = 37 * hash + 4;
/* 20266 */         hash = 53 * hash + getOptions().hashCode();
/*       */       } 
/* 20268 */       if (hasClientStreaming()) {
/* 20269 */         hash = 37 * hash + 5;
/* 20270 */         hash = 53 * hash + Internal.hashBoolean(
/* 20271 */             getClientStreaming());
/*       */       } 
/* 20273 */       if (hasServerStreaming()) {
/* 20274 */         hash = 37 * hash + 6;
/* 20275 */         hash = 53 * hash + Internal.hashBoolean(
/* 20276 */             getServerStreaming());
/*       */       } 
/* 20278 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 20279 */       this.memoizedHashCode = hash;
/* 20280 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 20286 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 20292 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 20297 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 20303 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 20307 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 20313 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(InputStream input) throws IOException {
/* 20317 */       return 
/* 20318 */         GeneratedMessageV3.<MethodDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 20324 */       return 
/* 20325 */         GeneratedMessageV3.<MethodDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MethodDescriptorProto parseDelimitedFrom(InputStream input) throws IOException {
/* 20329 */       return 
/* 20330 */         GeneratedMessageV3.<MethodDescriptorProto>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 20336 */       return 
/* 20337 */         GeneratedMessageV3.<MethodDescriptorProto>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(CodedInputStream input) throws IOException {
/* 20342 */       return 
/* 20343 */         GeneratedMessageV3.<MethodDescriptorProto>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 20349 */       return 
/* 20350 */         GeneratedMessageV3.<MethodDescriptorProto>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 20354 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 20356 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(MethodDescriptorProto prototype) {
/* 20359 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 20363 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 20364 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 20370 */       Builder builder = new Builder(parent);
/* 20371 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder> implements DescriptorProtos.MethodDescriptorProtoOrBuilder {
/*       */       private int bitField0_;
/*       */       private Object name_;
/*       */       private Object inputType_;
/*       */       private Object outputType_;
/*       */       private DescriptorProtos.MethodOptions options_;
/*       */       private SingleFieldBuilderV3<DescriptorProtos.MethodOptions, DescriptorProtos.MethodOptions.Builder, DescriptorProtos.MethodOptionsOrBuilder> optionsBuilder_;
/*       */       private boolean clientStreaming_;
/*       */       private boolean serverStreaming_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 20386 */         return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 20392 */         return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable
/* 20393 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.MethodDescriptorProto.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 20596 */         this.name_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 20680 */         this.inputType_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 20794 */         this.outputType_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.name_ = ""; this.inputType_ = ""; this.outputType_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getOptionsFieldBuilder();  } public Builder clear() { super.clear(); this.name_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.inputType_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.outputType_ = ""; this.bitField0_ &= 0xFFFFFFFB; if (this.optionsBuilder_ == null) { this.options_ = null; } else { this.optionsBuilder_.clear(); }  this.bitField0_ &= 0xFFFFFFF7; this.clientStreaming_ = false; this.bitField0_ &= 0xFFFFFFEF; this.serverStreaming_ = false; this.bitField0_ &= 0xFFFFFFDF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_descriptor; } public DescriptorProtos.MethodDescriptorProto getDefaultInstanceForType() { return DescriptorProtos.MethodDescriptorProto.getDefaultInstance(); } public DescriptorProtos.MethodDescriptorProto build() { DescriptorProtos.MethodDescriptorProto result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.MethodDescriptorProto buildPartial() { DescriptorProtos.MethodDescriptorProto result = new DescriptorProtos.MethodDescriptorProto(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.name_ = this.name_; if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.inputType_ = this.inputType_; if ((from_bitField0_ & 0x4) != 0) to_bitField0_ |= 0x4;  result.outputType_ = this.outputType_; if ((from_bitField0_ & 0x8) != 0) { if (this.optionsBuilder_ == null) { result.options_ = this.options_; } else { result.options_ = this.optionsBuilder_.build(); }  to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x10) != 0) { result.clientStreaming_ = this.clientStreaming_; to_bitField0_ |= 0x10; }  if ((from_bitField0_ & 0x20) != 0) { result.serverStreaming_ = this.serverStreaming_; to_bitField0_ |= 0x20; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.MethodDescriptorProto) return mergeFrom((DescriptorProtos.MethodDescriptorProto)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.MethodDescriptorProto other) { if (other == DescriptorProtos.MethodDescriptorProto.getDefaultInstance()) return this;  if (other.hasName()) { this.bitField0_ |= 0x1; this.name_ = other.name_; onChanged(); }  if (other.hasInputType()) { this.bitField0_ |= 0x2; this.inputType_ = other.inputType_; onChanged(); }  if (other.hasOutputType()) { this.bitField0_ |= 0x4; this.outputType_ = other.outputType_; onChanged(); }  if (other.hasOptions()) mergeOptions(other.getOptions());  if (other.hasClientStreaming()) setClientStreaming(other.getClientStreaming());  if (other.hasServerStreaming()) setServerStreaming(other.getServerStreaming());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (hasOptions() && !getOptions().isInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.MethodDescriptorProto parsedMessage = null; try { parsedMessage = DescriptorProtos.MethodDescriptorProto.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.MethodDescriptorProto)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasName() { return ((this.bitField0_ & 0x1) != 0); } public String getName() { Object ref = this.name_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.name_ = s;  return s; }  return (String)ref; } public ByteString getNameBytes() { Object ref = this.name_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.name_ = b; return b; }  return (ByteString)ref; } public Builder setName(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public Builder clearName() { this.bitField0_ &= 0xFFFFFFFE; this.name_ = DescriptorProtos.MethodDescriptorProto.getDefaultInstance().getName(); onChanged(); return this; } public Builder setNameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.name_ = value; onChanged(); return this; } public boolean hasInputType() { return ((this.bitField0_ & 0x2) != 0); }
/*       */       public String getInputType() { Object ref = this.inputType_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.inputType_ = s;  return s; }  return (String)ref; }
/*       */       public ByteString getInputTypeBytes() { Object ref = this.inputType_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.inputType_ = b; return b; }  return (ByteString)ref; }
/*       */       public Builder setInputType(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.inputType_ = value; onChanged(); return this; }
/*       */       public Builder clearInputType() { this.bitField0_ &= 0xFFFFFFFD; this.inputType_ = DescriptorProtos.MethodDescriptorProto.getDefaultInstance().getInputType(); onChanged(); return this; }
/*       */       public Builder setInputTypeBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.inputType_ = value; onChanged(); return this; }
/* 20800 */       public boolean hasOutputType() { return ((this.bitField0_ & 0x4) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getOutputType() {
/* 20807 */         Object ref = this.outputType_;
/* 20808 */         if (!(ref instanceof String)) {
/* 20809 */           ByteString bs = (ByteString)ref;
/*       */           
/* 20811 */           String s = bs.toStringUtf8();
/* 20812 */           if (bs.isValidUtf8()) {
/* 20813 */             this.outputType_ = s;
/*       */           }
/* 20815 */           return s;
/*       */         } 
/* 20817 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getOutputTypeBytes() {
/* 20826 */         Object ref = this.outputType_;
/* 20827 */         if (ref instanceof String) {
/*       */           
/* 20829 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 20831 */           this.outputType_ = b;
/* 20832 */           return b;
/*       */         } 
/* 20834 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOutputType(String value) {
/* 20844 */         if (value == null) {
/* 20845 */           throw new NullPointerException();
/*       */         }
/* 20847 */         this.bitField0_ |= 0x4;
/* 20848 */         this.outputType_ = value;
/* 20849 */         onChanged();
/* 20850 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOutputType() {
/* 20857 */         this.bitField0_ &= 0xFFFFFFFB;
/* 20858 */         this.outputType_ = DescriptorProtos.MethodDescriptorProto.getDefaultInstance().getOutputType();
/* 20859 */         onChanged();
/* 20860 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOutputTypeBytes(ByteString value) {
/* 20869 */         if (value == null) {
/* 20870 */           throw new NullPointerException();
/*       */         }
/* 20872 */         this.bitField0_ |= 0x4;
/* 20873 */         this.outputType_ = value;
/* 20874 */         onChanged();
/* 20875 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasOptions() {
/* 20886 */         return ((this.bitField0_ & 0x8) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.MethodOptions getOptions() {
/* 20893 */         if (this.optionsBuilder_ == null) {
/* 20894 */           return (this.options_ == null) ? DescriptorProtos.MethodOptions.getDefaultInstance() : this.options_;
/*       */         }
/* 20896 */         return this.optionsBuilder_.getMessage();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(DescriptorProtos.MethodOptions value) {
/* 20903 */         if (this.optionsBuilder_ == null) {
/* 20904 */           if (value == null) {
/* 20905 */             throw new NullPointerException();
/*       */           }
/* 20907 */           this.options_ = value;
/* 20908 */           onChanged();
/*       */         } else {
/* 20910 */           this.optionsBuilder_.setMessage(value);
/*       */         } 
/* 20912 */         this.bitField0_ |= 0x8;
/* 20913 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setOptions(DescriptorProtos.MethodOptions.Builder builderForValue) {
/* 20920 */         if (this.optionsBuilder_ == null) {
/* 20921 */           this.options_ = builderForValue.build();
/* 20922 */           onChanged();
/*       */         } else {
/* 20924 */           this.optionsBuilder_.setMessage(builderForValue.build());
/*       */         } 
/* 20926 */         this.bitField0_ |= 0x8;
/* 20927 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder mergeOptions(DescriptorProtos.MethodOptions value) {
/* 20933 */         if (this.optionsBuilder_ == null) {
/* 20934 */           if ((this.bitField0_ & 0x8) != 0 && this.options_ != null && this.options_ != 
/*       */             
/* 20936 */             DescriptorProtos.MethodOptions.getDefaultInstance()) {
/* 20937 */             this
/* 20938 */               .options_ = DescriptorProtos.MethodOptions.newBuilder(this.options_).mergeFrom(value).buildPartial();
/*       */           } else {
/* 20940 */             this.options_ = value;
/*       */           } 
/* 20942 */           onChanged();
/*       */         } else {
/* 20944 */           this.optionsBuilder_.mergeFrom(value);
/*       */         } 
/* 20946 */         this.bitField0_ |= 0x8;
/* 20947 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearOptions() {
/* 20953 */         if (this.optionsBuilder_ == null) {
/* 20954 */           this.options_ = null;
/* 20955 */           onChanged();
/*       */         } else {
/* 20957 */           this.optionsBuilder_.clear();
/*       */         } 
/* 20959 */         this.bitField0_ &= 0xFFFFFFF7;
/* 20960 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.MethodOptions.Builder getOptionsBuilder() {
/* 20966 */         this.bitField0_ |= 0x8;
/* 20967 */         onChanged();
/* 20968 */         return getOptionsFieldBuilder().getBuilder();
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.MethodOptionsOrBuilder getOptionsOrBuilder() {
/* 20974 */         if (this.optionsBuilder_ != null) {
/* 20975 */           return this.optionsBuilder_.getMessageOrBuilder();
/*       */         }
/* 20977 */         return (this.options_ == null) ? 
/* 20978 */           DescriptorProtos.MethodOptions.getDefaultInstance() : this.options_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private SingleFieldBuilderV3<DescriptorProtos.MethodOptions, DescriptorProtos.MethodOptions.Builder, DescriptorProtos.MethodOptionsOrBuilder> getOptionsFieldBuilder() {
/* 20987 */         if (this.optionsBuilder_ == null) {
/* 20988 */           this
/*       */ 
/*       */ 
/*       */             
/* 20992 */             .optionsBuilder_ = new SingleFieldBuilderV3<>(getOptions(), getParentForChildren(), isClean());
/* 20993 */           this.options_ = null;
/*       */         } 
/* 20995 */         return this.optionsBuilder_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasClientStreaming() {
/* 21008 */         return ((this.bitField0_ & 0x10) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getClientStreaming() {
/* 21019 */         return this.clientStreaming_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setClientStreaming(boolean value) {
/* 21031 */         this.bitField0_ |= 0x10;
/* 21032 */         this.clientStreaming_ = value;
/* 21033 */         onChanged();
/* 21034 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearClientStreaming() {
/* 21045 */         this.bitField0_ &= 0xFFFFFFEF;
/* 21046 */         this.clientStreaming_ = false;
/* 21047 */         onChanged();
/* 21048 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean hasServerStreaming() {
/* 21061 */         return ((this.bitField0_ & 0x20) != 0);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public boolean getServerStreaming() {
/* 21072 */         return this.serverStreaming_;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setServerStreaming(boolean value) {
/* 21084 */         this.bitField0_ |= 0x20;
/* 21085 */         this.serverStreaming_ = value;
/* 21086 */         onChanged();
/* 21087 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearServerStreaming() {
/* 21098 */         this.bitField0_ &= 0xFFFFFFDF;
/* 21099 */         this.serverStreaming_ = false;
/* 21100 */         onChanged();
/* 21101 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 21106 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 21112 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 21122 */     private static final MethodDescriptorProto DEFAULT_INSTANCE = new MethodDescriptorProto();
/*       */ 
/*       */     
/*       */     public static MethodDescriptorProto getDefaultInstance() {
/* 21126 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 21130 */     public static final Parser<MethodDescriptorProto> PARSER = new AbstractParser<MethodDescriptorProto>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.MethodDescriptorProto parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 21136 */           return new DescriptorProtos.MethodDescriptorProto(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<MethodDescriptorProto> parser() {
/* 21141 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<MethodDescriptorProto> getParserForType() {
/* 21146 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public MethodDescriptorProto getDefaultInstanceForType() {
/* 21151 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FileOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<FileOptions>
/*       */   {
/*       */     boolean hasJavaPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getJavaPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getJavaPackageBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasJavaOuterClassname();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getJavaOuterClassname();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getJavaOuterClassnameBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasJavaMultipleFiles();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getJavaMultipleFiles();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     @Deprecated
/*       */     boolean hasJavaGenerateEqualsAndHash();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     @Deprecated
/*       */     boolean getJavaGenerateEqualsAndHash();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasJavaStringCheckUtf8();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getJavaStringCheckUtf8();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasOptimizeFor();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FileOptions.OptimizeMode getOptimizeFor();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasGoPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getGoPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getGoPackageBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCcGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getCcGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasJavaGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getJavaGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPyGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getPyGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPhpGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getPhpGenericServices();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCcEnableArenas();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getCcEnableArenas();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasObjcClassPrefix();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getObjcClassPrefix();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getObjcClassPrefixBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasCsharpNamespace();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getCsharpNamespace();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getCsharpNamespaceBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasSwiftPrefix();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getSwiftPrefix();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getSwiftPrefixBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPhpClassPrefix();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getPhpClassPrefix();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getPhpClassPrefixBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPhpNamespace();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getPhpNamespace();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getPhpNamespaceBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPhpMetadataNamespace();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getPhpMetadataNamespace();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getPhpMetadataNamespaceBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasRubyPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     String getRubyPackage();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getRubyPackageBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class FileOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<FileOptions>
/*       */     implements FileOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JAVA_PACKAGE_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object javaPackage_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JAVA_OUTER_CLASSNAME_FIELD_NUMBER = 8;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object javaOuterClassname_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JAVA_MULTIPLE_FILES_FIELD_NUMBER = 10;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean javaMultipleFiles_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JAVA_GENERATE_EQUALS_AND_HASH_FIELD_NUMBER = 20;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean javaGenerateEqualsAndHash_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JAVA_STRING_CHECK_UTF8_FIELD_NUMBER = 27;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean javaStringCheckUtf8_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OPTIMIZE_FOR_FIELD_NUMBER = 9;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int optimizeFor_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int GO_PACKAGE_FIELD_NUMBER = 11;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object goPackage_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CC_GENERIC_SERVICES_FIELD_NUMBER = 16;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean ccGenericServices_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JAVA_GENERIC_SERVICES_FIELD_NUMBER = 17;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean javaGenericServices_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PY_GENERIC_SERVICES_FIELD_NUMBER = 18;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean pyGenericServices_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PHP_GENERIC_SERVICES_FIELD_NUMBER = 42;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean phpGenericServices_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 23;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CC_ENABLE_ARENAS_FIELD_NUMBER = 31;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean ccEnableArenas_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int OBJC_CLASS_PREFIX_FIELD_NUMBER = 36;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object objcClassPrefix_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CSHARP_NAMESPACE_FIELD_NUMBER = 37;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object csharpNamespace_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int SWIFT_PREFIX_FIELD_NUMBER = 39;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object swiftPrefix_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PHP_CLASS_PREFIX_FIELD_NUMBER = 40;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object phpClassPrefix_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PHP_NAMESPACE_FIELD_NUMBER = 41;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object phpNamespace_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PHP_METADATA_NAMESPACE_FIELD_NUMBER = 44;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object phpMetadataNamespace_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int RUBY_PACKAGE_FIELD_NUMBER = 45;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private volatile Object rubyPackage_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private FileOptions(GeneratedMessageV3.ExtendableBuilder<FileOptions, ?> builder)
/*       */     {
/* 21779 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 23082 */       this.memoizedIsInitialized = -1; } private FileOptions() { this.memoizedIsInitialized = -1; this.javaPackage_ = ""; this.javaOuterClassname_ = ""; this.optimizeFor_ = 1; this.goPackage_ = ""; this.objcClassPrefix_ = ""; this.csharpNamespace_ = ""; this.swiftPrefix_ = ""; this.phpClassPrefix_ = ""; this.phpNamespace_ = ""; this.phpMetadataNamespace_ = ""; this.rubyPackage_ = ""; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FileOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FileOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString byteString1; int rawValue; ByteString bs; OptimizeMode value; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: byteString1 = input.readBytes(); this.bitField0_ |= 0x1; this.javaPackage_ = byteString1; continue;case 66: byteString1 = input.readBytes(); this.bitField0_ |= 0x2; this.javaOuterClassname_ = byteString1; continue;case 72: rawValue = input.readEnum(); value = OptimizeMode.valueOf(rawValue); if (value == null) { unknownFields.mergeVarintField(9, rawValue); continue; }  this.bitField0_ |= 0x20; this.optimizeFor_ = rawValue; continue;case 80: this.bitField0_ |= 0x4; this.javaMultipleFiles_ = input.readBool(); continue;case 90: bs = input.readBytes(); this.bitField0_ |= 0x40; this.goPackage_ = bs; continue;case 128: this.bitField0_ |= 0x80; this.ccGenericServices_ = input.readBool(); continue;case 136: this.bitField0_ |= 0x100; this.javaGenericServices_ = input.readBool(); continue;case 144: this.bitField0_ |= 0x200; this.pyGenericServices_ = input.readBool(); continue;case 160: this.bitField0_ |= 0x8; this.javaGenerateEqualsAndHash_ = input.readBool(); continue;case 184: this.bitField0_ |= 0x800; this.deprecated_ = input.readBool(); continue;case 216: this.bitField0_ |= 0x10; this.javaStringCheckUtf8_ = input.readBool(); continue;case 248: this.bitField0_ |= 0x1000; this.ccEnableArenas_ = input.readBool(); continue;case 290: bs = input.readBytes(); this.bitField0_ |= 0x2000; this.objcClassPrefix_ = bs; continue;case 298: bs = input.readBytes(); this.bitField0_ |= 0x4000; this.csharpNamespace_ = bs; continue;case 314: bs = input.readBytes(); this.bitField0_ |= 0x8000; this.swiftPrefix_ = bs; continue;case 322: bs = input.readBytes(); this.bitField0_ |= 0x10000; this.phpClassPrefix_ = bs; continue;case 330: bs = input.readBytes(); this.bitField0_ |= 0x20000; this.phpNamespace_ = bs; continue;case 336: this.bitField0_ |= 0x400; this.phpGenericServices_ = input.readBool(); continue;case 354: bs = input.readBytes(); this.bitField0_ |= 0x40000; this.phpMetadataNamespace_ = bs; continue;case 362: bs = input.readBytes(); this.bitField0_ |= 0x80000; this.rubyPackage_ = bs; continue;case 7994: if ((mutable_bitField0_ & 0x100000) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x100000; }  this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x100000) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_FileOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_FileOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)FileOptions.class, (Class)Builder.class); } public enum OptimizeMode implements ProtocolMessageEnum {
/*       */       SPEED(1), CODE_SIZE(2), LITE_RUNTIME(3); public static final int SPEED_VALUE = 1; public static final int CODE_SIZE_VALUE = 2; public static final int LITE_RUNTIME_VALUE = 3; private static final Internal.EnumLiteMap<OptimizeMode> internalValueMap = new Internal.EnumLiteMap<OptimizeMode>() { public DescriptorProtos.FileOptions.OptimizeMode findValueByNumber(int number) { return DescriptorProtos.FileOptions.OptimizeMode.forNumber(number); } }
/*       */       ; private static final OptimizeMode[] VALUES = values(); private final int value; public final int getNumber() { return this.value; } public static OptimizeMode forNumber(int value) { switch (value) { case 1: return SPEED;case 2: return CODE_SIZE;case 3: return LITE_RUNTIME; }  return null; } public static Internal.EnumLiteMap<OptimizeMode> internalGetValueMap() { return internalValueMap; } static {  } public final Descriptors.EnumValueDescriptor getValueDescriptor() { return getDescriptor().getValues().get(ordinal()); } public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); } public static final Descriptors.EnumDescriptor getDescriptor() { return DescriptorProtos.FileOptions.getDescriptor().getEnumTypes().get(0); } OptimizeMode(int value) { this.value = value; } } public boolean hasJavaPackage() { return ((this.bitField0_ & 0x1) != 0); } public String getJavaPackage() { Object ref = this.javaPackage_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.javaPackage_ = s;  return s; } public ByteString getJavaPackageBytes() { Object ref = this.javaPackage_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.javaPackage_ = b; return b; }  return (ByteString)ref; } public boolean hasJavaOuterClassname() { return ((this.bitField0_ & 0x2) != 0); } public String getJavaOuterClassname() { Object ref = this.javaOuterClassname_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.javaOuterClassname_ = s;  return s; } public ByteString getJavaOuterClassnameBytes() { Object ref = this.javaOuterClassname_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.javaOuterClassname_ = b; return b; }  return (ByteString)ref; } public boolean hasJavaMultipleFiles() { return ((this.bitField0_ & 0x4) != 0); } public boolean getJavaMultipleFiles() { return this.javaMultipleFiles_; } @Deprecated public boolean hasJavaGenerateEqualsAndHash() { return ((this.bitField0_ & 0x8) != 0); } @Deprecated public boolean getJavaGenerateEqualsAndHash() { return this.javaGenerateEqualsAndHash_; } public boolean hasJavaStringCheckUtf8() { return ((this.bitField0_ & 0x10) != 0); } public boolean getJavaStringCheckUtf8() { return this.javaStringCheckUtf8_; } public boolean hasOptimizeFor() { return ((this.bitField0_ & 0x20) != 0); } public OptimizeMode getOptimizeFor() { OptimizeMode result = OptimizeMode.valueOf(this.optimizeFor_); return (result == null) ? OptimizeMode.SPEED : result; } public boolean hasGoPackage() { return ((this.bitField0_ & 0x40) != 0); } public String getGoPackage() { Object ref = this.goPackage_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.goPackage_ = s;  return s; } public ByteString getGoPackageBytes() { Object ref = this.goPackage_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.goPackage_ = b; return b; }  return (ByteString)ref; } public boolean hasCcGenericServices() { return ((this.bitField0_ & 0x80) != 0); } public boolean getCcGenericServices() { return this.ccGenericServices_; } public boolean hasJavaGenericServices() { return ((this.bitField0_ & 0x100) != 0); } public boolean getJavaGenericServices() { return this.javaGenericServices_; } public boolean hasPyGenericServices() { return ((this.bitField0_ & 0x200) != 0); } public boolean getPyGenericServices() { return this.pyGenericServices_; } public boolean hasPhpGenericServices() { return ((this.bitField0_ & 0x400) != 0); } public boolean getPhpGenericServices() { return this.phpGenericServices_; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x800) != 0); } public boolean getDeprecated() { return this.deprecated_; } public boolean hasCcEnableArenas() { return ((this.bitField0_ & 0x1000) != 0); } public boolean getCcEnableArenas() { return this.ccEnableArenas_; } public boolean hasObjcClassPrefix() { return ((this.bitField0_ & 0x2000) != 0); } public String getObjcClassPrefix() { Object ref = this.objcClassPrefix_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.objcClassPrefix_ = s;  return s; } public ByteString getObjcClassPrefixBytes() { Object ref = this.objcClassPrefix_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.objcClassPrefix_ = b; return b; }  return (ByteString)ref; } public boolean hasCsharpNamespace() { return ((this.bitField0_ & 0x4000) != 0); } public String getCsharpNamespace() { Object ref = this.csharpNamespace_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.csharpNamespace_ = s;  return s; } public ByteString getCsharpNamespaceBytes() { Object ref = this.csharpNamespace_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.csharpNamespace_ = b; return b; }  return (ByteString)ref; } public boolean hasSwiftPrefix() { return ((this.bitField0_ & 0x8000) != 0); } public String getSwiftPrefix() { Object ref = this.swiftPrefix_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.swiftPrefix_ = s;  return s; } public ByteString getSwiftPrefixBytes() { Object ref = this.swiftPrefix_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.swiftPrefix_ = b; return b; }  return (ByteString)ref; } public boolean hasPhpClassPrefix() { return ((this.bitField0_ & 0x10000) != 0); } public String getPhpClassPrefix() { Object ref = this.phpClassPrefix_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.phpClassPrefix_ = s;  return s; } public ByteString getPhpClassPrefixBytes() { Object ref = this.phpClassPrefix_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.phpClassPrefix_ = b; return b; }  return (ByteString)ref; } public boolean hasPhpNamespace() { return ((this.bitField0_ & 0x20000) != 0); } public String getPhpNamespace() { Object ref = this.phpNamespace_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.phpNamespace_ = s;  return s; } public ByteString getPhpNamespaceBytes() { Object ref = this.phpNamespace_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.phpNamespace_ = b; return b; }  return (ByteString)ref; } public boolean hasPhpMetadataNamespace() { return ((this.bitField0_ & 0x40000) != 0); } public String getPhpMetadataNamespace() { Object ref = this.phpMetadataNamespace_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.phpMetadataNamespace_ = s;  return s; } public ByteString getPhpMetadataNamespaceBytes() { Object ref = this.phpMetadataNamespace_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.phpMetadataNamespace_ = b; return b; }  return (ByteString)ref; } public boolean hasRubyPackage() { return ((this.bitField0_ & 0x80000) != 0); } public String getRubyPackage() { Object ref = this.rubyPackage_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.rubyPackage_ = s;  return s; } public ByteString getRubyPackageBytes() { Object ref = this.rubyPackage_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.rubyPackage_ = b; return b; }  return (ByteString)ref; } public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); } public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); } public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 23085 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 23086 */       if (isInitialized == 1) return true; 
/* 23087 */       if (isInitialized == 0) return false;
/*       */       
/* 23089 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 23090 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 23091 */           this.memoizedIsInitialized = 0;
/* 23092 */           return false;
/*       */         } 
/*       */       } 
/* 23095 */       if (!extensionsAreInitialized()) {
/* 23096 */         this.memoizedIsInitialized = 0;
/* 23097 */         return false;
/*       */       } 
/* 23099 */       this.memoizedIsInitialized = 1;
/* 23100 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 23108 */       GeneratedMessageV3.ExtendableMessage<FileOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 23109 */       if ((this.bitField0_ & 0x1) != 0) {
/* 23110 */         GeneratedMessageV3.writeString(output, 1, this.javaPackage_);
/*       */       }
/* 23112 */       if ((this.bitField0_ & 0x2) != 0) {
/* 23113 */         GeneratedMessageV3.writeString(output, 8, this.javaOuterClassname_);
/*       */       }
/* 23115 */       if ((this.bitField0_ & 0x20) != 0) {
/* 23116 */         output.writeEnum(9, this.optimizeFor_);
/*       */       }
/* 23118 */       if ((this.bitField0_ & 0x4) != 0) {
/* 23119 */         output.writeBool(10, this.javaMultipleFiles_);
/*       */       }
/* 23121 */       if ((this.bitField0_ & 0x40) != 0) {
/* 23122 */         GeneratedMessageV3.writeString(output, 11, this.goPackage_);
/*       */       }
/* 23124 */       if ((this.bitField0_ & 0x80) != 0) {
/* 23125 */         output.writeBool(16, this.ccGenericServices_);
/*       */       }
/* 23127 */       if ((this.bitField0_ & 0x100) != 0) {
/* 23128 */         output.writeBool(17, this.javaGenericServices_);
/*       */       }
/* 23130 */       if ((this.bitField0_ & 0x200) != 0) {
/* 23131 */         output.writeBool(18, this.pyGenericServices_);
/*       */       }
/* 23133 */       if ((this.bitField0_ & 0x8) != 0) {
/* 23134 */         output.writeBool(20, this.javaGenerateEqualsAndHash_);
/*       */       }
/* 23136 */       if ((this.bitField0_ & 0x800) != 0) {
/* 23137 */         output.writeBool(23, this.deprecated_);
/*       */       }
/* 23139 */       if ((this.bitField0_ & 0x10) != 0) {
/* 23140 */         output.writeBool(27, this.javaStringCheckUtf8_);
/*       */       }
/* 23142 */       if ((this.bitField0_ & 0x1000) != 0) {
/* 23143 */         output.writeBool(31, this.ccEnableArenas_);
/*       */       }
/* 23145 */       if ((this.bitField0_ & 0x2000) != 0) {
/* 23146 */         GeneratedMessageV3.writeString(output, 36, this.objcClassPrefix_);
/*       */       }
/* 23148 */       if ((this.bitField0_ & 0x4000) != 0) {
/* 23149 */         GeneratedMessageV3.writeString(output, 37, this.csharpNamespace_);
/*       */       }
/* 23151 */       if ((this.bitField0_ & 0x8000) != 0) {
/* 23152 */         GeneratedMessageV3.writeString(output, 39, this.swiftPrefix_);
/*       */       }
/* 23154 */       if ((this.bitField0_ & 0x10000) != 0) {
/* 23155 */         GeneratedMessageV3.writeString(output, 40, this.phpClassPrefix_);
/*       */       }
/* 23157 */       if ((this.bitField0_ & 0x20000) != 0) {
/* 23158 */         GeneratedMessageV3.writeString(output, 41, this.phpNamespace_);
/*       */       }
/* 23160 */       if ((this.bitField0_ & 0x400) != 0) {
/* 23161 */         output.writeBool(42, this.phpGenericServices_);
/*       */       }
/* 23163 */       if ((this.bitField0_ & 0x40000) != 0) {
/* 23164 */         GeneratedMessageV3.writeString(output, 44, this.phpMetadataNamespace_);
/*       */       }
/* 23166 */       if ((this.bitField0_ & 0x80000) != 0) {
/* 23167 */         GeneratedMessageV3.writeString(output, 45, this.rubyPackage_);
/*       */       }
/* 23169 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 23170 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 23172 */       extensionWriter.writeUntil(536870912, output);
/* 23173 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 23178 */       int size = this.memoizedSize;
/* 23179 */       if (size != -1) return size;
/*       */       
/* 23181 */       size = 0;
/* 23182 */       if ((this.bitField0_ & 0x1) != 0) {
/* 23183 */         size += GeneratedMessageV3.computeStringSize(1, this.javaPackage_);
/*       */       }
/* 23185 */       if ((this.bitField0_ & 0x2) != 0) {
/* 23186 */         size += GeneratedMessageV3.computeStringSize(8, this.javaOuterClassname_);
/*       */       }
/* 23188 */       if ((this.bitField0_ & 0x20) != 0) {
/* 23189 */         size += 
/* 23190 */           CodedOutputStream.computeEnumSize(9, this.optimizeFor_);
/*       */       }
/* 23192 */       if ((this.bitField0_ & 0x4) != 0) {
/* 23193 */         size += 
/* 23194 */           CodedOutputStream.computeBoolSize(10, this.javaMultipleFiles_);
/*       */       }
/* 23196 */       if ((this.bitField0_ & 0x40) != 0) {
/* 23197 */         size += GeneratedMessageV3.computeStringSize(11, this.goPackage_);
/*       */       }
/* 23199 */       if ((this.bitField0_ & 0x80) != 0) {
/* 23200 */         size += 
/* 23201 */           CodedOutputStream.computeBoolSize(16, this.ccGenericServices_);
/*       */       }
/* 23203 */       if ((this.bitField0_ & 0x100) != 0) {
/* 23204 */         size += 
/* 23205 */           CodedOutputStream.computeBoolSize(17, this.javaGenericServices_);
/*       */       }
/* 23207 */       if ((this.bitField0_ & 0x200) != 0) {
/* 23208 */         size += 
/* 23209 */           CodedOutputStream.computeBoolSize(18, this.pyGenericServices_);
/*       */       }
/* 23211 */       if ((this.bitField0_ & 0x8) != 0) {
/* 23212 */         size += 
/* 23213 */           CodedOutputStream.computeBoolSize(20, this.javaGenerateEqualsAndHash_);
/*       */       }
/* 23215 */       if ((this.bitField0_ & 0x800) != 0) {
/* 23216 */         size += 
/* 23217 */           CodedOutputStream.computeBoolSize(23, this.deprecated_);
/*       */       }
/* 23219 */       if ((this.bitField0_ & 0x10) != 0) {
/* 23220 */         size += 
/* 23221 */           CodedOutputStream.computeBoolSize(27, this.javaStringCheckUtf8_);
/*       */       }
/* 23223 */       if ((this.bitField0_ & 0x1000) != 0) {
/* 23224 */         size += 
/* 23225 */           CodedOutputStream.computeBoolSize(31, this.ccEnableArenas_);
/*       */       }
/* 23227 */       if ((this.bitField0_ & 0x2000) != 0) {
/* 23228 */         size += GeneratedMessageV3.computeStringSize(36, this.objcClassPrefix_);
/*       */       }
/* 23230 */       if ((this.bitField0_ & 0x4000) != 0) {
/* 23231 */         size += GeneratedMessageV3.computeStringSize(37, this.csharpNamespace_);
/*       */       }
/* 23233 */       if ((this.bitField0_ & 0x8000) != 0) {
/* 23234 */         size += GeneratedMessageV3.computeStringSize(39, this.swiftPrefix_);
/*       */       }
/* 23236 */       if ((this.bitField0_ & 0x10000) != 0) {
/* 23237 */         size += GeneratedMessageV3.computeStringSize(40, this.phpClassPrefix_);
/*       */       }
/* 23239 */       if ((this.bitField0_ & 0x20000) != 0) {
/* 23240 */         size += GeneratedMessageV3.computeStringSize(41, this.phpNamespace_);
/*       */       }
/* 23242 */       if ((this.bitField0_ & 0x400) != 0) {
/* 23243 */         size += 
/* 23244 */           CodedOutputStream.computeBoolSize(42, this.phpGenericServices_);
/*       */       }
/* 23246 */       if ((this.bitField0_ & 0x40000) != 0) {
/* 23247 */         size += GeneratedMessageV3.computeStringSize(44, this.phpMetadataNamespace_);
/*       */       }
/* 23249 */       if ((this.bitField0_ & 0x80000) != 0) {
/* 23250 */         size += GeneratedMessageV3.computeStringSize(45, this.rubyPackage_);
/*       */       }
/* 23252 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 23253 */         size += 
/* 23254 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 23256 */       size += extensionsSerializedSize();
/* 23257 */       size += this.unknownFields.getSerializedSize();
/* 23258 */       this.memoizedSize = size;
/* 23259 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 23264 */       if (obj == this) {
/* 23265 */         return true;
/*       */       }
/* 23267 */       if (!(obj instanceof FileOptions)) {
/* 23268 */         return super.equals(obj);
/*       */       }
/* 23270 */       FileOptions other = (FileOptions)obj;
/*       */       
/* 23272 */       if (hasJavaPackage() != other.hasJavaPackage()) return false; 
/* 23273 */       if (hasJavaPackage() && 
/*       */         
/* 23275 */         !getJavaPackage().equals(other.getJavaPackage())) return false;
/*       */       
/* 23277 */       if (hasJavaOuterClassname() != other.hasJavaOuterClassname()) return false; 
/* 23278 */       if (hasJavaOuterClassname() && 
/*       */         
/* 23280 */         !getJavaOuterClassname().equals(other.getJavaOuterClassname())) return false;
/*       */       
/* 23282 */       if (hasJavaMultipleFiles() != other.hasJavaMultipleFiles()) return false; 
/* 23283 */       if (hasJavaMultipleFiles() && 
/* 23284 */         getJavaMultipleFiles() != other
/* 23285 */         .getJavaMultipleFiles()) return false;
/*       */       
/* 23287 */       if (hasJavaGenerateEqualsAndHash() != other.hasJavaGenerateEqualsAndHash()) return false; 
/* 23288 */       if (hasJavaGenerateEqualsAndHash() && 
/* 23289 */         getJavaGenerateEqualsAndHash() != other
/* 23290 */         .getJavaGenerateEqualsAndHash()) return false;
/*       */       
/* 23292 */       if (hasJavaStringCheckUtf8() != other.hasJavaStringCheckUtf8()) return false; 
/* 23293 */       if (hasJavaStringCheckUtf8() && 
/* 23294 */         getJavaStringCheckUtf8() != other
/* 23295 */         .getJavaStringCheckUtf8()) return false;
/*       */       
/* 23297 */       if (hasOptimizeFor() != other.hasOptimizeFor()) return false; 
/* 23298 */       if (hasOptimizeFor() && 
/* 23299 */         this.optimizeFor_ != other.optimizeFor_) return false;
/*       */       
/* 23301 */       if (hasGoPackage() != other.hasGoPackage()) return false; 
/* 23302 */       if (hasGoPackage() && 
/*       */         
/* 23304 */         !getGoPackage().equals(other.getGoPackage())) return false;
/*       */       
/* 23306 */       if (hasCcGenericServices() != other.hasCcGenericServices()) return false; 
/* 23307 */       if (hasCcGenericServices() && 
/* 23308 */         getCcGenericServices() != other
/* 23309 */         .getCcGenericServices()) return false;
/*       */       
/* 23311 */       if (hasJavaGenericServices() != other.hasJavaGenericServices()) return false; 
/* 23312 */       if (hasJavaGenericServices() && 
/* 23313 */         getJavaGenericServices() != other
/* 23314 */         .getJavaGenericServices()) return false;
/*       */       
/* 23316 */       if (hasPyGenericServices() != other.hasPyGenericServices()) return false; 
/* 23317 */       if (hasPyGenericServices() && 
/* 23318 */         getPyGenericServices() != other
/* 23319 */         .getPyGenericServices()) return false;
/*       */       
/* 23321 */       if (hasPhpGenericServices() != other.hasPhpGenericServices()) return false; 
/* 23322 */       if (hasPhpGenericServices() && 
/* 23323 */         getPhpGenericServices() != other
/* 23324 */         .getPhpGenericServices()) return false;
/*       */       
/* 23326 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 23327 */       if (hasDeprecated() && 
/* 23328 */         getDeprecated() != other
/* 23329 */         .getDeprecated()) return false;
/*       */       
/* 23331 */       if (hasCcEnableArenas() != other.hasCcEnableArenas()) return false; 
/* 23332 */       if (hasCcEnableArenas() && 
/* 23333 */         getCcEnableArenas() != other
/* 23334 */         .getCcEnableArenas()) return false;
/*       */       
/* 23336 */       if (hasObjcClassPrefix() != other.hasObjcClassPrefix()) return false; 
/* 23337 */       if (hasObjcClassPrefix() && 
/*       */         
/* 23339 */         !getObjcClassPrefix().equals(other.getObjcClassPrefix())) return false;
/*       */       
/* 23341 */       if (hasCsharpNamespace() != other.hasCsharpNamespace()) return false; 
/* 23342 */       if (hasCsharpNamespace() && 
/*       */         
/* 23344 */         !getCsharpNamespace().equals(other.getCsharpNamespace())) return false;
/*       */       
/* 23346 */       if (hasSwiftPrefix() != other.hasSwiftPrefix()) return false; 
/* 23347 */       if (hasSwiftPrefix() && 
/*       */         
/* 23349 */         !getSwiftPrefix().equals(other.getSwiftPrefix())) return false;
/*       */       
/* 23351 */       if (hasPhpClassPrefix() != other.hasPhpClassPrefix()) return false; 
/* 23352 */       if (hasPhpClassPrefix() && 
/*       */         
/* 23354 */         !getPhpClassPrefix().equals(other.getPhpClassPrefix())) return false;
/*       */       
/* 23356 */       if (hasPhpNamespace() != other.hasPhpNamespace()) return false; 
/* 23357 */       if (hasPhpNamespace() && 
/*       */         
/* 23359 */         !getPhpNamespace().equals(other.getPhpNamespace())) return false;
/*       */       
/* 23361 */       if (hasPhpMetadataNamespace() != other.hasPhpMetadataNamespace()) return false; 
/* 23362 */       if (hasPhpMetadataNamespace() && 
/*       */         
/* 23364 */         !getPhpMetadataNamespace().equals(other.getPhpMetadataNamespace())) return false;
/*       */       
/* 23366 */       if (hasRubyPackage() != other.hasRubyPackage()) return false; 
/* 23367 */       if (hasRubyPackage() && 
/*       */         
/* 23369 */         !getRubyPackage().equals(other.getRubyPackage())) return false;
/*       */ 
/*       */       
/* 23372 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 23373 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 23374 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 23375 */         return false; 
/* 23376 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 23381 */       if (this.memoizedHashCode != 0) {
/* 23382 */         return this.memoizedHashCode;
/*       */       }
/* 23384 */       int hash = 41;
/* 23385 */       hash = 19 * hash + getDescriptor().hashCode();
/* 23386 */       if (hasJavaPackage()) {
/* 23387 */         hash = 37 * hash + 1;
/* 23388 */         hash = 53 * hash + getJavaPackage().hashCode();
/*       */       } 
/* 23390 */       if (hasJavaOuterClassname()) {
/* 23391 */         hash = 37 * hash + 8;
/* 23392 */         hash = 53 * hash + getJavaOuterClassname().hashCode();
/*       */       } 
/* 23394 */       if (hasJavaMultipleFiles()) {
/* 23395 */         hash = 37 * hash + 10;
/* 23396 */         hash = 53 * hash + Internal.hashBoolean(
/* 23397 */             getJavaMultipleFiles());
/*       */       } 
/* 23399 */       if (hasJavaGenerateEqualsAndHash()) {
/* 23400 */         hash = 37 * hash + 20;
/* 23401 */         hash = 53 * hash + Internal.hashBoolean(
/* 23402 */             getJavaGenerateEqualsAndHash());
/*       */       } 
/* 23404 */       if (hasJavaStringCheckUtf8()) {
/* 23405 */         hash = 37 * hash + 27;
/* 23406 */         hash = 53 * hash + Internal.hashBoolean(
/* 23407 */             getJavaStringCheckUtf8());
/*       */       } 
/* 23409 */       if (hasOptimizeFor()) {
/* 23410 */         hash = 37 * hash + 9;
/* 23411 */         hash = 53 * hash + this.optimizeFor_;
/*       */       } 
/* 23413 */       if (hasGoPackage()) {
/* 23414 */         hash = 37 * hash + 11;
/* 23415 */         hash = 53 * hash + getGoPackage().hashCode();
/*       */       } 
/* 23417 */       if (hasCcGenericServices()) {
/* 23418 */         hash = 37 * hash + 16;
/* 23419 */         hash = 53 * hash + Internal.hashBoolean(
/* 23420 */             getCcGenericServices());
/*       */       } 
/* 23422 */       if (hasJavaGenericServices()) {
/* 23423 */         hash = 37 * hash + 17;
/* 23424 */         hash = 53 * hash + Internal.hashBoolean(
/* 23425 */             getJavaGenericServices());
/*       */       } 
/* 23427 */       if (hasPyGenericServices()) {
/* 23428 */         hash = 37 * hash + 18;
/* 23429 */         hash = 53 * hash + Internal.hashBoolean(
/* 23430 */             getPyGenericServices());
/*       */       } 
/* 23432 */       if (hasPhpGenericServices()) {
/* 23433 */         hash = 37 * hash + 42;
/* 23434 */         hash = 53 * hash + Internal.hashBoolean(
/* 23435 */             getPhpGenericServices());
/*       */       } 
/* 23437 */       if (hasDeprecated()) {
/* 23438 */         hash = 37 * hash + 23;
/* 23439 */         hash = 53 * hash + Internal.hashBoolean(
/* 23440 */             getDeprecated());
/*       */       } 
/* 23442 */       if (hasCcEnableArenas()) {
/* 23443 */         hash = 37 * hash + 31;
/* 23444 */         hash = 53 * hash + Internal.hashBoolean(
/* 23445 */             getCcEnableArenas());
/*       */       } 
/* 23447 */       if (hasObjcClassPrefix()) {
/* 23448 */         hash = 37 * hash + 36;
/* 23449 */         hash = 53 * hash + getObjcClassPrefix().hashCode();
/*       */       } 
/* 23451 */       if (hasCsharpNamespace()) {
/* 23452 */         hash = 37 * hash + 37;
/* 23453 */         hash = 53 * hash + getCsharpNamespace().hashCode();
/*       */       } 
/* 23455 */       if (hasSwiftPrefix()) {
/* 23456 */         hash = 37 * hash + 39;
/* 23457 */         hash = 53 * hash + getSwiftPrefix().hashCode();
/*       */       } 
/* 23459 */       if (hasPhpClassPrefix()) {
/* 23460 */         hash = 37 * hash + 40;
/* 23461 */         hash = 53 * hash + getPhpClassPrefix().hashCode();
/*       */       } 
/* 23463 */       if (hasPhpNamespace()) {
/* 23464 */         hash = 37 * hash + 41;
/* 23465 */         hash = 53 * hash + getPhpNamespace().hashCode();
/*       */       } 
/* 23467 */       if (hasPhpMetadataNamespace()) {
/* 23468 */         hash = 37 * hash + 44;
/* 23469 */         hash = 53 * hash + getPhpMetadataNamespace().hashCode();
/*       */       } 
/* 23471 */       if (hasRubyPackage()) {
/* 23472 */         hash = 37 * hash + 45;
/* 23473 */         hash = 53 * hash + getRubyPackage().hashCode();
/*       */       } 
/* 23475 */       if (getUninterpretedOptionCount() > 0) {
/* 23476 */         hash = 37 * hash + 999;
/* 23477 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 23479 */       hash = hashFields(hash, getExtensionFields());
/* 23480 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 23481 */       this.memoizedHashCode = hash;
/* 23482 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 23488 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 23494 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 23499 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 23505 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 23509 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 23515 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileOptions parseFrom(InputStream input) throws IOException {
/* 23519 */       return 
/* 23520 */         GeneratedMessageV3.<FileOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 23526 */       return 
/* 23527 */         GeneratedMessageV3.<FileOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FileOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 23531 */       return 
/* 23532 */         GeneratedMessageV3.<FileOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 23538 */       return 
/* 23539 */         GeneratedMessageV3.<FileOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(CodedInputStream input) throws IOException {
/* 23544 */       return 
/* 23545 */         GeneratedMessageV3.<FileOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FileOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 23551 */       return 
/* 23552 */         GeneratedMessageV3.<FileOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 23556 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 23558 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FileOptions prototype) {
/* 23561 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 23565 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 23566 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 23572 */       Builder builder = new Builder(parent);
/* 23573 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.ExtendableBuilder<FileOptions, Builder> implements DescriptorProtos.FileOptionsOrBuilder { private int bitField0_; private Object javaPackage_; private Object javaOuterClassname_; private boolean javaMultipleFiles_; private boolean javaGenerateEqualsAndHash_; private boolean javaStringCheckUtf8_; private int optimizeFor_; private Object goPackage_; private boolean ccGenericServices_; private boolean javaGenericServices_; private boolean pyGenericServices_; private boolean phpGenericServices_; private boolean deprecated_; private boolean ccEnableArenas_; private Object objcClassPrefix_; private Object csharpNamespace_;
/*       */       private Object swiftPrefix_;
/*       */       private Object phpClassPrefix_;
/*       */       private Object phpNamespace_;
/*       */       private Object phpMetadataNamespace_;
/*       */       private Object rubyPackage_;
/*       */       private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 23585 */         return DescriptorProtos.internal_static_google_protobuf_FileOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 23591 */         return DescriptorProtos.internal_static_google_protobuf_FileOptions_fieldAccessorTable
/* 23592 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.FileOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 23999 */         this.javaPackage_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 24125 */         this.javaOuterClassname_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 24456 */         this.optimizeFor_ = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 24498 */         this.goPackage_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 24948 */         this.objcClassPrefix_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25062 */         this.csharpNamespace_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25170 */         this.swiftPrefix_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25296 */         this.phpClassPrefix_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25410 */         this.phpNamespace_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25530 */         this.phpMetadataNamespace_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25650 */         this.rubyPackage_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 25770 */         this
/* 25771 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.javaPackage_ = ""; this.javaOuterClassname_ = ""; this.optimizeFor_ = 1; this.goPackage_ = ""; this.objcClassPrefix_ = ""; this.csharpNamespace_ = ""; this.swiftPrefix_ = ""; this.phpClassPrefix_ = ""; this.phpNamespace_ = ""; this.phpMetadataNamespace_ = ""; this.rubyPackage_ = ""; this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.javaPackage_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.javaOuterClassname_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.javaMultipleFiles_ = false; this.bitField0_ &= 0xFFFFFFFB; this.javaGenerateEqualsAndHash_ = false; this.bitField0_ &= 0xFFFFFFF7; this.javaStringCheckUtf8_ = false; this.bitField0_ &= 0xFFFFFFEF; this.optimizeFor_ = 1; this.bitField0_ &= 0xFFFFFFDF; this.goPackage_ = ""; this.bitField0_ &= 0xFFFFFFBF; this.ccGenericServices_ = false; this.bitField0_ &= 0xFFFFFF7F; this.javaGenericServices_ = false; this.bitField0_ &= 0xFFFFFEFF; this.pyGenericServices_ = false; this.bitField0_ &= 0xFFFFFDFF; this.phpGenericServices_ = false; this.bitField0_ &= 0xFFFFFBFF; this.deprecated_ = false; this.bitField0_ &= 0xFFFFF7FF; this.ccEnableArenas_ = false; this.bitField0_ &= 0xFFFFEFFF; this.objcClassPrefix_ = ""; this.bitField0_ &= 0xFFFFDFFF; this.csharpNamespace_ = ""; this.bitField0_ &= 0xFFFFBFFF; this.swiftPrefix_ = ""; this.bitField0_ &= 0xFFFF7FFF; this.phpClassPrefix_ = ""; this.bitField0_ &= 0xFFFEFFFF; this.phpNamespace_ = ""; this.bitField0_ &= 0xFFFDFFFF; this.phpMetadataNamespace_ = ""; this.bitField0_ &= 0xFFFBFFFF; this.rubyPackage_ = ""; this.bitField0_ &= 0xFFF7FFFF; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFEFFFFF; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_FileOptions_descriptor; } public DescriptorProtos.FileOptions getDefaultInstanceForType() { return DescriptorProtos.FileOptions.getDefaultInstance(); } public DescriptorProtos.FileOptions build() { DescriptorProtos.FileOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.FileOptions buildPartial() { DescriptorProtos.FileOptions result = new DescriptorProtos.FileOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.javaPackage_ = this.javaPackage_; if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.javaOuterClassname_ = this.javaOuterClassname_; if ((from_bitField0_ & 0x4) != 0) { result.javaMultipleFiles_ = this.javaMultipleFiles_; to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x8) != 0) { result.javaGenerateEqualsAndHash_ = this.javaGenerateEqualsAndHash_; to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x10) != 0) { result.javaStringCheckUtf8_ = this.javaStringCheckUtf8_; to_bitField0_ |= 0x10; }  if ((from_bitField0_ & 0x20) != 0) to_bitField0_ |= 0x20;  result.optimizeFor_ = this.optimizeFor_; if ((from_bitField0_ & 0x40) != 0) to_bitField0_ |= 0x40;  result.goPackage_ = this.goPackage_; if ((from_bitField0_ & 0x80) != 0) { result.ccGenericServices_ = this.ccGenericServices_; to_bitField0_ |= 0x80; }  if ((from_bitField0_ & 0x100) != 0) { result.javaGenericServices_ = this.javaGenericServices_; to_bitField0_ |= 0x100; }  if ((from_bitField0_ & 0x200) != 0) { result.pyGenericServices_ = this.pyGenericServices_; to_bitField0_ |= 0x200; }  if ((from_bitField0_ & 0x400) != 0) { result.phpGenericServices_ = this.phpGenericServices_; to_bitField0_ |= 0x400; }  if ((from_bitField0_ & 0x800) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x800; }  if ((from_bitField0_ & 0x1000) != 0) { result.ccEnableArenas_ = this.ccEnableArenas_; to_bitField0_ |= 0x1000; }  if ((from_bitField0_ & 0x2000) != 0) to_bitField0_ |= 0x2000;  result.objcClassPrefix_ = this.objcClassPrefix_; if ((from_bitField0_ & 0x4000) != 0) to_bitField0_ |= 0x4000;  result.csharpNamespace_ = this.csharpNamespace_; if ((from_bitField0_ & 0x8000) != 0) to_bitField0_ |= 0x8000;  result.swiftPrefix_ = this.swiftPrefix_; if ((from_bitField0_ & 0x10000) != 0) to_bitField0_ |= 0x10000;  result.phpClassPrefix_ = this.phpClassPrefix_; if ((from_bitField0_ & 0x20000) != 0) to_bitField0_ |= 0x20000;  result.phpNamespace_ = this.phpNamespace_; if ((from_bitField0_ & 0x40000) != 0) to_bitField0_ |= 0x40000;  result.phpMetadataNamespace_ = this.phpMetadataNamespace_; if ((from_bitField0_ & 0x80000) != 0) to_bitField0_ |= 0x80000;  result.rubyPackage_ = this.rubyPackage_; if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x100000) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFEFFFFF; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.FileOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.FileOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.FileOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.FileOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.FileOptions) return mergeFrom((DescriptorProtos.FileOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.FileOptions other) { if (other == DescriptorProtos.FileOptions.getDefaultInstance()) return this;  if (other.hasJavaPackage()) { this.bitField0_ |= 0x1; this.javaPackage_ = other.javaPackage_; onChanged(); }  if (other.hasJavaOuterClassname()) { this.bitField0_ |= 0x2; this.javaOuterClassname_ = other.javaOuterClassname_; onChanged(); }  if (other.hasJavaMultipleFiles()) setJavaMultipleFiles(other.getJavaMultipleFiles());  if (other.hasJavaGenerateEqualsAndHash()) setJavaGenerateEqualsAndHash(other.getJavaGenerateEqualsAndHash());  if (other.hasJavaStringCheckUtf8()) setJavaStringCheckUtf8(other.getJavaStringCheckUtf8());  if (other.hasOptimizeFor()) setOptimizeFor(other.getOptimizeFor());  if (other.hasGoPackage()) { this.bitField0_ |= 0x40; this.goPackage_ = other.goPackage_; onChanged(); }  if (other.hasCcGenericServices()) setCcGenericServices(other.getCcGenericServices());  if (other.hasJavaGenericServices()) setJavaGenericServices(other.getJavaGenericServices());  if (other.hasPyGenericServices()) setPyGenericServices(other.getPyGenericServices());  if (other.hasPhpGenericServices()) setPhpGenericServices(other.getPhpGenericServices());  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (other.hasCcEnableArenas()) setCcEnableArenas(other.getCcEnableArenas());  if (other.hasObjcClassPrefix()) { this.bitField0_ |= 0x2000; this.objcClassPrefix_ = other.objcClassPrefix_; onChanged(); }  if (other.hasCsharpNamespace()) { this.bitField0_ |= 0x4000; this.csharpNamespace_ = other.csharpNamespace_; onChanged(); }  if (other.hasSwiftPrefix()) { this.bitField0_ |= 0x8000; this.swiftPrefix_ = other.swiftPrefix_; onChanged(); }  if (other.hasPhpClassPrefix()) { this.bitField0_ |= 0x10000; this.phpClassPrefix_ = other.phpClassPrefix_; onChanged(); }  if (other.hasPhpNamespace()) { this.bitField0_ |= 0x20000; this.phpNamespace_ = other.phpNamespace_; onChanged(); }  if (other.hasPhpMetadataNamespace()) { this.bitField0_ |= 0x40000; this.phpMetadataNamespace_ = other.phpMetadataNamespace_; onChanged(); }  if (other.hasRubyPackage()) { this.bitField0_ |= 0x80000; this.rubyPackage_ = other.rubyPackage_; onChanged(); }  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFEFFFFF; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFEFFFFF; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.FileOptions parsedMessage = null; try { parsedMessage = DescriptorProtos.FileOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.FileOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasJavaPackage() { return ((this.bitField0_ & 0x1) != 0); } public String getJavaPackage() { Object ref = this.javaPackage_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.javaPackage_ = s;  return s; }  return (String)ref; } public ByteString getJavaPackageBytes() { Object ref = this.javaPackage_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.javaPackage_ = b; return b; }  return (ByteString)ref; } public Builder setJavaPackage(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.javaPackage_ = value; onChanged(); return this; } public Builder clearJavaPackage() { this.bitField0_ &= 0xFFFFFFFE; this.javaPackage_ = DescriptorProtos.FileOptions.getDefaultInstance().getJavaPackage(); onChanged(); return this; } public Builder setJavaPackageBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.javaPackage_ = value; onChanged(); return this; } public boolean hasJavaOuterClassname() { return ((this.bitField0_ & 0x2) != 0); } public String getJavaOuterClassname() { Object ref = this.javaOuterClassname_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.javaOuterClassname_ = s;  return s; }  return (String)ref; } public ByteString getJavaOuterClassnameBytes() { Object ref = this.javaOuterClassname_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.javaOuterClassname_ = b; return b; }  return (ByteString)ref; } public Builder setJavaOuterClassname(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.javaOuterClassname_ = value; onChanged(); return this; } public Builder clearJavaOuterClassname() { this.bitField0_ &= 0xFFFFFFFD; this.javaOuterClassname_ = DescriptorProtos.FileOptions.getDefaultInstance().getJavaOuterClassname(); onChanged(); return this; } public Builder setJavaOuterClassnameBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.javaOuterClassname_ = value; onChanged(); return this; } public boolean hasJavaMultipleFiles() { return ((this.bitField0_ & 0x4) != 0); } public boolean getJavaMultipleFiles() { return this.javaMultipleFiles_; } public Builder setJavaMultipleFiles(boolean value) { this.bitField0_ |= 0x4; this.javaMultipleFiles_ = value; onChanged(); return this; } public Builder clearJavaMultipleFiles() { this.bitField0_ &= 0xFFFFFFFB; this.javaMultipleFiles_ = false; onChanged(); return this; } @Deprecated public boolean hasJavaGenerateEqualsAndHash() { return ((this.bitField0_ & 0x8) != 0); } @Deprecated public boolean getJavaGenerateEqualsAndHash() { return this.javaGenerateEqualsAndHash_; } @Deprecated public Builder setJavaGenerateEqualsAndHash(boolean value) { this.bitField0_ |= 0x8; this.javaGenerateEqualsAndHash_ = value; onChanged(); return this; } @Deprecated public Builder clearJavaGenerateEqualsAndHash() { this.bitField0_ &= 0xFFFFFFF7; this.javaGenerateEqualsAndHash_ = false; onChanged(); return this; } public boolean hasJavaStringCheckUtf8() { return ((this.bitField0_ & 0x10) != 0); } public boolean getJavaStringCheckUtf8() { return this.javaStringCheckUtf8_; } public Builder setJavaStringCheckUtf8(boolean value) { this.bitField0_ |= 0x10; this.javaStringCheckUtf8_ = value; onChanged(); return this; } public Builder clearJavaStringCheckUtf8() { this.bitField0_ &= 0xFFFFFFEF; this.javaStringCheckUtf8_ = false; onChanged(); return this; } public boolean hasOptimizeFor() { return ((this.bitField0_ & 0x20) != 0); } public DescriptorProtos.FileOptions.OptimizeMode getOptimizeFor() { DescriptorProtos.FileOptions.OptimizeMode result = DescriptorProtos.FileOptions.OptimizeMode.valueOf(this.optimizeFor_); return (result == null) ? DescriptorProtos.FileOptions.OptimizeMode.SPEED : result; } public Builder setOptimizeFor(DescriptorProtos.FileOptions.OptimizeMode value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x20; this.optimizeFor_ = value.getNumber(); onChanged(); return this; } public Builder clearOptimizeFor() { this.bitField0_ &= 0xFFFFFFDF; this.optimizeFor_ = 1; onChanged(); return this; } public boolean hasGoPackage() { return ((this.bitField0_ & 0x40) != 0); } public String getGoPackage() { Object ref = this.goPackage_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.goPackage_ = s;  return s; }  return (String)ref; } public ByteString getGoPackageBytes() { Object ref = this.goPackage_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.goPackage_ = b; return b; }  return (ByteString)ref; } public Builder setGoPackage(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40; this.goPackage_ = value; onChanged(); return this; } public Builder clearGoPackage() { this.bitField0_ &= 0xFFFFFFBF; this.goPackage_ = DescriptorProtos.FileOptions.getDefaultInstance().getGoPackage(); onChanged(); return this; } public Builder setGoPackageBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40; this.goPackage_ = value; onChanged(); return this; } public boolean hasCcGenericServices() { return ((this.bitField0_ & 0x80) != 0); } public boolean getCcGenericServices() { return this.ccGenericServices_; } public Builder setCcGenericServices(boolean value) { this.bitField0_ |= 0x80; this.ccGenericServices_ = value; onChanged(); return this; } public Builder clearCcGenericServices() { this.bitField0_ &= 0xFFFFFF7F; this.ccGenericServices_ = false; onChanged(); return this; } public boolean hasJavaGenericServices() { return ((this.bitField0_ & 0x100) != 0); } public boolean getJavaGenericServices() { return this.javaGenericServices_; } public Builder setJavaGenericServices(boolean value) { this.bitField0_ |= 0x100; this.javaGenericServices_ = value; onChanged(); return this; } public Builder clearJavaGenericServices() { this.bitField0_ &= 0xFFFFFEFF; this.javaGenericServices_ = false; onChanged(); return this; } public boolean hasPyGenericServices() { return ((this.bitField0_ & 0x200) != 0); } public boolean getPyGenericServices() { return this.pyGenericServices_; } public Builder setPyGenericServices(boolean value) { this.bitField0_ |= 0x200; this.pyGenericServices_ = value; onChanged(); return this; } public Builder clearPyGenericServices() { this.bitField0_ &= 0xFFFFFDFF; this.pyGenericServices_ = false; onChanged(); return this; } public boolean hasPhpGenericServices() { return ((this.bitField0_ & 0x400) != 0); } public boolean getPhpGenericServices() { return this.phpGenericServices_; } public Builder setPhpGenericServices(boolean value) { this.bitField0_ |= 0x400; this.phpGenericServices_ = value; onChanged(); return this; } public Builder clearPhpGenericServices() { this.bitField0_ &= 0xFFFFFBFF; this.phpGenericServices_ = false; onChanged(); return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x800) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x800; this.deprecated_ = value; onChanged(); return this; } public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFF7FF; this.deprecated_ = false; onChanged(); return this; } public boolean hasCcEnableArenas() { return ((this.bitField0_ & 0x1000) != 0); } public boolean getCcEnableArenas() { return this.ccEnableArenas_; } public Builder setCcEnableArenas(boolean value) { this.bitField0_ |= 0x1000; this.ccEnableArenas_ = value; onChanged(); return this; } public Builder clearCcEnableArenas() { this.bitField0_ &= 0xFFFFEFFF; this.ccEnableArenas_ = false; onChanged(); return this; } public boolean hasObjcClassPrefix() { return ((this.bitField0_ & 0x2000) != 0); } public String getObjcClassPrefix() { Object ref = this.objcClassPrefix_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.objcClassPrefix_ = s;  return s; }  return (String)ref; } public ByteString getObjcClassPrefixBytes() { Object ref = this.objcClassPrefix_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.objcClassPrefix_ = b; return b; }  return (ByteString)ref; } public Builder setObjcClassPrefix(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2000; this.objcClassPrefix_ = value; onChanged(); return this; } public Builder clearObjcClassPrefix() { this.bitField0_ &= 0xFFFFDFFF; this.objcClassPrefix_ = DescriptorProtos.FileOptions.getDefaultInstance().getObjcClassPrefix(); onChanged(); return this; } public Builder setObjcClassPrefixBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2000; this.objcClassPrefix_ = value; onChanged(); return this; } public boolean hasCsharpNamespace() { return ((this.bitField0_ & 0x4000) != 0); } public String getCsharpNamespace() { Object ref = this.csharpNamespace_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.csharpNamespace_ = s;  return s; }  return (String)ref; } public ByteString getCsharpNamespaceBytes() { Object ref = this.csharpNamespace_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.csharpNamespace_ = b; return b; }  return (ByteString)ref; } public Builder setCsharpNamespace(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x4000; this.csharpNamespace_ = value; onChanged(); return this; } public Builder clearCsharpNamespace() { this.bitField0_ &= 0xFFFFBFFF; this.csharpNamespace_ = DescriptorProtos.FileOptions.getDefaultInstance().getCsharpNamespace(); onChanged(); return this; } public Builder setCsharpNamespaceBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x4000; this.csharpNamespace_ = value; onChanged(); return this; } public boolean hasSwiftPrefix() { return ((this.bitField0_ & 0x8000) != 0); } public String getSwiftPrefix() { Object ref = this.swiftPrefix_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.swiftPrefix_ = s;  return s; }  return (String)ref; } public ByteString getSwiftPrefixBytes() { Object ref = this.swiftPrefix_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.swiftPrefix_ = b; return b; }  return (ByteString)ref; } public Builder setSwiftPrefix(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x8000; this.swiftPrefix_ = value; onChanged(); return this; } public Builder clearSwiftPrefix() { this.bitField0_ &= 0xFFFF7FFF; this.swiftPrefix_ = DescriptorProtos.FileOptions.getDefaultInstance().getSwiftPrefix(); onChanged(); return this; } public Builder setSwiftPrefixBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x8000; this.swiftPrefix_ = value; onChanged(); return this; } public boolean hasPhpClassPrefix() { return ((this.bitField0_ & 0x10000) != 0); } public String getPhpClassPrefix() { Object ref = this.phpClassPrefix_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.phpClassPrefix_ = s;  return s; }  return (String)ref; } public ByteString getPhpClassPrefixBytes() { Object ref = this.phpClassPrefix_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.phpClassPrefix_ = b; return b; }  return (ByteString)ref; } public Builder setPhpClassPrefix(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x10000; this.phpClassPrefix_ = value; onChanged(); return this; } public Builder clearPhpClassPrefix() { this.bitField0_ &= 0xFFFEFFFF; this.phpClassPrefix_ = DescriptorProtos.FileOptions.getDefaultInstance().getPhpClassPrefix(); onChanged(); return this; } public Builder setPhpClassPrefixBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x10000; this.phpClassPrefix_ = value; onChanged(); return this; } public boolean hasPhpNamespace() { return ((this.bitField0_ & 0x20000) != 0); } public String getPhpNamespace() { Object ref = this.phpNamespace_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.phpNamespace_ = s;  return s; }  return (String)ref; } public ByteString getPhpNamespaceBytes() { Object ref = this.phpNamespace_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.phpNamespace_ = b; return b; }  return (ByteString)ref; } public Builder setPhpNamespace(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x20000; this.phpNamespace_ = value; onChanged(); return this; } public Builder clearPhpNamespace() { this.bitField0_ &= 0xFFFDFFFF; this.phpNamespace_ = DescriptorProtos.FileOptions.getDefaultInstance().getPhpNamespace(); onChanged(); return this; } public Builder setPhpNamespaceBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x20000; this.phpNamespace_ = value; onChanged(); return this; } public boolean hasPhpMetadataNamespace() { return ((this.bitField0_ & 0x40000) != 0); } public String getPhpMetadataNamespace() { Object ref = this.phpMetadataNamespace_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.phpMetadataNamespace_ = s;  return s; }  return (String)ref; } public ByteString getPhpMetadataNamespaceBytes() { Object ref = this.phpMetadataNamespace_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.phpMetadataNamespace_ = b; return b; }  return (ByteString)ref; } public Builder setPhpMetadataNamespace(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40000; this.phpMetadataNamespace_ = value; onChanged(); return this; } public Builder clearPhpMetadataNamespace() { this.bitField0_ &= 0xFFFBFFFF; this.phpMetadataNamespace_ = DescriptorProtos.FileOptions.getDefaultInstance().getPhpMetadataNamespace(); onChanged(); return this; } public Builder setPhpMetadataNamespaceBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x40000; this.phpMetadataNamespace_ = value; onChanged(); return this; } public boolean hasRubyPackage() { return ((this.bitField0_ & 0x80000) != 0); } public String getRubyPackage() { Object ref = this.rubyPackage_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.rubyPackage_ = s;  return s; }  return (String)ref; } public ByteString getRubyPackageBytes() { Object ref = this.rubyPackage_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.rubyPackage_ = b; return b; }  return (ByteString)ref; } public Builder setRubyPackage(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x80000; this.rubyPackage_ = value; onChanged(); return this; } public Builder clearRubyPackage() { this.bitField0_ &= 0xFFF7FFFF; this.rubyPackage_ = DescriptorProtos.FileOptions.getDefaultInstance().getRubyPackage(); onChanged(); return this; }
/*       */       public Builder setRubyPackageBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x80000; this.rubyPackage_ = value; onChanged(); return this; }
/* 25773 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x100000) == 0) {
/* 25774 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 25775 */           this.bitField0_ |= 0x100000;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
/* 25791 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 25792 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 25794 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 25806 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 25807 */           return this.uninterpretedOption_.size();
/*       */         }
/* 25809 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
/* 25821 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 25822 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 25824 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 25837 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 25838 */           if (value == null) {
/* 25839 */             throw new NullPointerException();
/*       */           }
/* 25841 */           ensureUninterpretedOptionIsMutable();
/* 25842 */           this.uninterpretedOption_.set(index, value);
/* 25843 */           onChanged();
/*       */         } else {
/* 25845 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 25847 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 25859 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 25860 */           ensureUninterpretedOptionIsMutable();
/* 25861 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 25862 */           onChanged();
/*       */         } else {
/* 25864 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 25866 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
/* 25877 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 25878 */           if (value == null) {
/* 25879 */             throw new NullPointerException();
/*       */           }
/* 25881 */           ensureUninterpretedOptionIsMutable();
/* 25882 */           this.uninterpretedOption_.add(value);
/* 25883 */           onChanged();
/*       */         } else {
/* 25885 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 25887 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 25899 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 25900 */           if (value == null) {
/* 25901 */             throw new NullPointerException();
/*       */           }
/* 25903 */           ensureUninterpretedOptionIsMutable();
/* 25904 */           this.uninterpretedOption_.add(index, value);
/* 25905 */           onChanged();
/*       */         } else {
/* 25907 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 25909 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 25921 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 25922 */           ensureUninterpretedOptionIsMutable();
/* 25923 */           this.uninterpretedOption_.add(builderForValue.build());
/* 25924 */           onChanged();
/*       */         } else {
/* 25926 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 25928 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 25940 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 25941 */           ensureUninterpretedOptionIsMutable();
/* 25942 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 25943 */           onChanged();
/*       */         } else {
/* 25945 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 25947 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
/* 25959 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 25960 */           ensureUninterpretedOptionIsMutable();
/* 25961 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 25963 */           onChanged();
/*       */         } else {
/* 25965 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 25967 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 25978 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 25979 */           this.uninterpretedOption_ = Collections.emptyList();
/* 25980 */           this.bitField0_ &= 0xFFEFFFFF;
/* 25981 */           onChanged();
/*       */         } else {
/* 25983 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 25985 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 25996 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 25997 */           ensureUninterpretedOptionIsMutable();
/* 25998 */           this.uninterpretedOption_.remove(index);
/* 25999 */           onChanged();
/*       */         } else {
/* 26001 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 26003 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 26015 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 26027 */         if (this.uninterpretedOptionBuilder_ == null)
/* 26028 */           return this.uninterpretedOption_.get(index); 
/* 26029 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 26042 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 26043 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 26045 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 26057 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 26058 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 26070 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 26071 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 26083 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 26088 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 26089 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 26094 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x100000) != 0), getParentForChildren(), isClean());
/* 26095 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 26097 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 26102 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 26108 */         return super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 26118 */     private static final FileOptions DEFAULT_INSTANCE = new FileOptions();
/*       */ 
/*       */     
/*       */     public static FileOptions getDefaultInstance() {
/* 26122 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 26126 */     public static final Parser<FileOptions> PARSER = new AbstractParser<FileOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.FileOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 26132 */           return new DescriptorProtos.FileOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FileOptions> parser() {
/* 26137 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FileOptions> getParserForType() {
/* 26142 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FileOptions getDefaultInstanceForType() {
/* 26147 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface MessageOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<MessageOptions>
/*       */   {
/*       */     boolean hasMessageSetWireFormat();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getMessageSetWireFormat();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasNoStandardDescriptorAccessor();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getNoStandardDescriptorAccessor();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasMapEntry();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getMapEntry();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class MessageOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<MessageOptions>
/*       */     implements MessageOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int MESSAGE_SET_WIRE_FORMAT_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean messageSetWireFormat_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int NO_STANDARD_DESCRIPTOR_ACCESSOR_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean noStandardDescriptorAccessor_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int MAP_ENTRY_FIELD_NUMBER = 7;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean mapEntry_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private MessageOptions(GeneratedMessageV3.ExtendableBuilder<MessageOptions, ?> builder)
/*       */     {
/* 26360 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 26689 */       this.memoizedIsInitialized = -1; } private MessageOptions() { this.memoizedIsInitialized = -1; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new MessageOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private MessageOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.messageSetWireFormat_ = input.readBool(); continue;case 16: this.bitField0_ |= 0x2; this.noStandardDescriptorAccessor_ = input.readBool(); continue;case 24: this.bitField0_ |= 0x4; this.deprecated_ = input.readBool(); continue;case 56: this.bitField0_ |= 0x8; this.mapEntry_ = input.readBool(); continue;case 7994: if ((mutable_bitField0_ & 0x10) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x10; }  this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x10) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_MessageOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_MessageOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)MessageOptions.class, (Class)Builder.class); } public boolean hasMessageSetWireFormat() { return ((this.bitField0_ & 0x1) != 0); } public boolean getMessageSetWireFormat() { return this.messageSetWireFormat_; } public boolean hasNoStandardDescriptorAccessor() { return ((this.bitField0_ & 0x2) != 0); } public boolean getNoStandardDescriptorAccessor() { return this.noStandardDescriptorAccessor_; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x4) != 0); } public boolean getDeprecated() { return this.deprecated_; } public boolean hasMapEntry() { return ((this.bitField0_ & 0x8) != 0); } public boolean getMapEntry() { return this.mapEntry_; } public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); }
/*       */     public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); }
/*       */     public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 26692 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 26693 */       if (isInitialized == 1) return true; 
/* 26694 */       if (isInitialized == 0) return false;
/*       */       
/* 26696 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 26697 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 26698 */           this.memoizedIsInitialized = 0;
/* 26699 */           return false;
/*       */         } 
/*       */       } 
/* 26702 */       if (!extensionsAreInitialized()) {
/* 26703 */         this.memoizedIsInitialized = 0;
/* 26704 */         return false;
/*       */       } 
/* 26706 */       this.memoizedIsInitialized = 1;
/* 26707 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 26715 */       GeneratedMessageV3.ExtendableMessage<MessageOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 26716 */       if ((this.bitField0_ & 0x1) != 0) {
/* 26717 */         output.writeBool(1, this.messageSetWireFormat_);
/*       */       }
/* 26719 */       if ((this.bitField0_ & 0x2) != 0) {
/* 26720 */         output.writeBool(2, this.noStandardDescriptorAccessor_);
/*       */       }
/* 26722 */       if ((this.bitField0_ & 0x4) != 0) {
/* 26723 */         output.writeBool(3, this.deprecated_);
/*       */       }
/* 26725 */       if ((this.bitField0_ & 0x8) != 0) {
/* 26726 */         output.writeBool(7, this.mapEntry_);
/*       */       }
/* 26728 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 26729 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 26731 */       extensionWriter.writeUntil(536870912, output);
/* 26732 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 26737 */       int size = this.memoizedSize;
/* 26738 */       if (size != -1) return size;
/*       */       
/* 26740 */       size = 0;
/* 26741 */       if ((this.bitField0_ & 0x1) != 0) {
/* 26742 */         size += 
/* 26743 */           CodedOutputStream.computeBoolSize(1, this.messageSetWireFormat_);
/*       */       }
/* 26745 */       if ((this.bitField0_ & 0x2) != 0) {
/* 26746 */         size += 
/* 26747 */           CodedOutputStream.computeBoolSize(2, this.noStandardDescriptorAccessor_);
/*       */       }
/* 26749 */       if ((this.bitField0_ & 0x4) != 0) {
/* 26750 */         size += 
/* 26751 */           CodedOutputStream.computeBoolSize(3, this.deprecated_);
/*       */       }
/* 26753 */       if ((this.bitField0_ & 0x8) != 0) {
/* 26754 */         size += 
/* 26755 */           CodedOutputStream.computeBoolSize(7, this.mapEntry_);
/*       */       }
/* 26757 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 26758 */         size += 
/* 26759 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 26761 */       size += extensionsSerializedSize();
/* 26762 */       size += this.unknownFields.getSerializedSize();
/* 26763 */       this.memoizedSize = size;
/* 26764 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 26769 */       if (obj == this) {
/* 26770 */         return true;
/*       */       }
/* 26772 */       if (!(obj instanceof MessageOptions)) {
/* 26773 */         return super.equals(obj);
/*       */       }
/* 26775 */       MessageOptions other = (MessageOptions)obj;
/*       */       
/* 26777 */       if (hasMessageSetWireFormat() != other.hasMessageSetWireFormat()) return false; 
/* 26778 */       if (hasMessageSetWireFormat() && 
/* 26779 */         getMessageSetWireFormat() != other
/* 26780 */         .getMessageSetWireFormat()) return false;
/*       */       
/* 26782 */       if (hasNoStandardDescriptorAccessor() != other.hasNoStandardDescriptorAccessor()) return false; 
/* 26783 */       if (hasNoStandardDescriptorAccessor() && 
/* 26784 */         getNoStandardDescriptorAccessor() != other
/* 26785 */         .getNoStandardDescriptorAccessor()) return false;
/*       */       
/* 26787 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 26788 */       if (hasDeprecated() && 
/* 26789 */         getDeprecated() != other
/* 26790 */         .getDeprecated()) return false;
/*       */       
/* 26792 */       if (hasMapEntry() != other.hasMapEntry()) return false; 
/* 26793 */       if (hasMapEntry() && 
/* 26794 */         getMapEntry() != other
/* 26795 */         .getMapEntry()) return false;
/*       */ 
/*       */       
/* 26798 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 26799 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 26800 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 26801 */         return false; 
/* 26802 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 26807 */       if (this.memoizedHashCode != 0) {
/* 26808 */         return this.memoizedHashCode;
/*       */       }
/* 26810 */       int hash = 41;
/* 26811 */       hash = 19 * hash + getDescriptor().hashCode();
/* 26812 */       if (hasMessageSetWireFormat()) {
/* 26813 */         hash = 37 * hash + 1;
/* 26814 */         hash = 53 * hash + Internal.hashBoolean(
/* 26815 */             getMessageSetWireFormat());
/*       */       } 
/* 26817 */       if (hasNoStandardDescriptorAccessor()) {
/* 26818 */         hash = 37 * hash + 2;
/* 26819 */         hash = 53 * hash + Internal.hashBoolean(
/* 26820 */             getNoStandardDescriptorAccessor());
/*       */       } 
/* 26822 */       if (hasDeprecated()) {
/* 26823 */         hash = 37 * hash + 3;
/* 26824 */         hash = 53 * hash + Internal.hashBoolean(
/* 26825 */             getDeprecated());
/*       */       } 
/* 26827 */       if (hasMapEntry()) {
/* 26828 */         hash = 37 * hash + 7;
/* 26829 */         hash = 53 * hash + Internal.hashBoolean(
/* 26830 */             getMapEntry());
/*       */       } 
/* 26832 */       if (getUninterpretedOptionCount() > 0) {
/* 26833 */         hash = 37 * hash + 999;
/* 26834 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 26836 */       hash = hashFields(hash, getExtensionFields());
/* 26837 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 26838 */       this.memoizedHashCode = hash;
/* 26839 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 26845 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 26851 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 26856 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 26862 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MessageOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 26866 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 26872 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MessageOptions parseFrom(InputStream input) throws IOException {
/* 26876 */       return 
/* 26877 */         GeneratedMessageV3.<MessageOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 26883 */       return 
/* 26884 */         GeneratedMessageV3.<MessageOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MessageOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 26888 */       return 
/* 26889 */         GeneratedMessageV3.<MessageOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 26895 */       return 
/* 26896 */         GeneratedMessageV3.<MessageOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(CodedInputStream input) throws IOException {
/* 26901 */       return 
/* 26902 */         GeneratedMessageV3.<MessageOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MessageOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 26908 */       return 
/* 26909 */         GeneratedMessageV3.<MessageOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 26913 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 26915 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(MessageOptions prototype) {
/* 26918 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 26922 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 26923 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 26929 */       Builder builder = new Builder(parent);
/* 26930 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder extends GeneratedMessageV3.ExtendableBuilder<MessageOptions, Builder> implements DescriptorProtos.MessageOptionsOrBuilder { private int bitField0_;
/*       */       private boolean messageSetWireFormat_;
/*       */       private boolean noStandardDescriptorAccessor_;
/*       */       private boolean deprecated_;
/*       */       private boolean mapEntry_;
/*       */       private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 26942 */         return DescriptorProtos.internal_static_google_protobuf_MessageOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 26948 */         return DescriptorProtos.internal_static_google_protobuf_MessageOptions_fieldAccessorTable
/* 26949 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.MessageOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 27548 */         this
/* 27549 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.messageSetWireFormat_ = false; this.bitField0_ &= 0xFFFFFFFE; this.noStandardDescriptorAccessor_ = false; this.bitField0_ &= 0xFFFFFFFD; this.deprecated_ = false; this.bitField0_ &= 0xFFFFFFFB; this.mapEntry_ = false; this.bitField0_ &= 0xFFFFFFF7; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFEF; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_MessageOptions_descriptor; } public DescriptorProtos.MessageOptions getDefaultInstanceForType() { return DescriptorProtos.MessageOptions.getDefaultInstance(); } public DescriptorProtos.MessageOptions build() { DescriptorProtos.MessageOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.MessageOptions buildPartial() { DescriptorProtos.MessageOptions result = new DescriptorProtos.MessageOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.messageSetWireFormat_ = this.messageSetWireFormat_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) { result.noStandardDescriptorAccessor_ = this.noStandardDescriptorAccessor_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x4) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x8) != 0) { result.mapEntry_ = this.mapEntry_; to_bitField0_ |= 0x8; }  if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x10) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFEF; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.MessageOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.MessageOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.MessageOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.MessageOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.MessageOptions) return mergeFrom((DescriptorProtos.MessageOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.MessageOptions other) { if (other == DescriptorProtos.MessageOptions.getDefaultInstance()) return this;  if (other.hasMessageSetWireFormat()) setMessageSetWireFormat(other.getMessageSetWireFormat());  if (other.hasNoStandardDescriptorAccessor()) setNoStandardDescriptorAccessor(other.getNoStandardDescriptorAccessor());  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (other.hasMapEntry()) setMapEntry(other.getMapEntry());  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFEF; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFEF; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.MessageOptions parsedMessage = null; try { parsedMessage = DescriptorProtos.MessageOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.MessageOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasMessageSetWireFormat() { return ((this.bitField0_ & 0x1) != 0); } public boolean getMessageSetWireFormat() { return this.messageSetWireFormat_; } public Builder setMessageSetWireFormat(boolean value) { this.bitField0_ |= 0x1; this.messageSetWireFormat_ = value; onChanged(); return this; } public Builder clearMessageSetWireFormat() { this.bitField0_ &= 0xFFFFFFFE; this.messageSetWireFormat_ = false; onChanged(); return this; } public boolean hasNoStandardDescriptorAccessor() { return ((this.bitField0_ & 0x2) != 0); } public boolean getNoStandardDescriptorAccessor() { return this.noStandardDescriptorAccessor_; } public Builder setNoStandardDescriptorAccessor(boolean value) { this.bitField0_ |= 0x2; this.noStandardDescriptorAccessor_ = value; onChanged(); return this; } public Builder clearNoStandardDescriptorAccessor() { this.bitField0_ &= 0xFFFFFFFD; this.noStandardDescriptorAccessor_ = false; onChanged(); return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x4) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x4; this.deprecated_ = value; onChanged(); return this; } public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFFFFB; this.deprecated_ = false; onChanged(); return this; } public boolean hasMapEntry() { return ((this.bitField0_ & 0x8) != 0); } public boolean getMapEntry() { return this.mapEntry_; } public Builder setMapEntry(boolean value) { this.bitField0_ |= 0x8; this.mapEntry_ = value; onChanged(); return this; }
/*       */       public Builder clearMapEntry() { this.bitField0_ &= 0xFFFFFFF7; this.mapEntry_ = false; onChanged(); return this; }
/* 27551 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x10) == 0) {
/* 27552 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 27553 */           this.bitField0_ |= 0x10;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
/* 27568 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 27569 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 27571 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 27582 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 27583 */           return this.uninterpretedOption_.size();
/*       */         }
/* 27585 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
/* 27596 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 27597 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 27599 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 27611 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 27612 */           if (value == null) {
/* 27613 */             throw new NullPointerException();
/*       */           }
/* 27615 */           ensureUninterpretedOptionIsMutable();
/* 27616 */           this.uninterpretedOption_.set(index, value);
/* 27617 */           onChanged();
/*       */         } else {
/* 27619 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 27621 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 27632 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 27633 */           ensureUninterpretedOptionIsMutable();
/* 27634 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 27635 */           onChanged();
/*       */         } else {
/* 27637 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 27639 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
/* 27649 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 27650 */           if (value == null) {
/* 27651 */             throw new NullPointerException();
/*       */           }
/* 27653 */           ensureUninterpretedOptionIsMutable();
/* 27654 */           this.uninterpretedOption_.add(value);
/* 27655 */           onChanged();
/*       */         } else {
/* 27657 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 27659 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 27670 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 27671 */           if (value == null) {
/* 27672 */             throw new NullPointerException();
/*       */           }
/* 27674 */           ensureUninterpretedOptionIsMutable();
/* 27675 */           this.uninterpretedOption_.add(index, value);
/* 27676 */           onChanged();
/*       */         } else {
/* 27678 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 27680 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 27691 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 27692 */           ensureUninterpretedOptionIsMutable();
/* 27693 */           this.uninterpretedOption_.add(builderForValue.build());
/* 27694 */           onChanged();
/*       */         } else {
/* 27696 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 27698 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 27709 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 27710 */           ensureUninterpretedOptionIsMutable();
/* 27711 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 27712 */           onChanged();
/*       */         } else {
/* 27714 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 27716 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
/* 27727 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 27728 */           ensureUninterpretedOptionIsMutable();
/* 27729 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 27731 */           onChanged();
/*       */         } else {
/* 27733 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 27735 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 27745 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 27746 */           this.uninterpretedOption_ = Collections.emptyList();
/* 27747 */           this.bitField0_ &= 0xFFFFFFEF;
/* 27748 */           onChanged();
/*       */         } else {
/* 27750 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 27752 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 27762 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 27763 */           ensureUninterpretedOptionIsMutable();
/* 27764 */           this.uninterpretedOption_.remove(index);
/* 27765 */           onChanged();
/*       */         } else {
/* 27767 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 27769 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 27780 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 27791 */         if (this.uninterpretedOptionBuilder_ == null)
/* 27792 */           return this.uninterpretedOption_.get(index); 
/* 27793 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 27805 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 27806 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 27808 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 27819 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 27820 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 27831 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 27832 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 27843 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 27848 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 27849 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 27854 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x10) != 0), getParentForChildren(), isClean());
/* 27855 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 27857 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 27862 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 27868 */         return super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 27878 */     private static final MessageOptions DEFAULT_INSTANCE = new MessageOptions();
/*       */ 
/*       */     
/*       */     public static MessageOptions getDefaultInstance() {
/* 27882 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 27886 */     public static final Parser<MessageOptions> PARSER = new AbstractParser<MessageOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.MessageOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 27892 */           return new DescriptorProtos.MessageOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<MessageOptions> parser() {
/* 27897 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<MessageOptions> getParserForType() {
/* 27902 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public MessageOptions getDefaultInstanceForType() {
/* 27907 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface FieldOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<FieldOptions>
/*       */   {
/*       */     boolean hasCtype();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FieldOptions.CType getCtype();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPacked();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getPacked();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasJstype();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.FieldOptions.JSType getJstype();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasLazy();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getLazy();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasWeak();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getWeak();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class FieldOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<FieldOptions>
/*       */     implements FieldOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int CTYPE_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int ctype_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int PACKED_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean packed_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int JSTYPE_FIELD_NUMBER = 6;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int jstype_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LAZY_FIELD_NUMBER = 5;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean lazy_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 3;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int WEAK_FIELD_NUMBER = 10;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean weak_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private FieldOptions(GeneratedMessageV3.ExtendableBuilder<FieldOptions, ?> builder)
/*       */     {
/* 28170 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 28833 */       this.memoizedIsInitialized = -1; } private FieldOptions() { this.memoizedIsInitialized = -1; this.ctype_ = 0; this.jstype_ = 0; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new FieldOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private FieldOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue; CType cType; JSType value; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: rawValue = input.readEnum(); cType = CType.valueOf(rawValue); if (cType == null) { unknownFields.mergeVarintField(1, rawValue); continue; }  this.bitField0_ |= 0x1; this.ctype_ = rawValue; continue;case 16: this.bitField0_ |= 0x2; this.packed_ = input.readBool(); continue;case 24: this.bitField0_ |= 0x10; this.deprecated_ = input.readBool(); continue;case 40: this.bitField0_ |= 0x8; this.lazy_ = input.readBool(); continue;case 48: rawValue = input.readEnum(); value = JSType.valueOf(rawValue); if (value == null) { unknownFields.mergeVarintField(6, rawValue); continue; }  this.bitField0_ |= 0x4; this.jstype_ = rawValue; continue;case 80: this.bitField0_ |= 0x20; this.weak_ = input.readBool(); continue;case 7994: if ((mutable_bitField0_ & 0x40) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x40; }  this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x40) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_FieldOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_FieldOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)FieldOptions.class, (Class)Builder.class); } public enum CType implements ProtocolMessageEnum {
/*       */       STRING(0), CORD(1), STRING_PIECE(2); public static final int STRING_VALUE = 0; public static final int CORD_VALUE = 1; public static final int STRING_PIECE_VALUE = 2; private static final Internal.EnumLiteMap<CType> internalValueMap = new Internal.EnumLiteMap<CType>() { public DescriptorProtos.FieldOptions.CType findValueByNumber(int number) { return DescriptorProtos.FieldOptions.CType.forNumber(number); } }
/*       */       ; private static final CType[] VALUES = values(); private final int value; public final int getNumber() { return this.value; } public static CType forNumber(int value) { switch (value) { case 0: return STRING;case 1: return CORD;case 2: return STRING_PIECE; }  return null; } public static Internal.EnumLiteMap<CType> internalGetValueMap() { return internalValueMap; } static {  } public final Descriptors.EnumValueDescriptor getValueDescriptor() { return getDescriptor().getValues().get(ordinal()); } public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); } public static final Descriptors.EnumDescriptor getDescriptor() { return DescriptorProtos.FieldOptions.getDescriptor().getEnumTypes().get(0); } CType(int value) { this.value = value; } } public enum JSType implements ProtocolMessageEnum {
/* 28836 */       JS_NORMAL(0), JS_STRING(1), JS_NUMBER(2); public static final int JS_NORMAL_VALUE = 0; public static final int JS_STRING_VALUE = 1; public static final int JS_NUMBER_VALUE = 2; private static final Internal.EnumLiteMap<JSType> internalValueMap = new Internal.EnumLiteMap<JSType>() { public DescriptorProtos.FieldOptions.JSType findValueByNumber(int number) { return DescriptorProtos.FieldOptions.JSType.forNumber(number); } }; private static final JSType[] VALUES = values(); private final int value; public final int getNumber() { return this.value; } public static JSType forNumber(int value) { switch (value) { case 0: return JS_NORMAL;case 1: return JS_STRING;case 2: return JS_NUMBER; }  return null; } public static Internal.EnumLiteMap<JSType> internalGetValueMap() { return internalValueMap; } static {  } public final Descriptors.EnumValueDescriptor getValueDescriptor() { return getDescriptor().getValues().get(ordinal()); } public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); } public static final Descriptors.EnumDescriptor getDescriptor() { return DescriptorProtos.FieldOptions.getDescriptor().getEnumTypes().get(1); } JSType(int value) { this.value = value; } } public boolean hasCtype() { return ((this.bitField0_ & 0x1) != 0); } public CType getCtype() { CType result = CType.valueOf(this.ctype_); return (result == null) ? CType.STRING : result; } public boolean hasPacked() { return ((this.bitField0_ & 0x2) != 0); } public boolean getPacked() { return this.packed_; } public boolean hasJstype() { return ((this.bitField0_ & 0x4) != 0); } public JSType getJstype() { JSType result = JSType.valueOf(this.jstype_); return (result == null) ? JSType.JS_NORMAL : result; } public boolean hasLazy() { return ((this.bitField0_ & 0x8) != 0); } public boolean getLazy() { return this.lazy_; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x10) != 0); } public boolean getDeprecated() { return this.deprecated_; } public boolean hasWeak() { return ((this.bitField0_ & 0x20) != 0); } public boolean getWeak() { return this.weak_; } public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); } public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); } public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 28837 */       if (isInitialized == 1) return true; 
/* 28838 */       if (isInitialized == 0) return false;
/*       */       
/* 28840 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 28841 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 28842 */           this.memoizedIsInitialized = 0;
/* 28843 */           return false;
/*       */         } 
/*       */       } 
/* 28846 */       if (!extensionsAreInitialized()) {
/* 28847 */         this.memoizedIsInitialized = 0;
/* 28848 */         return false;
/*       */       } 
/* 28850 */       this.memoizedIsInitialized = 1;
/* 28851 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 28859 */       GeneratedMessageV3.ExtendableMessage<FieldOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 28860 */       if ((this.bitField0_ & 0x1) != 0) {
/* 28861 */         output.writeEnum(1, this.ctype_);
/*       */       }
/* 28863 */       if ((this.bitField0_ & 0x2) != 0) {
/* 28864 */         output.writeBool(2, this.packed_);
/*       */       }
/* 28866 */       if ((this.bitField0_ & 0x10) != 0) {
/* 28867 */         output.writeBool(3, this.deprecated_);
/*       */       }
/* 28869 */       if ((this.bitField0_ & 0x8) != 0) {
/* 28870 */         output.writeBool(5, this.lazy_);
/*       */       }
/* 28872 */       if ((this.bitField0_ & 0x4) != 0) {
/* 28873 */         output.writeEnum(6, this.jstype_);
/*       */       }
/* 28875 */       if ((this.bitField0_ & 0x20) != 0) {
/* 28876 */         output.writeBool(10, this.weak_);
/*       */       }
/* 28878 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 28879 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 28881 */       extensionWriter.writeUntil(536870912, output);
/* 28882 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 28887 */       int size = this.memoizedSize;
/* 28888 */       if (size != -1) return size;
/*       */       
/* 28890 */       size = 0;
/* 28891 */       if ((this.bitField0_ & 0x1) != 0) {
/* 28892 */         size += 
/* 28893 */           CodedOutputStream.computeEnumSize(1, this.ctype_);
/*       */       }
/* 28895 */       if ((this.bitField0_ & 0x2) != 0) {
/* 28896 */         size += 
/* 28897 */           CodedOutputStream.computeBoolSize(2, this.packed_);
/*       */       }
/* 28899 */       if ((this.bitField0_ & 0x10) != 0) {
/* 28900 */         size += 
/* 28901 */           CodedOutputStream.computeBoolSize(3, this.deprecated_);
/*       */       }
/* 28903 */       if ((this.bitField0_ & 0x8) != 0) {
/* 28904 */         size += 
/* 28905 */           CodedOutputStream.computeBoolSize(5, this.lazy_);
/*       */       }
/* 28907 */       if ((this.bitField0_ & 0x4) != 0) {
/* 28908 */         size += 
/* 28909 */           CodedOutputStream.computeEnumSize(6, this.jstype_);
/*       */       }
/* 28911 */       if ((this.bitField0_ & 0x20) != 0) {
/* 28912 */         size += 
/* 28913 */           CodedOutputStream.computeBoolSize(10, this.weak_);
/*       */       }
/* 28915 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 28916 */         size += 
/* 28917 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 28919 */       size += extensionsSerializedSize();
/* 28920 */       size += this.unknownFields.getSerializedSize();
/* 28921 */       this.memoizedSize = size;
/* 28922 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 28927 */       if (obj == this) {
/* 28928 */         return true;
/*       */       }
/* 28930 */       if (!(obj instanceof FieldOptions)) {
/* 28931 */         return super.equals(obj);
/*       */       }
/* 28933 */       FieldOptions other = (FieldOptions)obj;
/*       */       
/* 28935 */       if (hasCtype() != other.hasCtype()) return false; 
/* 28936 */       if (hasCtype() && 
/* 28937 */         this.ctype_ != other.ctype_) return false;
/*       */       
/* 28939 */       if (hasPacked() != other.hasPacked()) return false; 
/* 28940 */       if (hasPacked() && 
/* 28941 */         getPacked() != other
/* 28942 */         .getPacked()) return false;
/*       */       
/* 28944 */       if (hasJstype() != other.hasJstype()) return false; 
/* 28945 */       if (hasJstype() && 
/* 28946 */         this.jstype_ != other.jstype_) return false;
/*       */       
/* 28948 */       if (hasLazy() != other.hasLazy()) return false; 
/* 28949 */       if (hasLazy() && 
/* 28950 */         getLazy() != other
/* 28951 */         .getLazy()) return false;
/*       */       
/* 28953 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 28954 */       if (hasDeprecated() && 
/* 28955 */         getDeprecated() != other
/* 28956 */         .getDeprecated()) return false;
/*       */       
/* 28958 */       if (hasWeak() != other.hasWeak()) return false; 
/* 28959 */       if (hasWeak() && 
/* 28960 */         getWeak() != other
/* 28961 */         .getWeak()) return false;
/*       */ 
/*       */       
/* 28964 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 28965 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 28966 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 28967 */         return false; 
/* 28968 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 28973 */       if (this.memoizedHashCode != 0) {
/* 28974 */         return this.memoizedHashCode;
/*       */       }
/* 28976 */       int hash = 41;
/* 28977 */       hash = 19 * hash + getDescriptor().hashCode();
/* 28978 */       if (hasCtype()) {
/* 28979 */         hash = 37 * hash + 1;
/* 28980 */         hash = 53 * hash + this.ctype_;
/*       */       } 
/* 28982 */       if (hasPacked()) {
/* 28983 */         hash = 37 * hash + 2;
/* 28984 */         hash = 53 * hash + Internal.hashBoolean(
/* 28985 */             getPacked());
/*       */       } 
/* 28987 */       if (hasJstype()) {
/* 28988 */         hash = 37 * hash + 6;
/* 28989 */         hash = 53 * hash + this.jstype_;
/*       */       } 
/* 28991 */       if (hasLazy()) {
/* 28992 */         hash = 37 * hash + 5;
/* 28993 */         hash = 53 * hash + Internal.hashBoolean(
/* 28994 */             getLazy());
/*       */       } 
/* 28996 */       if (hasDeprecated()) {
/* 28997 */         hash = 37 * hash + 3;
/* 28998 */         hash = 53 * hash + Internal.hashBoolean(
/* 28999 */             getDeprecated());
/*       */       } 
/* 29001 */       if (hasWeak()) {
/* 29002 */         hash = 37 * hash + 10;
/* 29003 */         hash = 53 * hash + Internal.hashBoolean(
/* 29004 */             getWeak());
/*       */       } 
/* 29006 */       if (getUninterpretedOptionCount() > 0) {
/* 29007 */         hash = 37 * hash + 999;
/* 29008 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 29010 */       hash = hashFields(hash, getExtensionFields());
/* 29011 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 29012 */       this.memoizedHashCode = hash;
/* 29013 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 29019 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29025 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 29030 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29036 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FieldOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 29040 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 29046 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FieldOptions parseFrom(InputStream input) throws IOException {
/* 29050 */       return 
/* 29051 */         GeneratedMessageV3.<FieldOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29057 */       return 
/* 29058 */         GeneratedMessageV3.<FieldOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static FieldOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 29062 */       return 
/* 29063 */         GeneratedMessageV3.<FieldOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29069 */       return 
/* 29070 */         GeneratedMessageV3.<FieldOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(CodedInputStream input) throws IOException {
/* 29075 */       return 
/* 29076 */         GeneratedMessageV3.<FieldOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static FieldOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 29082 */       return 
/* 29083 */         GeneratedMessageV3.<FieldOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 29087 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 29089 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(FieldOptions prototype) {
/* 29092 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 29096 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 29097 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 29103 */       Builder builder = new Builder(parent);
/* 29104 */       return builder;
/*       */     }
/*       */     public static final class Builder extends GeneratedMessageV3.ExtendableBuilder<FieldOptions, Builder> implements DescriptorProtos.FieldOptionsOrBuilder { private int bitField0_; private int ctype_;
/*       */       private boolean packed_;
/*       */       private int jstype_;
/*       */       private boolean lazy_;
/*       */       private boolean deprecated_;
/*       */       private boolean weak_;
/*       */       private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 29116 */         return DescriptorProtos.internal_static_google_protobuf_FieldOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 29122 */         return DescriptorProtos.internal_static_google_protobuf_FieldOptions_fieldAccessorTable
/* 29123 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.FieldOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 29384 */         this.ctype_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 29523 */         this.jstype_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 29880 */         this
/* 29881 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.ctype_ = 0; this.jstype_ = 0; this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.ctype_ = 0; this.bitField0_ &= 0xFFFFFFFE; this.packed_ = false; this.bitField0_ &= 0xFFFFFFFD; this.jstype_ = 0; this.bitField0_ &= 0xFFFFFFFB; this.lazy_ = false; this.bitField0_ &= 0xFFFFFFF7; this.deprecated_ = false; this.bitField0_ &= 0xFFFFFFEF; this.weak_ = false; this.bitField0_ &= 0xFFFFFFDF; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFBF; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_FieldOptions_descriptor; } public DescriptorProtos.FieldOptions getDefaultInstanceForType() { return DescriptorProtos.FieldOptions.getDefaultInstance(); } public DescriptorProtos.FieldOptions build() { DescriptorProtos.FieldOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.FieldOptions buildPartial() { DescriptorProtos.FieldOptions result = new DescriptorProtos.FieldOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.ctype_ = this.ctype_; if ((from_bitField0_ & 0x2) != 0) { result.packed_ = this.packed_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x4) != 0) to_bitField0_ |= 0x4;  result.jstype_ = this.jstype_; if ((from_bitField0_ & 0x8) != 0) { result.lazy_ = this.lazy_; to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x10) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x10; }  if ((from_bitField0_ & 0x20) != 0) { result.weak_ = this.weak_; to_bitField0_ |= 0x20; }  if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x40) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFBF; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.FieldOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.FieldOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.FieldOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.FieldOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.FieldOptions) return mergeFrom((DescriptorProtos.FieldOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.FieldOptions other) { if (other == DescriptorProtos.FieldOptions.getDefaultInstance()) return this;  if (other.hasCtype()) setCtype(other.getCtype());  if (other.hasPacked()) setPacked(other.getPacked());  if (other.hasJstype()) setJstype(other.getJstype());  if (other.hasLazy()) setLazy(other.getLazy());  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (other.hasWeak()) setWeak(other.getWeak());  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFBF; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFBF; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.FieldOptions parsedMessage = null; try { parsedMessage = DescriptorProtos.FieldOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.FieldOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasCtype() { return ((this.bitField0_ & 0x1) != 0); } public DescriptorProtos.FieldOptions.CType getCtype() { DescriptorProtos.FieldOptions.CType result = DescriptorProtos.FieldOptions.CType.valueOf(this.ctype_); return (result == null) ? DescriptorProtos.FieldOptions.CType.STRING : result; } public Builder setCtype(DescriptorProtos.FieldOptions.CType value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.ctype_ = value.getNumber(); onChanged(); return this; } public Builder clearCtype() { this.bitField0_ &= 0xFFFFFFFE; this.ctype_ = 0; onChanged(); return this; } public boolean hasPacked() { return ((this.bitField0_ & 0x2) != 0); } public boolean getPacked() { return this.packed_; } public Builder setPacked(boolean value) { this.bitField0_ |= 0x2; this.packed_ = value; onChanged(); return this; } public Builder clearPacked() { this.bitField0_ &= 0xFFFFFFFD; this.packed_ = false; onChanged(); return this; } public boolean hasJstype() { return ((this.bitField0_ & 0x4) != 0); } public DescriptorProtos.FieldOptions.JSType getJstype() { DescriptorProtos.FieldOptions.JSType result = DescriptorProtos.FieldOptions.JSType.valueOf(this.jstype_); return (result == null) ? DescriptorProtos.FieldOptions.JSType.JS_NORMAL : result; } public Builder setJstype(DescriptorProtos.FieldOptions.JSType value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x4; this.jstype_ = value.getNumber(); onChanged(); return this; } public Builder clearJstype() { this.bitField0_ &= 0xFFFFFFFB; this.jstype_ = 0; onChanged(); return this; } public boolean hasLazy() { return ((this.bitField0_ & 0x8) != 0); } public boolean getLazy() { return this.lazy_; } public Builder setLazy(boolean value) { this.bitField0_ |= 0x8; this.lazy_ = value; onChanged(); return this; } public Builder clearLazy() { this.bitField0_ &= 0xFFFFFFF7; this.lazy_ = false; onChanged(); return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x10) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x10; this.deprecated_ = value; onChanged(); return this; } public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFFFEF; this.deprecated_ = false; onChanged(); return this; } public boolean hasWeak() { return ((this.bitField0_ & 0x20) != 0); } public boolean getWeak() { return this.weak_; } public Builder setWeak(boolean value) { this.bitField0_ |= 0x20; this.weak_ = value; onChanged(); return this; }
/*       */       public Builder clearWeak() { this.bitField0_ &= 0xFFFFFFDF; this.weak_ = false; onChanged(); return this; }
/* 29883 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x40) == 0) {
/* 29884 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 29885 */           this.bitField0_ |= 0x40;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
/* 29900 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 29901 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 29903 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 29914 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 29915 */           return this.uninterpretedOption_.size();
/*       */         }
/* 29917 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
/* 29928 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 29929 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 29931 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 29943 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 29944 */           if (value == null) {
/* 29945 */             throw new NullPointerException();
/*       */           }
/* 29947 */           ensureUninterpretedOptionIsMutable();
/* 29948 */           this.uninterpretedOption_.set(index, value);
/* 29949 */           onChanged();
/*       */         } else {
/* 29951 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 29953 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 29964 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 29965 */           ensureUninterpretedOptionIsMutable();
/* 29966 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 29967 */           onChanged();
/*       */         } else {
/* 29969 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 29971 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
/* 29981 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 29982 */           if (value == null) {
/* 29983 */             throw new NullPointerException();
/*       */           }
/* 29985 */           ensureUninterpretedOptionIsMutable();
/* 29986 */           this.uninterpretedOption_.add(value);
/* 29987 */           onChanged();
/*       */         } else {
/* 29989 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 29991 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 30002 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30003 */           if (value == null) {
/* 30004 */             throw new NullPointerException();
/*       */           }
/* 30006 */           ensureUninterpretedOptionIsMutable();
/* 30007 */           this.uninterpretedOption_.add(index, value);
/* 30008 */           onChanged();
/*       */         } else {
/* 30010 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 30012 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 30023 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30024 */           ensureUninterpretedOptionIsMutable();
/* 30025 */           this.uninterpretedOption_.add(builderForValue.build());
/* 30026 */           onChanged();
/*       */         } else {
/* 30028 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 30030 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 30041 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30042 */           ensureUninterpretedOptionIsMutable();
/* 30043 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 30044 */           onChanged();
/*       */         } else {
/* 30046 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 30048 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
/* 30059 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30060 */           ensureUninterpretedOptionIsMutable();
/* 30061 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 30063 */           onChanged();
/*       */         } else {
/* 30065 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 30067 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 30077 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30078 */           this.uninterpretedOption_ = Collections.emptyList();
/* 30079 */           this.bitField0_ &= 0xFFFFFFBF;
/* 30080 */           onChanged();
/*       */         } else {
/* 30082 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 30084 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 30094 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30095 */           ensureUninterpretedOptionIsMutable();
/* 30096 */           this.uninterpretedOption_.remove(index);
/* 30097 */           onChanged();
/*       */         } else {
/* 30099 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 30101 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 30112 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 30123 */         if (this.uninterpretedOptionBuilder_ == null)
/* 30124 */           return this.uninterpretedOption_.get(index); 
/* 30125 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 30137 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 30138 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 30140 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 30151 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 30152 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 30163 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 30164 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 30175 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 30180 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30181 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 30186 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x40) != 0), getParentForChildren(), isClean());
/* 30187 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 30189 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 30194 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 30200 */         return super.mergeUnknownFields(unknownFields);
/*       */       } }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 30210 */     private static final FieldOptions DEFAULT_INSTANCE = new FieldOptions();
/*       */ 
/*       */     
/*       */     public static FieldOptions getDefaultInstance() {
/* 30214 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 30218 */     public static final Parser<FieldOptions> PARSER = new AbstractParser<FieldOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.FieldOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 30224 */           return new DescriptorProtos.FieldOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<FieldOptions> parser() {
/* 30229 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<FieldOptions> getParserForType() {
/* 30234 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public FieldOptions getDefaultInstanceForType() {
/* 30239 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface OneofOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<OneofOptions>
/*       */   {
/*       */     List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class OneofOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<OneofOptions>
/*       */     implements OneofOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private OneofOptions(GeneratedMessageV3.ExtendableBuilder<OneofOptions, ?> builder)
/*       */     {
/* 30304 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 30440 */       this.memoizedIsInitialized = -1; } private OneofOptions() { this.memoizedIsInitialized = -1; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new OneofOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private OneofOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 7994: if ((mutable_bitField0_ & 0x1) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_OneofOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_OneofOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)OneofOptions.class, (Class)Builder.class); } public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); }
/*       */     public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); }
/*       */     public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 30443 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 30444 */       if (isInitialized == 1) return true; 
/* 30445 */       if (isInitialized == 0) return false;
/*       */       
/* 30447 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 30448 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 30449 */           this.memoizedIsInitialized = 0;
/* 30450 */           return false;
/*       */         } 
/*       */       } 
/* 30453 */       if (!extensionsAreInitialized()) {
/* 30454 */         this.memoizedIsInitialized = 0;
/* 30455 */         return false;
/*       */       } 
/* 30457 */       this.memoizedIsInitialized = 1;
/* 30458 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 30466 */       GeneratedMessageV3.ExtendableMessage<OneofOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 30467 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 30468 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 30470 */       extensionWriter.writeUntil(536870912, output);
/* 30471 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 30476 */       int size = this.memoizedSize;
/* 30477 */       if (size != -1) return size;
/*       */       
/* 30479 */       size = 0;
/* 30480 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 30481 */         size += 
/* 30482 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 30484 */       size += extensionsSerializedSize();
/* 30485 */       size += this.unknownFields.getSerializedSize();
/* 30486 */       this.memoizedSize = size;
/* 30487 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 30492 */       if (obj == this) {
/* 30493 */         return true;
/*       */       }
/* 30495 */       if (!(obj instanceof OneofOptions)) {
/* 30496 */         return super.equals(obj);
/*       */       }
/* 30498 */       OneofOptions other = (OneofOptions)obj;
/*       */ 
/*       */       
/* 30501 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 30502 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 30503 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 30504 */         return false; 
/* 30505 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 30510 */       if (this.memoizedHashCode != 0) {
/* 30511 */         return this.memoizedHashCode;
/*       */       }
/* 30513 */       int hash = 41;
/* 30514 */       hash = 19 * hash + getDescriptor().hashCode();
/* 30515 */       if (getUninterpretedOptionCount() > 0) {
/* 30516 */         hash = 37 * hash + 999;
/* 30517 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 30519 */       hash = hashFields(hash, getExtensionFields());
/* 30520 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 30521 */       this.memoizedHashCode = hash;
/* 30522 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 30528 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 30534 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 30539 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 30545 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static OneofOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 30549 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 30555 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static OneofOptions parseFrom(InputStream input) throws IOException {
/* 30559 */       return 
/* 30560 */         GeneratedMessageV3.<OneofOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 30566 */       return 
/* 30567 */         GeneratedMessageV3.<OneofOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static OneofOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 30571 */       return 
/* 30572 */         GeneratedMessageV3.<OneofOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 30578 */       return 
/* 30579 */         GeneratedMessageV3.<OneofOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(CodedInputStream input) throws IOException {
/* 30584 */       return 
/* 30585 */         GeneratedMessageV3.<OneofOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static OneofOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 30591 */       return 
/* 30592 */         GeneratedMessageV3.<OneofOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 30596 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 30598 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(OneofOptions prototype) {
/* 30601 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 30605 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 30606 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 30612 */       Builder builder = new Builder(parent);
/* 30613 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.ExtendableBuilder<OneofOptions, Builder>
/*       */       implements DescriptorProtos.OneofOptionsOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 30625 */         return DescriptorProtos.internal_static_google_protobuf_OneofOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 30631 */         return DescriptorProtos.internal_static_google_protobuf_OneofOptions_fieldAccessorTable
/* 30632 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.OneofOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 30837 */         this
/* 30838 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_OneofOptions_descriptor; } public DescriptorProtos.OneofOptions getDefaultInstanceForType() { return DescriptorProtos.OneofOptions.getDefaultInstance(); } public DescriptorProtos.OneofOptions build() { DescriptorProtos.OneofOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.OneofOptions buildPartial() { DescriptorProtos.OneofOptions result = new DescriptorProtos.OneofOptions(this); int from_bitField0_ = this.bitField0_; if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFFE; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.OneofOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.OneofOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.OneofOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.OneofOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.OneofOptions) return mergeFrom((DescriptorProtos.OneofOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.OneofOptions other) { if (other == DescriptorProtos.OneofOptions.getDefaultInstance()) return this;  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFE; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.OneofOptions parsedMessage = null; try { parsedMessage = DescriptorProtos.OneofOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.OneofOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 30840 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/* 30841 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 30842 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
/* 30857 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30858 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 30860 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 30871 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30872 */           return this.uninterpretedOption_.size();
/*       */         }
/* 30874 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
/* 30885 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30886 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 30888 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 30900 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30901 */           if (value == null) {
/* 30902 */             throw new NullPointerException();
/*       */           }
/* 30904 */           ensureUninterpretedOptionIsMutable();
/* 30905 */           this.uninterpretedOption_.set(index, value);
/* 30906 */           onChanged();
/*       */         } else {
/* 30908 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 30910 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 30921 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30922 */           ensureUninterpretedOptionIsMutable();
/* 30923 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 30924 */           onChanged();
/*       */         } else {
/* 30926 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 30928 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
/* 30938 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30939 */           if (value == null) {
/* 30940 */             throw new NullPointerException();
/*       */           }
/* 30942 */           ensureUninterpretedOptionIsMutable();
/* 30943 */           this.uninterpretedOption_.add(value);
/* 30944 */           onChanged();
/*       */         } else {
/* 30946 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 30948 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 30959 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30960 */           if (value == null) {
/* 30961 */             throw new NullPointerException();
/*       */           }
/* 30963 */           ensureUninterpretedOptionIsMutable();
/* 30964 */           this.uninterpretedOption_.add(index, value);
/* 30965 */           onChanged();
/*       */         } else {
/* 30967 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 30969 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 30980 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30981 */           ensureUninterpretedOptionIsMutable();
/* 30982 */           this.uninterpretedOption_.add(builderForValue.build());
/* 30983 */           onChanged();
/*       */         } else {
/* 30985 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 30987 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 30998 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 30999 */           ensureUninterpretedOptionIsMutable();
/* 31000 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 31001 */           onChanged();
/*       */         } else {
/* 31003 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 31005 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
/* 31016 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31017 */           ensureUninterpretedOptionIsMutable();
/* 31018 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 31020 */           onChanged();
/*       */         } else {
/* 31022 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 31024 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 31034 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31035 */           this.uninterpretedOption_ = Collections.emptyList();
/* 31036 */           this.bitField0_ &= 0xFFFFFFFE;
/* 31037 */           onChanged();
/*       */         } else {
/* 31039 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 31041 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 31051 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31052 */           ensureUninterpretedOptionIsMutable();
/* 31053 */           this.uninterpretedOption_.remove(index);
/* 31054 */           onChanged();
/*       */         } else {
/* 31056 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 31058 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 31069 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 31080 */         if (this.uninterpretedOptionBuilder_ == null)
/* 31081 */           return this.uninterpretedOption_.get(index); 
/* 31082 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 31094 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 31095 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 31097 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 31108 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 31109 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 31120 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 31121 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 31132 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 31137 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 31138 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 31143 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x1) != 0), getParentForChildren(), isClean());
/* 31144 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 31146 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 31151 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 31157 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 31167 */     private static final OneofOptions DEFAULT_INSTANCE = new OneofOptions();
/*       */ 
/*       */     
/*       */     public static OneofOptions getDefaultInstance() {
/* 31171 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 31175 */     public static final Parser<OneofOptions> PARSER = new AbstractParser<OneofOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.OneofOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 31181 */           return new DescriptorProtos.OneofOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<OneofOptions> parser() {
/* 31186 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<OneofOptions> getParserForType() {
/* 31191 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public OneofOptions getDefaultInstanceForType() {
/* 31196 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface EnumOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<EnumOptions>
/*       */   {
/*       */     boolean hasAllowAlias();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getAllowAlias();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class EnumOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<EnumOptions>
/*       */     implements EnumOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int ALLOW_ALIAS_FIELD_NUMBER = 2;
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean allowAlias_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 3;
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private EnumOptions(GeneratedMessageV3.ExtendableBuilder<EnumOptions, ?> builder)
/*       */     {
/* 31307 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 31512 */       this.memoizedIsInitialized = -1; } private EnumOptions() { this.memoizedIsInitialized = -1; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new EnumOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private EnumOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 16: this.bitField0_ |= 0x1; this.allowAlias_ = input.readBool(); continue;case 24: this.bitField0_ |= 0x2; this.deprecated_ = input.readBool(); continue;case 7994: if ((mutable_bitField0_ & 0x4) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x4; }  this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x4) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_EnumOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_EnumOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EnumOptions.class, (Class)Builder.class); } public boolean hasAllowAlias() { return ((this.bitField0_ & 0x1) != 0); } public boolean getAllowAlias() { return this.allowAlias_; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x2) != 0); } public boolean getDeprecated() { return this.deprecated_; } public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); }
/*       */     public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); }
/*       */     public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 31515 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 31516 */       if (isInitialized == 1) return true; 
/* 31517 */       if (isInitialized == 0) return false;
/*       */       
/* 31519 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 31520 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 31521 */           this.memoizedIsInitialized = 0;
/* 31522 */           return false;
/*       */         } 
/*       */       } 
/* 31525 */       if (!extensionsAreInitialized()) {
/* 31526 */         this.memoizedIsInitialized = 0;
/* 31527 */         return false;
/*       */       } 
/* 31529 */       this.memoizedIsInitialized = 1;
/* 31530 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 31538 */       GeneratedMessageV3.ExtendableMessage<EnumOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 31539 */       if ((this.bitField0_ & 0x1) != 0) {
/* 31540 */         output.writeBool(2, this.allowAlias_);
/*       */       }
/* 31542 */       if ((this.bitField0_ & 0x2) != 0) {
/* 31543 */         output.writeBool(3, this.deprecated_);
/*       */       }
/* 31545 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 31546 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 31548 */       extensionWriter.writeUntil(536870912, output);
/* 31549 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 31554 */       int size = this.memoizedSize;
/* 31555 */       if (size != -1) return size;
/*       */       
/* 31557 */       size = 0;
/* 31558 */       if ((this.bitField0_ & 0x1) != 0) {
/* 31559 */         size += 
/* 31560 */           CodedOutputStream.computeBoolSize(2, this.allowAlias_);
/*       */       }
/* 31562 */       if ((this.bitField0_ & 0x2) != 0) {
/* 31563 */         size += 
/* 31564 */           CodedOutputStream.computeBoolSize(3, this.deprecated_);
/*       */       }
/* 31566 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 31567 */         size += 
/* 31568 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 31570 */       size += extensionsSerializedSize();
/* 31571 */       size += this.unknownFields.getSerializedSize();
/* 31572 */       this.memoizedSize = size;
/* 31573 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 31578 */       if (obj == this) {
/* 31579 */         return true;
/*       */       }
/* 31581 */       if (!(obj instanceof EnumOptions)) {
/* 31582 */         return super.equals(obj);
/*       */       }
/* 31584 */       EnumOptions other = (EnumOptions)obj;
/*       */       
/* 31586 */       if (hasAllowAlias() != other.hasAllowAlias()) return false; 
/* 31587 */       if (hasAllowAlias() && 
/* 31588 */         getAllowAlias() != other
/* 31589 */         .getAllowAlias()) return false;
/*       */       
/* 31591 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 31592 */       if (hasDeprecated() && 
/* 31593 */         getDeprecated() != other
/* 31594 */         .getDeprecated()) return false;
/*       */ 
/*       */       
/* 31597 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 31598 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 31599 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 31600 */         return false; 
/* 31601 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 31606 */       if (this.memoizedHashCode != 0) {
/* 31607 */         return this.memoizedHashCode;
/*       */       }
/* 31609 */       int hash = 41;
/* 31610 */       hash = 19 * hash + getDescriptor().hashCode();
/* 31611 */       if (hasAllowAlias()) {
/* 31612 */         hash = 37 * hash + 2;
/* 31613 */         hash = 53 * hash + Internal.hashBoolean(
/* 31614 */             getAllowAlias());
/*       */       } 
/* 31616 */       if (hasDeprecated()) {
/* 31617 */         hash = 37 * hash + 3;
/* 31618 */         hash = 53 * hash + Internal.hashBoolean(
/* 31619 */             getDeprecated());
/*       */       } 
/* 31621 */       if (getUninterpretedOptionCount() > 0) {
/* 31622 */         hash = 37 * hash + 999;
/* 31623 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 31625 */       hash = hashFields(hash, getExtensionFields());
/* 31626 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 31627 */       this.memoizedHashCode = hash;
/* 31628 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 31634 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 31640 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 31645 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 31651 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 31655 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 31661 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumOptions parseFrom(InputStream input) throws IOException {
/* 31665 */       return 
/* 31666 */         GeneratedMessageV3.<EnumOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 31672 */       return 
/* 31673 */         GeneratedMessageV3.<EnumOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 31677 */       return 
/* 31678 */         GeneratedMessageV3.<EnumOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 31684 */       return 
/* 31685 */         GeneratedMessageV3.<EnumOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(CodedInputStream input) throws IOException {
/* 31690 */       return 
/* 31691 */         GeneratedMessageV3.<EnumOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 31697 */       return 
/* 31698 */         GeneratedMessageV3.<EnumOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 31702 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 31704 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(EnumOptions prototype) {
/* 31707 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 31711 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 31712 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 31718 */       Builder builder = new Builder(parent);
/* 31719 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.ExtendableBuilder<EnumOptions, Builder> implements DescriptorProtos.EnumOptionsOrBuilder {
/*       */       private int bitField0_;
/*       */       private boolean allowAlias_;
/*       */       private boolean deprecated_;
/*       */       private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 31731 */         return DescriptorProtos.internal_static_google_protobuf_EnumOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 31737 */         return DescriptorProtos.internal_static_google_protobuf_EnumOptions_fieldAccessorTable
/* 31738 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.EnumOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 32085 */         this
/* 32086 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.allowAlias_ = false; this.bitField0_ &= 0xFFFFFFFE; this.deprecated_ = false; this.bitField0_ &= 0xFFFFFFFD; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFB; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_EnumOptions_descriptor; } public DescriptorProtos.EnumOptions getDefaultInstanceForType() { return DescriptorProtos.EnumOptions.getDefaultInstance(); } public DescriptorProtos.EnumOptions build() { DescriptorProtos.EnumOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.EnumOptions buildPartial() { DescriptorProtos.EnumOptions result = new DescriptorProtos.EnumOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.allowAlias_ = this.allowAlias_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x2; }  if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x4) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFFB; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.EnumOptions) return mergeFrom((DescriptorProtos.EnumOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.EnumOptions other) { if (other == DescriptorProtos.EnumOptions.getDefaultInstance()) return this;  if (other.hasAllowAlias()) setAllowAlias(other.getAllowAlias());  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFB; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFB; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.EnumOptions parsedMessage = null; try { parsedMessage = DescriptorProtos.EnumOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.EnumOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasAllowAlias() { return ((this.bitField0_ & 0x1) != 0); } public boolean getAllowAlias() { return this.allowAlias_; } public Builder setAllowAlias(boolean value) { this.bitField0_ |= 0x1; this.allowAlias_ = value; onChanged(); return this; } public Builder clearAllowAlias() { this.bitField0_ &= 0xFFFFFFFE; this.allowAlias_ = false; onChanged(); return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x2) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x2; this.deprecated_ = value; onChanged(); return this; }
/*       */       public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFFFFD; this.deprecated_ = false; onChanged(); return this; }
/* 32088 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x4) == 0) {
/* 32089 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 32090 */           this.bitField0_ |= 0x4;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
/* 32105 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32106 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 32108 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 32119 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32120 */           return this.uninterpretedOption_.size();
/*       */         }
/* 32122 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
/* 32133 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32134 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 32136 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 32148 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32149 */           if (value == null) {
/* 32150 */             throw new NullPointerException();
/*       */           }
/* 32152 */           ensureUninterpretedOptionIsMutable();
/* 32153 */           this.uninterpretedOption_.set(index, value);
/* 32154 */           onChanged();
/*       */         } else {
/* 32156 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 32158 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 32169 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32170 */           ensureUninterpretedOptionIsMutable();
/* 32171 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 32172 */           onChanged();
/*       */         } else {
/* 32174 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 32176 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
/* 32186 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32187 */           if (value == null) {
/* 32188 */             throw new NullPointerException();
/*       */           }
/* 32190 */           ensureUninterpretedOptionIsMutable();
/* 32191 */           this.uninterpretedOption_.add(value);
/* 32192 */           onChanged();
/*       */         } else {
/* 32194 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 32196 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 32207 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32208 */           if (value == null) {
/* 32209 */             throw new NullPointerException();
/*       */           }
/* 32211 */           ensureUninterpretedOptionIsMutable();
/* 32212 */           this.uninterpretedOption_.add(index, value);
/* 32213 */           onChanged();
/*       */         } else {
/* 32215 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 32217 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 32228 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32229 */           ensureUninterpretedOptionIsMutable();
/* 32230 */           this.uninterpretedOption_.add(builderForValue.build());
/* 32231 */           onChanged();
/*       */         } else {
/* 32233 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 32235 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 32246 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32247 */           ensureUninterpretedOptionIsMutable();
/* 32248 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 32249 */           onChanged();
/*       */         } else {
/* 32251 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 32253 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
/* 32264 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32265 */           ensureUninterpretedOptionIsMutable();
/* 32266 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 32268 */           onChanged();
/*       */         } else {
/* 32270 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 32272 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 32282 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32283 */           this.uninterpretedOption_ = Collections.emptyList();
/* 32284 */           this.bitField0_ &= 0xFFFFFFFB;
/* 32285 */           onChanged();
/*       */         } else {
/* 32287 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 32289 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 32299 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32300 */           ensureUninterpretedOptionIsMutable();
/* 32301 */           this.uninterpretedOption_.remove(index);
/* 32302 */           onChanged();
/*       */         } else {
/* 32304 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 32306 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 32317 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 32328 */         if (this.uninterpretedOptionBuilder_ == null)
/* 32329 */           return this.uninterpretedOption_.get(index); 
/* 32330 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 32342 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 32343 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 32345 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 32356 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 32357 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 32368 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 32369 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 32380 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 32385 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 32386 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 32391 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x4) != 0), getParentForChildren(), isClean());
/* 32392 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 32394 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 32399 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 32405 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 32415 */     private static final EnumOptions DEFAULT_INSTANCE = new EnumOptions();
/*       */ 
/*       */     
/*       */     public static EnumOptions getDefaultInstance() {
/* 32419 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 32423 */     public static final Parser<EnumOptions> PARSER = new AbstractParser<EnumOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.EnumOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 32429 */           return new DescriptorProtos.EnumOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<EnumOptions> parser() {
/* 32434 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<EnumOptions> getParserForType() {
/* 32439 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public EnumOptions getDefaultInstanceForType() {
/* 32444 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface EnumValueOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<EnumValueOptions>
/*       */   {
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class EnumValueOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<EnumValueOptions>
/*       */     implements EnumValueOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private EnumValueOptions(GeneratedMessageV3.ExtendableBuilder<EnumValueOptions, ?> builder)
/*       */     {
/* 32534 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 32707 */       this.memoizedIsInitialized = -1; } private EnumValueOptions() { this.memoizedIsInitialized = -1; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new EnumValueOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private EnumValueOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: this.bitField0_ |= 0x1; this.deprecated_ = input.readBool(); continue;case 7994: if ((mutable_bitField0_ & 0x2) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x2; }  this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x2) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)EnumValueOptions.class, (Class)Builder.class); } public boolean hasDeprecated() { return ((this.bitField0_ & 0x1) != 0); } public boolean getDeprecated() { return this.deprecated_; } public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); }
/*       */     public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); }
/*       */     public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 32710 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 32711 */       if (isInitialized == 1) return true; 
/* 32712 */       if (isInitialized == 0) return false;
/*       */       
/* 32714 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 32715 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 32716 */           this.memoizedIsInitialized = 0;
/* 32717 */           return false;
/*       */         } 
/*       */       } 
/* 32720 */       if (!extensionsAreInitialized()) {
/* 32721 */         this.memoizedIsInitialized = 0;
/* 32722 */         return false;
/*       */       } 
/* 32724 */       this.memoizedIsInitialized = 1;
/* 32725 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 32733 */       GeneratedMessageV3.ExtendableMessage<EnumValueOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 32734 */       if ((this.bitField0_ & 0x1) != 0) {
/* 32735 */         output.writeBool(1, this.deprecated_);
/*       */       }
/* 32737 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 32738 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 32740 */       extensionWriter.writeUntil(536870912, output);
/* 32741 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 32746 */       int size = this.memoizedSize;
/* 32747 */       if (size != -1) return size;
/*       */       
/* 32749 */       size = 0;
/* 32750 */       if ((this.bitField0_ & 0x1) != 0) {
/* 32751 */         size += 
/* 32752 */           CodedOutputStream.computeBoolSize(1, this.deprecated_);
/*       */       }
/* 32754 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 32755 */         size += 
/* 32756 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 32758 */       size += extensionsSerializedSize();
/* 32759 */       size += this.unknownFields.getSerializedSize();
/* 32760 */       this.memoizedSize = size;
/* 32761 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 32766 */       if (obj == this) {
/* 32767 */         return true;
/*       */       }
/* 32769 */       if (!(obj instanceof EnumValueOptions)) {
/* 32770 */         return super.equals(obj);
/*       */       }
/* 32772 */       EnumValueOptions other = (EnumValueOptions)obj;
/*       */       
/* 32774 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 32775 */       if (hasDeprecated() && 
/* 32776 */         getDeprecated() != other
/* 32777 */         .getDeprecated()) return false;
/*       */ 
/*       */       
/* 32780 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 32781 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 32782 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 32783 */         return false; 
/* 32784 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 32789 */       if (this.memoizedHashCode != 0) {
/* 32790 */         return this.memoizedHashCode;
/*       */       }
/* 32792 */       int hash = 41;
/* 32793 */       hash = 19 * hash + getDescriptor().hashCode();
/* 32794 */       if (hasDeprecated()) {
/* 32795 */         hash = 37 * hash + 1;
/* 32796 */         hash = 53 * hash + Internal.hashBoolean(
/* 32797 */             getDeprecated());
/*       */       } 
/* 32799 */       if (getUninterpretedOptionCount() > 0) {
/* 32800 */         hash = 37 * hash + 999;
/* 32801 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 32803 */       hash = hashFields(hash, getExtensionFields());
/* 32804 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 32805 */       this.memoizedHashCode = hash;
/* 32806 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 32812 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 32818 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 32823 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 32829 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumValueOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 32833 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 32839 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumValueOptions parseFrom(InputStream input) throws IOException {
/* 32843 */       return 
/* 32844 */         GeneratedMessageV3.<EnumValueOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 32850 */       return 
/* 32851 */         GeneratedMessageV3.<EnumValueOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static EnumValueOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 32855 */       return 
/* 32856 */         GeneratedMessageV3.<EnumValueOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 32862 */       return 
/* 32863 */         GeneratedMessageV3.<EnumValueOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(CodedInputStream input) throws IOException {
/* 32868 */       return 
/* 32869 */         GeneratedMessageV3.<EnumValueOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static EnumValueOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 32875 */       return 
/* 32876 */         GeneratedMessageV3.<EnumValueOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 32880 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 32882 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(EnumValueOptions prototype) {
/* 32885 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 32889 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 32890 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 32896 */       Builder builder = new Builder(parent);
/* 32897 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.ExtendableBuilder<EnumValueOptions, Builder>
/*       */       implements DescriptorProtos.EnumValueOptionsOrBuilder {
/*       */       private int bitField0_;
/*       */       private boolean deprecated_;
/*       */       private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 32909 */         return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 32915 */         return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable
/* 32916 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.EnumValueOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 33197 */         this
/* 33198 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.deprecated_ = false; this.bitField0_ &= 0xFFFFFFFE; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_descriptor; } public DescriptorProtos.EnumValueOptions getDefaultInstanceForType() { return DescriptorProtos.EnumValueOptions.getDefaultInstance(); } public DescriptorProtos.EnumValueOptions build() { DescriptorProtos.EnumValueOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.EnumValueOptions buildPartial() { DescriptorProtos.EnumValueOptions result = new DescriptorProtos.EnumValueOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x1; }  if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x2) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFFD; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumValueOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumValueOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumValueOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.EnumValueOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.EnumValueOptions) return mergeFrom((DescriptorProtos.EnumValueOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.EnumValueOptions other) { if (other == DescriptorProtos.EnumValueOptions.getDefaultInstance()) return this;  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFD; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.EnumValueOptions parsedMessage = null; try { parsedMessage = DescriptorProtos.EnumValueOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.EnumValueOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x1) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x1; this.deprecated_ = value; onChanged(); return this; }
/*       */       public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFFFFE; this.deprecated_ = false; onChanged(); return this; }
/* 33200 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x2) == 0) {
/* 33201 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 33202 */           this.bitField0_ |= 0x2;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
/* 33217 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33218 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 33220 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 33231 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33232 */           return this.uninterpretedOption_.size();
/*       */         }
/* 33234 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
/* 33245 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33246 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 33248 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 33260 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33261 */           if (value == null) {
/* 33262 */             throw new NullPointerException();
/*       */           }
/* 33264 */           ensureUninterpretedOptionIsMutable();
/* 33265 */           this.uninterpretedOption_.set(index, value);
/* 33266 */           onChanged();
/*       */         } else {
/* 33268 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 33270 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 33281 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33282 */           ensureUninterpretedOptionIsMutable();
/* 33283 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 33284 */           onChanged();
/*       */         } else {
/* 33286 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 33288 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
/* 33298 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33299 */           if (value == null) {
/* 33300 */             throw new NullPointerException();
/*       */           }
/* 33302 */           ensureUninterpretedOptionIsMutable();
/* 33303 */           this.uninterpretedOption_.add(value);
/* 33304 */           onChanged();
/*       */         } else {
/* 33306 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 33308 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 33319 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33320 */           if (value == null) {
/* 33321 */             throw new NullPointerException();
/*       */           }
/* 33323 */           ensureUninterpretedOptionIsMutable();
/* 33324 */           this.uninterpretedOption_.add(index, value);
/* 33325 */           onChanged();
/*       */         } else {
/* 33327 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 33329 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 33340 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33341 */           ensureUninterpretedOptionIsMutable();
/* 33342 */           this.uninterpretedOption_.add(builderForValue.build());
/* 33343 */           onChanged();
/*       */         } else {
/* 33345 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 33347 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 33358 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33359 */           ensureUninterpretedOptionIsMutable();
/* 33360 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 33361 */           onChanged();
/*       */         } else {
/* 33363 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 33365 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
/* 33376 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33377 */           ensureUninterpretedOptionIsMutable();
/* 33378 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 33380 */           onChanged();
/*       */         } else {
/* 33382 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 33384 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 33394 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33395 */           this.uninterpretedOption_ = Collections.emptyList();
/* 33396 */           this.bitField0_ &= 0xFFFFFFFD;
/* 33397 */           onChanged();
/*       */         } else {
/* 33399 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 33401 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 33411 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33412 */           ensureUninterpretedOptionIsMutable();
/* 33413 */           this.uninterpretedOption_.remove(index);
/* 33414 */           onChanged();
/*       */         } else {
/* 33416 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 33418 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 33429 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 33440 */         if (this.uninterpretedOptionBuilder_ == null)
/* 33441 */           return this.uninterpretedOption_.get(index); 
/* 33442 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 33454 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 33455 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 33457 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 33468 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 33469 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 33480 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 33481 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 33492 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 33497 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 33498 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 33503 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x2) != 0), getParentForChildren(), isClean());
/* 33504 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 33506 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 33511 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 33517 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 33527 */     private static final EnumValueOptions DEFAULT_INSTANCE = new EnumValueOptions();
/*       */ 
/*       */     
/*       */     public static EnumValueOptions getDefaultInstance() {
/* 33531 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 33535 */     public static final Parser<EnumValueOptions> PARSER = new AbstractParser<EnumValueOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.EnumValueOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 33541 */           return new DescriptorProtos.EnumValueOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<EnumValueOptions> parser() {
/* 33546 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<EnumValueOptions> getParserForType() {
/* 33551 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public EnumValueOptions getDefaultInstanceForType() {
/* 33556 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface ServiceOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<ServiceOptions>
/*       */   {
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class ServiceOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<ServiceOptions>
/*       */     implements ServiceOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 33;
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private ServiceOptions(GeneratedMessageV3.ExtendableBuilder<ServiceOptions, ?> builder)
/*       */     {
/* 33646 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 33819 */       this.memoizedIsInitialized = -1; } private ServiceOptions() { this.memoizedIsInitialized = -1; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new ServiceOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private ServiceOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 264: this.bitField0_ |= 0x1; this.deprecated_ = input.readBool(); continue;case 7994: if ((mutable_bitField0_ & 0x2) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x2; }  this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x2) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)ServiceOptions.class, (Class)Builder.class); } public boolean hasDeprecated() { return ((this.bitField0_ & 0x1) != 0); } public boolean getDeprecated() { return this.deprecated_; } public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); }
/*       */     public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); }
/*       */     public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 33822 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 33823 */       if (isInitialized == 1) return true; 
/* 33824 */       if (isInitialized == 0) return false;
/*       */       
/* 33826 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 33827 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 33828 */           this.memoizedIsInitialized = 0;
/* 33829 */           return false;
/*       */         } 
/*       */       } 
/* 33832 */       if (!extensionsAreInitialized()) {
/* 33833 */         this.memoizedIsInitialized = 0;
/* 33834 */         return false;
/*       */       } 
/* 33836 */       this.memoizedIsInitialized = 1;
/* 33837 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 33845 */       GeneratedMessageV3.ExtendableMessage<ServiceOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 33846 */       if ((this.bitField0_ & 0x1) != 0) {
/* 33847 */         output.writeBool(33, this.deprecated_);
/*       */       }
/* 33849 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 33850 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 33852 */       extensionWriter.writeUntil(536870912, output);
/* 33853 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 33858 */       int size = this.memoizedSize;
/* 33859 */       if (size != -1) return size;
/*       */       
/* 33861 */       size = 0;
/* 33862 */       if ((this.bitField0_ & 0x1) != 0) {
/* 33863 */         size += 
/* 33864 */           CodedOutputStream.computeBoolSize(33, this.deprecated_);
/*       */       }
/* 33866 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 33867 */         size += 
/* 33868 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 33870 */       size += extensionsSerializedSize();
/* 33871 */       size += this.unknownFields.getSerializedSize();
/* 33872 */       this.memoizedSize = size;
/* 33873 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 33878 */       if (obj == this) {
/* 33879 */         return true;
/*       */       }
/* 33881 */       if (!(obj instanceof ServiceOptions)) {
/* 33882 */         return super.equals(obj);
/*       */       }
/* 33884 */       ServiceOptions other = (ServiceOptions)obj;
/*       */       
/* 33886 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 33887 */       if (hasDeprecated() && 
/* 33888 */         getDeprecated() != other
/* 33889 */         .getDeprecated()) return false;
/*       */ 
/*       */       
/* 33892 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 33893 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 33894 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 33895 */         return false; 
/* 33896 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 33901 */       if (this.memoizedHashCode != 0) {
/* 33902 */         return this.memoizedHashCode;
/*       */       }
/* 33904 */       int hash = 41;
/* 33905 */       hash = 19 * hash + getDescriptor().hashCode();
/* 33906 */       if (hasDeprecated()) {
/* 33907 */         hash = 37 * hash + 33;
/* 33908 */         hash = 53 * hash + Internal.hashBoolean(
/* 33909 */             getDeprecated());
/*       */       } 
/* 33911 */       if (getUninterpretedOptionCount() > 0) {
/* 33912 */         hash = 37 * hash + 999;
/* 33913 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 33915 */       hash = hashFields(hash, getExtensionFields());
/* 33916 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 33917 */       this.memoizedHashCode = hash;
/* 33918 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 33924 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33930 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 33935 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33941 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ServiceOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 33945 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 33951 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ServiceOptions parseFrom(InputStream input) throws IOException {
/* 33955 */       return 
/* 33956 */         GeneratedMessageV3.<ServiceOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33962 */       return 
/* 33963 */         GeneratedMessageV3.<ServiceOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static ServiceOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 33967 */       return 
/* 33968 */         GeneratedMessageV3.<ServiceOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33974 */       return 
/* 33975 */         GeneratedMessageV3.<ServiceOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(CodedInputStream input) throws IOException {
/* 33980 */       return 
/* 33981 */         GeneratedMessageV3.<ServiceOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static ServiceOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 33987 */       return 
/* 33988 */         GeneratedMessageV3.<ServiceOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 33992 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 33994 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(ServiceOptions prototype) {
/* 33997 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 34001 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 34002 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 34008 */       Builder builder = new Builder(parent);
/* 34009 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.ExtendableBuilder<ServiceOptions, Builder>
/*       */       implements DescriptorProtos.ServiceOptionsOrBuilder {
/*       */       private int bitField0_;
/*       */       private boolean deprecated_;
/*       */       private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 34021 */         return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 34027 */         return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_fieldAccessorTable
/* 34028 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.ServiceOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 34309 */         this
/* 34310 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.deprecated_ = false; this.bitField0_ &= 0xFFFFFFFE; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFD; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_descriptor; } public DescriptorProtos.ServiceOptions getDefaultInstanceForType() { return DescriptorProtos.ServiceOptions.getDefaultInstance(); } public DescriptorProtos.ServiceOptions build() { DescriptorProtos.ServiceOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.ServiceOptions buildPartial() { DescriptorProtos.ServiceOptions result = new DescriptorProtos.ServiceOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x1; }  if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x2) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFFD; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.ServiceOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.ServiceOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.ServiceOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.ServiceOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.ServiceOptions) return mergeFrom((DescriptorProtos.ServiceOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.ServiceOptions other) { if (other == DescriptorProtos.ServiceOptions.getDefaultInstance()) return this;  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFD; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.ServiceOptions parsedMessage = null; try { parsedMessage = DescriptorProtos.ServiceOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.ServiceOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x1) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x1; this.deprecated_ = value; onChanged(); return this; }
/*       */       public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFFFFE; this.deprecated_ = false; onChanged(); return this; }
/* 34312 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x2) == 0) {
/* 34313 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 34314 */           this.bitField0_ |= 0x2;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
/* 34329 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34330 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 34332 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 34343 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34344 */           return this.uninterpretedOption_.size();
/*       */         }
/* 34346 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
/* 34357 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34358 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 34360 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 34372 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34373 */           if (value == null) {
/* 34374 */             throw new NullPointerException();
/*       */           }
/* 34376 */           ensureUninterpretedOptionIsMutable();
/* 34377 */           this.uninterpretedOption_.set(index, value);
/* 34378 */           onChanged();
/*       */         } else {
/* 34380 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 34382 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 34393 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34394 */           ensureUninterpretedOptionIsMutable();
/* 34395 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 34396 */           onChanged();
/*       */         } else {
/* 34398 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 34400 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
/* 34410 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34411 */           if (value == null) {
/* 34412 */             throw new NullPointerException();
/*       */           }
/* 34414 */           ensureUninterpretedOptionIsMutable();
/* 34415 */           this.uninterpretedOption_.add(value);
/* 34416 */           onChanged();
/*       */         } else {
/* 34418 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 34420 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 34431 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34432 */           if (value == null) {
/* 34433 */             throw new NullPointerException();
/*       */           }
/* 34435 */           ensureUninterpretedOptionIsMutable();
/* 34436 */           this.uninterpretedOption_.add(index, value);
/* 34437 */           onChanged();
/*       */         } else {
/* 34439 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 34441 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 34452 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34453 */           ensureUninterpretedOptionIsMutable();
/* 34454 */           this.uninterpretedOption_.add(builderForValue.build());
/* 34455 */           onChanged();
/*       */         } else {
/* 34457 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 34459 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 34470 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34471 */           ensureUninterpretedOptionIsMutable();
/* 34472 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 34473 */           onChanged();
/*       */         } else {
/* 34475 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 34477 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
/* 34488 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34489 */           ensureUninterpretedOptionIsMutable();
/* 34490 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 34492 */           onChanged();
/*       */         } else {
/* 34494 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 34496 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 34506 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34507 */           this.uninterpretedOption_ = Collections.emptyList();
/* 34508 */           this.bitField0_ &= 0xFFFFFFFD;
/* 34509 */           onChanged();
/*       */         } else {
/* 34511 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 34513 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 34523 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34524 */           ensureUninterpretedOptionIsMutable();
/* 34525 */           this.uninterpretedOption_.remove(index);
/* 34526 */           onChanged();
/*       */         } else {
/* 34528 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 34530 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 34541 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 34552 */         if (this.uninterpretedOptionBuilder_ == null)
/* 34553 */           return this.uninterpretedOption_.get(index); 
/* 34554 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 34566 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 34567 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 34569 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 34580 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 34581 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 34592 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 34593 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 34604 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 34609 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 34610 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 34615 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x2) != 0), getParentForChildren(), isClean());
/* 34616 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 34618 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 34623 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 34629 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 34639 */     private static final ServiceOptions DEFAULT_INSTANCE = new ServiceOptions();
/*       */ 
/*       */     
/*       */     public static ServiceOptions getDefaultInstance() {
/* 34643 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 34647 */     public static final Parser<ServiceOptions> PARSER = new AbstractParser<ServiceOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.ServiceOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 34653 */           return new DescriptorProtos.ServiceOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<ServiceOptions> parser() {
/* 34658 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<ServiceOptions> getParserForType() {
/* 34663 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public ServiceOptions getDefaultInstanceForType() {
/* 34668 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface MethodOptionsOrBuilder
/*       */     extends GeneratedMessageV3.ExtendableMessageOrBuilder<MethodOptions>
/*       */   {
/*       */     boolean hasDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean getDeprecated();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIdempotencyLevel();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.MethodOptions.IdempotencyLevel getIdempotencyLevel();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOption getUninterpretedOption(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getUninterpretedOptionCount();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class MethodOptions
/*       */     extends GeneratedMessageV3.ExtendableMessage<MethodOptions>
/*       */     implements MethodOptionsOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int DEPRECATED_FIELD_NUMBER = 33;
/*       */ 
/*       */ 
/*       */     
/*       */     private boolean deprecated_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int IDEMPOTENCY_LEVEL_FIELD_NUMBER = 34;
/*       */ 
/*       */ 
/*       */     
/*       */     private int idempotencyLevel_;
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
/*       */ 
/*       */ 
/*       */     
/*       */     private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private MethodOptions(GeneratedMessageV3.ExtendableBuilder<MethodOptions, ?> builder)
/*       */     {
/* 34769 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 35101 */       this.memoizedIsInitialized = -1; } private MethodOptions() { this.memoizedIsInitialized = -1; this.idempotencyLevel_ = 0; this.uninterpretedOption_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new MethodOptions(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private MethodOptions(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int rawValue; IdempotencyLevel value; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 264: this.bitField0_ |= 0x1; this.deprecated_ = input.readBool(); continue;case 272: rawValue = input.readEnum(); value = IdempotencyLevel.valueOf(rawValue); if (value == null) { unknownFields.mergeVarintField(34, rawValue); continue; }  this.bitField0_ |= 0x2; this.idempotencyLevel_ = rawValue; continue;case 7994: if ((mutable_bitField0_ & 0x4) == 0) { this.uninterpretedOption_ = new ArrayList<>(); mutable_bitField0_ |= 0x4; }  this.uninterpretedOption_.add(input.readMessage(DescriptorProtos.UninterpretedOption.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x4) != 0) this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_MethodOptions_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_MethodOptions_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)MethodOptions.class, (Class)Builder.class); } public enum IdempotencyLevel implements ProtocolMessageEnum {
/*       */       IDEMPOTENCY_UNKNOWN(0), NO_SIDE_EFFECTS(1), IDEMPOTENT(2); public static final int IDEMPOTENCY_UNKNOWN_VALUE = 0; public static final int NO_SIDE_EFFECTS_VALUE = 1; public static final int IDEMPOTENT_VALUE = 2; private static final Internal.EnumLiteMap<IdempotencyLevel> internalValueMap = new Internal.EnumLiteMap<IdempotencyLevel>() { public DescriptorProtos.MethodOptions.IdempotencyLevel findValueByNumber(int number) { return DescriptorProtos.MethodOptions.IdempotencyLevel.forNumber(number); } }
/*       */       ; private static final IdempotencyLevel[] VALUES = values(); private final int value; public final int getNumber() { return this.value; } public static IdempotencyLevel forNumber(int value) { switch (value) { case 0: return IDEMPOTENCY_UNKNOWN;case 1: return NO_SIDE_EFFECTS;case 2: return IDEMPOTENT; }  return null; } public static Internal.EnumLiteMap<IdempotencyLevel> internalGetValueMap() { return internalValueMap; } static {  } public final Descriptors.EnumValueDescriptor getValueDescriptor() { return getDescriptor().getValues().get(ordinal()); } public final Descriptors.EnumDescriptor getDescriptorForType() { return getDescriptor(); } public static final Descriptors.EnumDescriptor getDescriptor() { return DescriptorProtos.MethodOptions.getDescriptor().getEnumTypes().get(0); } IdempotencyLevel(int value) { this.value = value; } } public boolean hasDeprecated() { return ((this.bitField0_ & 0x1) != 0); } public boolean getDeprecated() { return this.deprecated_; } public boolean hasIdempotencyLevel() { return ((this.bitField0_ & 0x2) != 0); } public IdempotencyLevel getIdempotencyLevel() { IdempotencyLevel result = IdempotencyLevel.valueOf(this.idempotencyLevel_); return (result == null) ? IdempotencyLevel.IDEMPOTENCY_UNKNOWN : result; } public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() { return this.uninterpretedOption_; } public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() { return (List)this.uninterpretedOption_; } public int getUninterpretedOptionCount() { return this.uninterpretedOption_.size(); } public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) { return this.uninterpretedOption_.get(index); } public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) { return this.uninterpretedOption_.get(index); }
/* 35104 */     public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 35105 */       if (isInitialized == 1) return true; 
/* 35106 */       if (isInitialized == 0) return false;
/*       */       
/* 35108 */       for (int i = 0; i < getUninterpretedOptionCount(); i++) {
/* 35109 */         if (!getUninterpretedOption(i).isInitialized()) {
/* 35110 */           this.memoizedIsInitialized = 0;
/* 35111 */           return false;
/*       */         } 
/*       */       } 
/* 35114 */       if (!extensionsAreInitialized()) {
/* 35115 */         this.memoizedIsInitialized = 0;
/* 35116 */         return false;
/*       */       } 
/* 35118 */       this.memoizedIsInitialized = 1;
/* 35119 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 35127 */       GeneratedMessageV3.ExtendableMessage<MethodOptions>.ExtensionWriter extensionWriter = newExtensionWriter();
/* 35128 */       if ((this.bitField0_ & 0x1) != 0) {
/* 35129 */         output.writeBool(33, this.deprecated_);
/*       */       }
/* 35131 */       if ((this.bitField0_ & 0x2) != 0) {
/* 35132 */         output.writeEnum(34, this.idempotencyLevel_);
/*       */       }
/* 35134 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 35135 */         output.writeMessage(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 35137 */       extensionWriter.writeUntil(536870912, output);
/* 35138 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 35143 */       int size = this.memoizedSize;
/* 35144 */       if (size != -1) return size;
/*       */       
/* 35146 */       size = 0;
/* 35147 */       if ((this.bitField0_ & 0x1) != 0) {
/* 35148 */         size += 
/* 35149 */           CodedOutputStream.computeBoolSize(33, this.deprecated_);
/*       */       }
/* 35151 */       if ((this.bitField0_ & 0x2) != 0) {
/* 35152 */         size += 
/* 35153 */           CodedOutputStream.computeEnumSize(34, this.idempotencyLevel_);
/*       */       }
/* 35155 */       for (int i = 0; i < this.uninterpretedOption_.size(); i++) {
/* 35156 */         size += 
/* 35157 */           CodedOutputStream.computeMessageSize(999, this.uninterpretedOption_.get(i));
/*       */       }
/* 35159 */       size += extensionsSerializedSize();
/* 35160 */       size += this.unknownFields.getSerializedSize();
/* 35161 */       this.memoizedSize = size;
/* 35162 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 35167 */       if (obj == this) {
/* 35168 */         return true;
/*       */       }
/* 35170 */       if (!(obj instanceof MethodOptions)) {
/* 35171 */         return super.equals(obj);
/*       */       }
/* 35173 */       MethodOptions other = (MethodOptions)obj;
/*       */       
/* 35175 */       if (hasDeprecated() != other.hasDeprecated()) return false; 
/* 35176 */       if (hasDeprecated() && 
/* 35177 */         getDeprecated() != other
/* 35178 */         .getDeprecated()) return false;
/*       */       
/* 35180 */       if (hasIdempotencyLevel() != other.hasIdempotencyLevel()) return false; 
/* 35181 */       if (hasIdempotencyLevel() && 
/* 35182 */         this.idempotencyLevel_ != other.idempotencyLevel_) return false;
/*       */ 
/*       */       
/* 35185 */       if (!getUninterpretedOptionList().equals(other.getUninterpretedOptionList())) return false; 
/* 35186 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 35187 */       if (!getExtensionFields().equals(other.getExtensionFields()))
/* 35188 */         return false; 
/* 35189 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 35194 */       if (this.memoizedHashCode != 0) {
/* 35195 */         return this.memoizedHashCode;
/*       */       }
/* 35197 */       int hash = 41;
/* 35198 */       hash = 19 * hash + getDescriptor().hashCode();
/* 35199 */       if (hasDeprecated()) {
/* 35200 */         hash = 37 * hash + 33;
/* 35201 */         hash = 53 * hash + Internal.hashBoolean(
/* 35202 */             getDeprecated());
/*       */       } 
/* 35204 */       if (hasIdempotencyLevel()) {
/* 35205 */         hash = 37 * hash + 34;
/* 35206 */         hash = 53 * hash + this.idempotencyLevel_;
/*       */       } 
/* 35208 */       if (getUninterpretedOptionCount() > 0) {
/* 35209 */         hash = 37 * hash + 999;
/* 35210 */         hash = 53 * hash + getUninterpretedOptionList().hashCode();
/*       */       } 
/* 35212 */       hash = hashFields(hash, getExtensionFields());
/* 35213 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 35214 */       this.memoizedHashCode = hash;
/* 35215 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 35221 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 35227 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 35232 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 35238 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MethodOptions parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 35242 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 35248 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MethodOptions parseFrom(InputStream input) throws IOException {
/* 35252 */       return 
/* 35253 */         GeneratedMessageV3.<MethodOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 35259 */       return 
/* 35260 */         GeneratedMessageV3.<MethodOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static MethodOptions parseDelimitedFrom(InputStream input) throws IOException {
/* 35264 */       return 
/* 35265 */         GeneratedMessageV3.<MethodOptions>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 35271 */       return 
/* 35272 */         GeneratedMessageV3.<MethodOptions>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(CodedInputStream input) throws IOException {
/* 35277 */       return 
/* 35278 */         GeneratedMessageV3.<MethodOptions>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static MethodOptions parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 35284 */       return 
/* 35285 */         GeneratedMessageV3.<MethodOptions>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 35289 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 35291 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(MethodOptions prototype) {
/* 35294 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 35298 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 35299 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 35305 */       Builder builder = new Builder(parent);
/* 35306 */       return builder;
/*       */     }
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.ExtendableBuilder<MethodOptions, Builder> implements DescriptorProtos.MethodOptionsOrBuilder {
/*       */       private int bitField0_;
/*       */       private boolean deprecated_;
/*       */       private int idempotencyLevel_;
/*       */       private List<DescriptorProtos.UninterpretedOption> uninterpretedOption_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> uninterpretedOptionBuilder_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 35318 */         return DescriptorProtos.internal_static_google_protobuf_MethodOptions_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 35324 */         return DescriptorProtos.internal_static_google_protobuf_MethodOptions_fieldAccessorTable
/* 35325 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.MethodOptions.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 35615 */         this.idempotencyLevel_ = 0;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 35657 */         this
/* 35658 */           .uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.idempotencyLevel_ = 0; this.uninterpretedOption_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getUninterpretedOptionFieldBuilder();  } public Builder clear() { super.clear(); this.deprecated_ = false; this.bitField0_ &= 0xFFFFFFFE; this.idempotencyLevel_ = 0; this.bitField0_ &= 0xFFFFFFFD; if (this.uninterpretedOptionBuilder_ == null) { this.uninterpretedOption_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFB; } else { this.uninterpretedOptionBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_MethodOptions_descriptor; } public DescriptorProtos.MethodOptions getDefaultInstanceForType() { return DescriptorProtos.MethodOptions.getDefaultInstance(); } public DescriptorProtos.MethodOptions build() { DescriptorProtos.MethodOptions result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.MethodOptions buildPartial() { DescriptorProtos.MethodOptions result = new DescriptorProtos.MethodOptions(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) { result.deprecated_ = this.deprecated_; to_bitField0_ |= 0x1; }  if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x2;  result.idempotencyLevel_ = this.idempotencyLevel_; if (this.uninterpretedOptionBuilder_ == null) { if ((this.bitField0_ & 0x4) != 0) { this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_); this.bitField0_ &= 0xFFFFFFFB; }  result.uninterpretedOption_ = this.uninterpretedOption_; } else { result.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build(); }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.MethodOptions, Type> extension, Type value) { return super.<Type>setExtension(extension, value); } public <Type> Builder setExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.MethodOptions, List<Type>> extension, int index, Type value) { return super.<Type>setExtension(extension, index, value); } public <Type> Builder addExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.MethodOptions, List<Type>> extension, Type value) { return super.<Type>addExtension(extension, value); } public <Type> Builder clearExtension(GeneratedMessage.GeneratedExtension<DescriptorProtos.MethodOptions, ?> extension) { return super.clearExtension(extension); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.MethodOptions) return mergeFrom((DescriptorProtos.MethodOptions)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.MethodOptions other) { if (other == DescriptorProtos.MethodOptions.getDefaultInstance()) return this;  if (other.hasDeprecated()) setDeprecated(other.getDeprecated());  if (other.hasIdempotencyLevel()) setIdempotencyLevel(other.getIdempotencyLevel());  if (this.uninterpretedOptionBuilder_ == null) { if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOption_.isEmpty()) { this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFB; } else { ensureUninterpretedOptionIsMutable(); this.uninterpretedOption_.addAll(other.uninterpretedOption_); }  onChanged(); }  } else if (!other.uninterpretedOption_.isEmpty()) { if (this.uninterpretedOptionBuilder_.isEmpty()) { this.uninterpretedOptionBuilder_.dispose(); this.uninterpretedOptionBuilder_ = null; this.uninterpretedOption_ = other.uninterpretedOption_; this.bitField0_ &= 0xFFFFFFFB; this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getUninterpretedOptionFieldBuilder() : null; } else { this.uninterpretedOptionBuilder_.addAllMessages(other.uninterpretedOption_); }  }  mergeExtensionFields(other); mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getUninterpretedOptionCount(); i++) { if (!getUninterpretedOption(i).isInitialized()) return false;  }  if (!extensionsAreInitialized()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.MethodOptions parsedMessage = null; try { parsedMessage = DescriptorProtos.MethodOptions.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.MethodOptions)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasDeprecated() { return ((this.bitField0_ & 0x1) != 0); } public boolean getDeprecated() { return this.deprecated_; } public Builder setDeprecated(boolean value) { this.bitField0_ |= 0x1; this.deprecated_ = value; onChanged(); return this; } public Builder clearDeprecated() { this.bitField0_ &= 0xFFFFFFFE; this.deprecated_ = false; onChanged(); return this; } public boolean hasIdempotencyLevel() { return ((this.bitField0_ & 0x2) != 0); } public DescriptorProtos.MethodOptions.IdempotencyLevel getIdempotencyLevel() { DescriptorProtos.MethodOptions.IdempotencyLevel result = DescriptorProtos.MethodOptions.IdempotencyLevel.valueOf(this.idempotencyLevel_); return (result == null) ? DescriptorProtos.MethodOptions.IdempotencyLevel.IDEMPOTENCY_UNKNOWN : result; } public Builder setIdempotencyLevel(DescriptorProtos.MethodOptions.IdempotencyLevel value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.idempotencyLevel_ = value.getNumber(); onChanged(); return this; }
/*       */       public Builder clearIdempotencyLevel() { this.bitField0_ &= 0xFFFFFFFD; this.idempotencyLevel_ = 0; onChanged(); return this; }
/* 35660 */       private void ensureUninterpretedOptionIsMutable() { if ((this.bitField0_ & 0x4) == 0) {
/* 35661 */           this.uninterpretedOption_ = new ArrayList<>(this.uninterpretedOption_);
/* 35662 */           this.bitField0_ |= 0x4;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption> getUninterpretedOptionList() {
/* 35677 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35678 */           return Collections.unmodifiableList(this.uninterpretedOption_);
/*       */         }
/* 35680 */         return this.uninterpretedOptionBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getUninterpretedOptionCount() {
/* 35691 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35692 */           return this.uninterpretedOption_.size();
/*       */         }
/* 35694 */         return this.uninterpretedOptionBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption getUninterpretedOption(int index) {
/* 35705 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35706 */           return this.uninterpretedOption_.get(index);
/*       */         }
/* 35708 */         return this.uninterpretedOptionBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 35720 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35721 */           if (value == null) {
/* 35722 */             throw new NullPointerException();
/*       */           }
/* 35724 */           ensureUninterpretedOptionIsMutable();
/* 35725 */           this.uninterpretedOption_.set(index, value);
/* 35726 */           onChanged();
/*       */         } else {
/* 35728 */           this.uninterpretedOptionBuilder_.setMessage(index, value);
/*       */         } 
/* 35730 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 35741 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35742 */           ensureUninterpretedOptionIsMutable();
/* 35743 */           this.uninterpretedOption_.set(index, builderForValue.build());
/* 35744 */           onChanged();
/*       */         } else {
/* 35746 */           this.uninterpretedOptionBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 35748 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption value) {
/* 35758 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35759 */           if (value == null) {
/* 35760 */             throw new NullPointerException();
/*       */           }
/* 35762 */           ensureUninterpretedOptionIsMutable();
/* 35763 */           this.uninterpretedOption_.add(value);
/* 35764 */           onChanged();
/*       */         } else {
/* 35766 */           this.uninterpretedOptionBuilder_.addMessage(value);
/*       */         } 
/* 35768 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption value) {
/* 35779 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35780 */           if (value == null) {
/* 35781 */             throw new NullPointerException();
/*       */           }
/* 35783 */           ensureUninterpretedOptionIsMutable();
/* 35784 */           this.uninterpretedOption_.add(index, value);
/* 35785 */           onChanged();
/*       */         } else {
/* 35787 */           this.uninterpretedOptionBuilder_.addMessage(index, value);
/*       */         } 
/* 35789 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 35800 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35801 */           ensureUninterpretedOptionIsMutable();
/* 35802 */           this.uninterpretedOption_.add(builderForValue.build());
/* 35803 */           onChanged();
/*       */         } else {
/* 35805 */           this.uninterpretedOptionBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 35807 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addUninterpretedOption(int index, DescriptorProtos.UninterpretedOption.Builder builderForValue) {
/* 35818 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35819 */           ensureUninterpretedOptionIsMutable();
/* 35820 */           this.uninterpretedOption_.add(index, builderForValue.build());
/* 35821 */           onChanged();
/*       */         } else {
/* 35823 */           this.uninterpretedOptionBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 35825 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllUninterpretedOption(Iterable<? extends DescriptorProtos.UninterpretedOption> values) {
/* 35836 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35837 */           ensureUninterpretedOptionIsMutable();
/* 35838 */           AbstractMessageLite.Builder.addAll(values, this.uninterpretedOption_);
/*       */           
/* 35840 */           onChanged();
/*       */         } else {
/* 35842 */           this.uninterpretedOptionBuilder_.addAllMessages(values);
/*       */         } 
/* 35844 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearUninterpretedOption() {
/* 35854 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35855 */           this.uninterpretedOption_ = Collections.emptyList();
/* 35856 */           this.bitField0_ &= 0xFFFFFFFB;
/* 35857 */           onChanged();
/*       */         } else {
/* 35859 */           this.uninterpretedOptionBuilder_.clear();
/*       */         } 
/* 35861 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeUninterpretedOption(int index) {
/* 35871 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35872 */           ensureUninterpretedOptionIsMutable();
/* 35873 */           this.uninterpretedOption_.remove(index);
/* 35874 */           onChanged();
/*       */         } else {
/* 35876 */           this.uninterpretedOptionBuilder_.remove(index);
/*       */         } 
/* 35878 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int index) {
/* 35889 */         return getUninterpretedOptionFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int index) {
/* 35900 */         if (this.uninterpretedOptionBuilder_ == null)
/* 35901 */           return this.uninterpretedOption_.get(index); 
/* 35902 */         return this.uninterpretedOptionBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionOrBuilderList() {
/* 35914 */         if (this.uninterpretedOptionBuilder_ != null) {
/* 35915 */           return this.uninterpretedOptionBuilder_.getMessageOrBuilderList();
/*       */         }
/* 35917 */         return Collections.unmodifiableList((List)this.uninterpretedOption_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
/* 35928 */         return getUninterpretedOptionFieldBuilder().addBuilder(
/* 35929 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int index) {
/* 35940 */         return getUninterpretedOptionFieldBuilder().addBuilder(index, 
/* 35941 */             DescriptorProtos.UninterpretedOption.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.UninterpretedOption.Builder> getUninterpretedOptionBuilderList() {
/* 35952 */         return getUninterpretedOptionFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption, DescriptorProtos.UninterpretedOption.Builder, DescriptorProtos.UninterpretedOptionOrBuilder> getUninterpretedOptionFieldBuilder() {
/* 35957 */         if (this.uninterpretedOptionBuilder_ == null) {
/* 35958 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 35963 */             .uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3<>(this.uninterpretedOption_, ((this.bitField0_ & 0x4) != 0), getParentForChildren(), isClean());
/* 35964 */           this.uninterpretedOption_ = null;
/*       */         } 
/* 35966 */         return this.uninterpretedOptionBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 35971 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 35977 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 35987 */     private static final MethodOptions DEFAULT_INSTANCE = new MethodOptions();
/*       */ 
/*       */     
/*       */     public static MethodOptions getDefaultInstance() {
/* 35991 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 35995 */     public static final Parser<MethodOptions> PARSER = new AbstractParser<MethodOptions>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.MethodOptions parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 36001 */           return new DescriptorProtos.MethodOptions(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<MethodOptions> parser() {
/* 36006 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<MethodOptions> getParserForType() {
/* 36011 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public MethodOptions getDefaultInstanceForType() {
/* 36016 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface UninterpretedOptionOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<DescriptorProtos.UninterpretedOption.NamePart> getNameList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOption.NamePart getName(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     int getNameCount();
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.UninterpretedOption.NamePartOrBuilder> getNameOrBuilderList();
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.UninterpretedOption.NamePartOrBuilder getNameOrBuilder(int param1Int);
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasIdentifierValue();
/*       */ 
/*       */ 
/*       */     
/*       */     String getIdentifierValue();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getIdentifierValueBytes();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasPositiveIntValue();
/*       */ 
/*       */ 
/*       */     
/*       */     long getPositiveIntValue();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasNegativeIntValue();
/*       */ 
/*       */ 
/*       */     
/*       */     long getNegativeIntValue();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasDoubleValue();
/*       */ 
/*       */ 
/*       */     
/*       */     double getDoubleValue();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasStringValue();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getStringValue();
/*       */ 
/*       */ 
/*       */     
/*       */     boolean hasAggregateValue();
/*       */ 
/*       */ 
/*       */     
/*       */     String getAggregateValue();
/*       */ 
/*       */ 
/*       */     
/*       */     ByteString getAggregateValueBytes();
/*       */   }
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class UninterpretedOption
/*       */     extends GeneratedMessageV3
/*       */     implements UninterpretedOptionOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */     
/*       */     private int bitField0_;
/*       */ 
/*       */     
/*       */     public static final int NAME_FIELD_NUMBER = 2;
/*       */ 
/*       */     
/*       */     private List<NamePart> name_;
/*       */ 
/*       */     
/*       */     public static final int IDENTIFIER_VALUE_FIELD_NUMBER = 3;
/*       */ 
/*       */     
/*       */     private volatile Object identifierValue_;
/*       */ 
/*       */     
/*       */     public static final int POSITIVE_INT_VALUE_FIELD_NUMBER = 4;
/*       */ 
/*       */     
/*       */     private long positiveIntValue_;
/*       */ 
/*       */     
/*       */     public static final int NEGATIVE_INT_VALUE_FIELD_NUMBER = 5;
/*       */ 
/*       */     
/*       */     private long negativeIntValue_;
/*       */ 
/*       */     
/*       */     public static final int DOUBLE_VALUE_FIELD_NUMBER = 6;
/*       */ 
/*       */     
/*       */     private double doubleValue_;
/*       */ 
/*       */     
/*       */     public static final int STRING_VALUE_FIELD_NUMBER = 7;
/*       */ 
/*       */     
/*       */     private ByteString stringValue_;
/*       */ 
/*       */     
/*       */     public static final int AGGREGATE_VALUE_FIELD_NUMBER = 8;
/*       */ 
/*       */     
/*       */     private volatile Object aggregateValue_;
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */     
/*       */     private UninterpretedOption(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 36161 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 37215 */       this.memoizedIsInitialized = -1; } private UninterpretedOption() { this.memoizedIsInitialized = -1; this.name_ = Collections.emptyList(); this.identifierValue_ = ""; this.stringValue_ = ByteString.EMPTY; this.aggregateValue_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new UninterpretedOption(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private UninterpretedOption(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 18: if ((mutable_bitField0_ & 0x1) == 0) { this.name_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.name_.add(input.readMessage(NamePart.PARSER, extensionRegistry)); continue;case 26: bs = input.readBytes(); this.bitField0_ |= 0x1; this.identifierValue_ = bs; continue;case 32: this.bitField0_ |= 0x2; this.positiveIntValue_ = input.readUInt64(); continue;case 40: this.bitField0_ |= 0x4; this.negativeIntValue_ = input.readInt64(); continue;case 49: this.bitField0_ |= 0x8; this.doubleValue_ = input.readDouble(); continue;case 58: this.bitField0_ |= 0x10; this.stringValue_ = input.readBytes(); continue;case 66: bs = input.readBytes(); this.bitField0_ |= 0x20; this.aggregateValue_ = bs; continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.name_ = Collections.unmodifiableList(this.name_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)UninterpretedOption.class, (Class)Builder.class); } public static final class NamePart extends GeneratedMessageV3 implements NamePartOrBuilder {
/*       */       private static final long serialVersionUID = 0L; private int bitField0_; public static final int NAME_PART_FIELD_NUMBER = 1; private volatile Object namePart_; public static final int IS_EXTENSION_FIELD_NUMBER = 2; private boolean isExtension_; private byte memoizedIsInitialized; private NamePart(GeneratedMessageV3.Builder<?> builder) { super(builder); this.memoizedIsInitialized = -1; } private NamePart() { this.memoizedIsInitialized = -1; this.namePart_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new NamePart(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private NamePart(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { ByteString bs; int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: bs = input.readBytes(); this.bitField0_ |= 0x1; this.namePart_ = bs; continue;case 16: this.bitField0_ |= 0x2; this.isExtension_ = input.readBool(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)NamePart.class, (Class)Builder.class); } public boolean hasNamePart() { return ((this.bitField0_ & 0x1) != 0); } public String getNamePart() { Object ref = this.namePart_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.namePart_ = s;  return s; } public ByteString getNamePartBytes() { Object ref = this.namePart_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.namePart_ = b; return b; }  return (ByteString)ref; } public boolean hasIsExtension() { return ((this.bitField0_ & 0x2) != 0); } public boolean getIsExtension() { return this.isExtension_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  if (!hasNamePart()) { this.memoizedIsInitialized = 0; return false; }  if (!hasIsExtension()) { this.memoizedIsInitialized = 0; return false; }  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { if ((this.bitField0_ & 0x1) != 0) GeneratedMessageV3.writeString(output, 1, this.namePart_);  if ((this.bitField0_ & 0x2) != 0) output.writeBool(2, this.isExtension_);  this.unknownFields.writeTo(output); } public int getSerializedSize() { int size = this.memoizedSize; if (size != -1) return size;  size = 0; if ((this.bitField0_ & 0x1) != 0) size += GeneratedMessageV3.computeStringSize(1, this.namePart_);  if ((this.bitField0_ & 0x2) != 0) size += CodedOutputStream.computeBoolSize(2, this.isExtension_);  size += this.unknownFields.getSerializedSize(); this.memoizedSize = size; return size; } public boolean equals(Object obj) { if (obj == this) return true;  if (!(obj instanceof NamePart)) return super.equals(obj);  NamePart other = (NamePart)obj; if (hasNamePart() != other.hasNamePart()) return false;  if (hasNamePart() && !getNamePart().equals(other.getNamePart())) return false;  if (hasIsExtension() != other.hasIsExtension()) return false;  if (hasIsExtension() && getIsExtension() != other.getIsExtension()) return false;  if (!this.unknownFields.equals(other.unknownFields)) return false;  return true; } public int hashCode() { if (this.memoizedHashCode != 0) return this.memoizedHashCode;  int hash = 41; hash = 19 * hash + getDescriptor().hashCode(); if (hasNamePart()) { hash = 37 * hash + 1; hash = 53 * hash + getNamePart().hashCode(); }  if (hasIsExtension()) { hash = 37 * hash + 2; hash = 53 * hash + Internal.hashBoolean(getIsExtension()); }  hash = 29 * hash + this.unknownFields.hashCode(); this.memoizedHashCode = hash; return hash; } public static NamePart parseFrom(ByteBuffer data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static NamePart parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static NamePart parseFrom(ByteString data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static NamePart parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static NamePart parseFrom(byte[] data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static NamePart parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static NamePart parseFrom(InputStream input) throws IOException { return GeneratedMessageV3.<NamePart>parseWithIOException(PARSER, input); } public static NamePart parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<NamePart>parseWithIOException(PARSER, input, extensionRegistry); } public static NamePart parseDelimitedFrom(InputStream input) throws IOException { return GeneratedMessageV3.<NamePart>parseDelimitedWithIOException(PARSER, input); } public static NamePart parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<NamePart>parseDelimitedWithIOException(PARSER, input, extensionRegistry); } public static NamePart parseFrom(CodedInputStream input) throws IOException { return GeneratedMessageV3.<NamePart>parseWithIOException(PARSER, input); } public static NamePart parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<NamePart>parseWithIOException(PARSER, input, extensionRegistry); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder() { return DEFAULT_INSTANCE.toBuilder(); } public static Builder newBuilder(NamePart prototype) { return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype); } public Builder toBuilder() { return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this); } protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DescriptorProtos.UninterpretedOption.NamePartOrBuilder {
/*       */         private int bitField0_; private Object namePart_; private boolean isExtension_; public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)DescriptorProtos.UninterpretedOption.NamePart.class, (Class)Builder.class); } private Builder() { this.namePart_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.namePart_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.namePart_ = ""; this.bitField0_ &= 0xFFFFFFFE; this.isExtension_ = false; this.bitField0_ &= 0xFFFFFFFD; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor; } public DescriptorProtos.UninterpretedOption.NamePart getDefaultInstanceForType() { return DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance(); } public DescriptorProtos.UninterpretedOption.NamePart build() { DescriptorProtos.UninterpretedOption.NamePart result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.UninterpretedOption.NamePart buildPartial() { DescriptorProtos.UninterpretedOption.NamePart result = new DescriptorProtos.UninterpretedOption.NamePart(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((from_bitField0_ & 0x1) != 0) to_bitField0_ |= 0x1;  result.namePart_ = this.namePart_; if ((from_bitField0_ & 0x2) != 0) { result.isExtension_ = this.isExtension_; to_bitField0_ |= 0x2; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.UninterpretedOption.NamePart) return mergeFrom((DescriptorProtos.UninterpretedOption.NamePart)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.UninterpretedOption.NamePart other) { if (other == DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance()) return this;  if (other.hasNamePart()) { this.bitField0_ |= 0x1; this.namePart_ = other.namePart_; onChanged(); }  if (other.hasIsExtension()) setIsExtension(other.getIsExtension());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { if (!hasNamePart()) return false;  if (!hasIsExtension()) return false;  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.UninterpretedOption.NamePart parsedMessage = null; try { parsedMessage = DescriptorProtos.UninterpretedOption.NamePart.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.UninterpretedOption.NamePart)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } public boolean hasNamePart() { return ((this.bitField0_ & 0x1) != 0); } public String getNamePart() { Object ref = this.namePart_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.namePart_ = s;  return s; }  return (String)ref; } public ByteString getNamePartBytes() { Object ref = this.namePart_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.namePart_ = b; return b; }  return (ByteString)ref; } public Builder setNamePart(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.namePart_ = value; onChanged(); return this; } public Builder clearNamePart() { this.bitField0_ &= 0xFFFFFFFE; this.namePart_ = DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance().getNamePart(); onChanged(); return this; } public Builder setNamePartBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x1; this.namePart_ = value; onChanged(); return this; } public boolean hasIsExtension() { return ((this.bitField0_ & 0x2) != 0); } public boolean getIsExtension() { return this.isExtension_; } public Builder setIsExtension(boolean value) { this.bitField0_ |= 0x2; this.isExtension_ = value; onChanged(); return this; } public Builder clearIsExtension() { this.bitField0_ &= 0xFFFFFFFD; this.isExtension_ = false; onChanged(); return this; } public final Builder setUnknownFields(UnknownFieldSet unknownFields) { return super.setUnknownFields(unknownFields); } public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) { return super.mergeUnknownFields(unknownFields); } } private static final NamePart DEFAULT_INSTANCE = new NamePart(); public static NamePart getDefaultInstance() { return DEFAULT_INSTANCE; } @Deprecated public static final Parser<NamePart> PARSER = new AbstractParser<NamePart>() { public DescriptorProtos.UninterpretedOption.NamePart parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new DescriptorProtos.UninterpretedOption.NamePart(input, extensionRegistry); } }
/* 37218 */       ; public static Parser<NamePart> parser() { return PARSER; } public Parser<NamePart> getParserForType() { return PARSER; } public NamePart getDefaultInstanceForType() { return DEFAULT_INSTANCE; } } public List<NamePart> getNameList() { return this.name_; } public List<? extends NamePartOrBuilder> getNameOrBuilderList() { return (List)this.name_; } public int getNameCount() { return this.name_.size(); } public NamePart getName(int index) { return this.name_.get(index); } public NamePartOrBuilder getNameOrBuilder(int index) { return this.name_.get(index); } public boolean hasIdentifierValue() { return ((this.bitField0_ & 0x1) != 0); } public String getIdentifierValue() { Object ref = this.identifierValue_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.identifierValue_ = s;  return s; } public ByteString getIdentifierValueBytes() { Object ref = this.identifierValue_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.identifierValue_ = b; return b; }  return (ByteString)ref; } public boolean hasPositiveIntValue() { return ((this.bitField0_ & 0x2) != 0); } public long getPositiveIntValue() { return this.positiveIntValue_; } public boolean hasNegativeIntValue() { return ((this.bitField0_ & 0x4) != 0); } public long getNegativeIntValue() { return this.negativeIntValue_; } public boolean hasDoubleValue() { return ((this.bitField0_ & 0x8) != 0); } public double getDoubleValue() { return this.doubleValue_; } public boolean hasStringValue() { return ((this.bitField0_ & 0x10) != 0); } public ByteString getStringValue() { return this.stringValue_; } public boolean hasAggregateValue() { return ((this.bitField0_ & 0x20) != 0); } public String getAggregateValue() { Object ref = this.aggregateValue_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.aggregateValue_ = s;  return s; } public ByteString getAggregateValueBytes() { Object ref = this.aggregateValue_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.aggregateValue_ = b; return b; }  return (ByteString)ref; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 37219 */       if (isInitialized == 1) return true; 
/* 37220 */       if (isInitialized == 0) return false;
/*       */       
/* 37222 */       for (int i = 0; i < getNameCount(); i++) {
/* 37223 */         if (!getName(i).isInitialized()) {
/* 37224 */           this.memoizedIsInitialized = 0;
/* 37225 */           return false;
/*       */         } 
/*       */       } 
/* 37228 */       this.memoizedIsInitialized = 1;
/* 37229 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 37235 */       for (int i = 0; i < this.name_.size(); i++) {
/* 37236 */         output.writeMessage(2, this.name_.get(i));
/*       */       }
/* 37238 */       if ((this.bitField0_ & 0x1) != 0) {
/* 37239 */         GeneratedMessageV3.writeString(output, 3, this.identifierValue_);
/*       */       }
/* 37241 */       if ((this.bitField0_ & 0x2) != 0) {
/* 37242 */         output.writeUInt64(4, this.positiveIntValue_);
/*       */       }
/* 37244 */       if ((this.bitField0_ & 0x4) != 0) {
/* 37245 */         output.writeInt64(5, this.negativeIntValue_);
/*       */       }
/* 37247 */       if ((this.bitField0_ & 0x8) != 0) {
/* 37248 */         output.writeDouble(6, this.doubleValue_);
/*       */       }
/* 37250 */       if ((this.bitField0_ & 0x10) != 0) {
/* 37251 */         output.writeBytes(7, this.stringValue_);
/*       */       }
/* 37253 */       if ((this.bitField0_ & 0x20) != 0) {
/* 37254 */         GeneratedMessageV3.writeString(output, 8, this.aggregateValue_);
/*       */       }
/* 37256 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 37261 */       int size = this.memoizedSize;
/* 37262 */       if (size != -1) return size;
/*       */       
/* 37264 */       size = 0;
/* 37265 */       for (int i = 0; i < this.name_.size(); i++) {
/* 37266 */         size += 
/* 37267 */           CodedOutputStream.computeMessageSize(2, this.name_.get(i));
/*       */       }
/* 37269 */       if ((this.bitField0_ & 0x1) != 0) {
/* 37270 */         size += GeneratedMessageV3.computeStringSize(3, this.identifierValue_);
/*       */       }
/* 37272 */       if ((this.bitField0_ & 0x2) != 0) {
/* 37273 */         size += 
/* 37274 */           CodedOutputStream.computeUInt64Size(4, this.positiveIntValue_);
/*       */       }
/* 37276 */       if ((this.bitField0_ & 0x4) != 0) {
/* 37277 */         size += 
/* 37278 */           CodedOutputStream.computeInt64Size(5, this.negativeIntValue_);
/*       */       }
/* 37280 */       if ((this.bitField0_ & 0x8) != 0) {
/* 37281 */         size += 
/* 37282 */           CodedOutputStream.computeDoubleSize(6, this.doubleValue_);
/*       */       }
/* 37284 */       if ((this.bitField0_ & 0x10) != 0) {
/* 37285 */         size += 
/* 37286 */           CodedOutputStream.computeBytesSize(7, this.stringValue_);
/*       */       }
/* 37288 */       if ((this.bitField0_ & 0x20) != 0) {
/* 37289 */         size += GeneratedMessageV3.computeStringSize(8, this.aggregateValue_);
/*       */       }
/* 37291 */       size += this.unknownFields.getSerializedSize();
/* 37292 */       this.memoizedSize = size;
/* 37293 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 37298 */       if (obj == this) {
/* 37299 */         return true;
/*       */       }
/* 37301 */       if (!(obj instanceof UninterpretedOption)) {
/* 37302 */         return super.equals(obj);
/*       */       }
/* 37304 */       UninterpretedOption other = (UninterpretedOption)obj;
/*       */ 
/*       */       
/* 37307 */       if (!getNameList().equals(other.getNameList())) return false; 
/* 37308 */       if (hasIdentifierValue() != other.hasIdentifierValue()) return false; 
/* 37309 */       if (hasIdentifierValue() && 
/*       */         
/* 37311 */         !getIdentifierValue().equals(other.getIdentifierValue())) return false;
/*       */       
/* 37313 */       if (hasPositiveIntValue() != other.hasPositiveIntValue()) return false; 
/* 37314 */       if (hasPositiveIntValue() && 
/* 37315 */         getPositiveIntValue() != other
/* 37316 */         .getPositiveIntValue()) return false;
/*       */       
/* 37318 */       if (hasNegativeIntValue() != other.hasNegativeIntValue()) return false; 
/* 37319 */       if (hasNegativeIntValue() && 
/* 37320 */         getNegativeIntValue() != other
/* 37321 */         .getNegativeIntValue()) return false;
/*       */       
/* 37323 */       if (hasDoubleValue() != other.hasDoubleValue()) return false; 
/* 37324 */       if (hasDoubleValue() && 
/* 37325 */         Double.doubleToLongBits(getDoubleValue()) != 
/* 37326 */         Double.doubleToLongBits(other
/* 37327 */           .getDoubleValue())) return false;
/*       */       
/* 37329 */       if (hasStringValue() != other.hasStringValue()) return false; 
/* 37330 */       if (hasStringValue() && 
/*       */         
/* 37332 */         !getStringValue().equals(other.getStringValue())) return false;
/*       */       
/* 37334 */       if (hasAggregateValue() != other.hasAggregateValue()) return false; 
/* 37335 */       if (hasAggregateValue() && 
/*       */         
/* 37337 */         !getAggregateValue().equals(other.getAggregateValue())) return false;
/*       */       
/* 37339 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 37340 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 37345 */       if (this.memoizedHashCode != 0) {
/* 37346 */         return this.memoizedHashCode;
/*       */       }
/* 37348 */       int hash = 41;
/* 37349 */       hash = 19 * hash + getDescriptor().hashCode();
/* 37350 */       if (getNameCount() > 0) {
/* 37351 */         hash = 37 * hash + 2;
/* 37352 */         hash = 53 * hash + getNameList().hashCode();
/*       */       } 
/* 37354 */       if (hasIdentifierValue()) {
/* 37355 */         hash = 37 * hash + 3;
/* 37356 */         hash = 53 * hash + getIdentifierValue().hashCode();
/*       */       } 
/* 37358 */       if (hasPositiveIntValue()) {
/* 37359 */         hash = 37 * hash + 4;
/* 37360 */         hash = 53 * hash + Internal.hashLong(
/* 37361 */             getPositiveIntValue());
/*       */       } 
/* 37363 */       if (hasNegativeIntValue()) {
/* 37364 */         hash = 37 * hash + 5;
/* 37365 */         hash = 53 * hash + Internal.hashLong(
/* 37366 */             getNegativeIntValue());
/*       */       } 
/* 37368 */       if (hasDoubleValue()) {
/* 37369 */         hash = 37 * hash + 6;
/* 37370 */         hash = 53 * hash + Internal.hashLong(
/* 37371 */             Double.doubleToLongBits(getDoubleValue()));
/*       */       } 
/* 37373 */       if (hasStringValue()) {
/* 37374 */         hash = 37 * hash + 7;
/* 37375 */         hash = 53 * hash + getStringValue().hashCode();
/*       */       } 
/* 37377 */       if (hasAggregateValue()) {
/* 37378 */         hash = 37 * hash + 8;
/* 37379 */         hash = 53 * hash + getAggregateValue().hashCode();
/*       */       } 
/* 37381 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 37382 */       this.memoizedHashCode = hash;
/* 37383 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 37389 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 37395 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 37400 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 37406 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static UninterpretedOption parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 37410 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 37416 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static UninterpretedOption parseFrom(InputStream input) throws IOException {
/* 37420 */       return 
/* 37421 */         GeneratedMessageV3.<UninterpretedOption>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 37427 */       return 
/* 37428 */         GeneratedMessageV3.<UninterpretedOption>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static UninterpretedOption parseDelimitedFrom(InputStream input) throws IOException {
/* 37432 */       return 
/* 37433 */         GeneratedMessageV3.<UninterpretedOption>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 37439 */       return 
/* 37440 */         GeneratedMessageV3.<UninterpretedOption>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(CodedInputStream input) throws IOException {
/* 37445 */       return 
/* 37446 */         GeneratedMessageV3.<UninterpretedOption>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static UninterpretedOption parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 37452 */       return 
/* 37453 */         GeneratedMessageV3.<UninterpretedOption>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 37457 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 37459 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(UninterpretedOption prototype) {
/* 37462 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 37466 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 37467 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 37473 */       Builder builder = new Builder(parent);
/* 37474 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DescriptorProtos.UninterpretedOptionOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private List<DescriptorProtos.UninterpretedOption.NamePart> name_;
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption.NamePart, DescriptorProtos.UninterpretedOption.NamePart.Builder, DescriptorProtos.UninterpretedOption.NamePartOrBuilder> nameBuilder_;
/*       */       private Object identifierValue_;
/*       */       private long positiveIntValue_;
/*       */       private long negativeIntValue_;
/*       */       private double doubleValue_;
/*       */       private ByteString stringValue_;
/*       */       private Object aggregateValue_;
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 37494 */         return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 37500 */         return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable
/* 37501 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.UninterpretedOption.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 37735 */         this
/* 37736 */           .name_ = Collections.emptyList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 37975 */         this.identifierValue_ = "";
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 38200 */         this.stringValue_ = ByteString.EMPTY;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */         
/* 38240 */         this.aggregateValue_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.name_ = Collections.emptyList(); this.identifierValue_ = ""; this.stringValue_ = ByteString.EMPTY; this.aggregateValue_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getNameFieldBuilder();  } public Builder clear() { super.clear(); if (this.nameBuilder_ == null) { this.name_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.nameBuilder_.clear(); }  this.identifierValue_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.positiveIntValue_ = 0L; this.bitField0_ &= 0xFFFFFFFB; this.negativeIntValue_ = 0L; this.bitField0_ &= 0xFFFFFFF7; this.doubleValue_ = 0.0D; this.bitField0_ &= 0xFFFFFFEF; this.stringValue_ = ByteString.EMPTY; this.bitField0_ &= 0xFFFFFFDF; this.aggregateValue_ = ""; this.bitField0_ &= 0xFFFFFFBF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_descriptor; } public DescriptorProtos.UninterpretedOption getDefaultInstanceForType() { return DescriptorProtos.UninterpretedOption.getDefaultInstance(); } public DescriptorProtos.UninterpretedOption build() { DescriptorProtos.UninterpretedOption result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.UninterpretedOption buildPartial() { DescriptorProtos.UninterpretedOption result = new DescriptorProtos.UninterpretedOption(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if (this.nameBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.name_ = Collections.unmodifiableList(this.name_); this.bitField0_ &= 0xFFFFFFFE; }  result.name_ = this.name_; } else { result.name_ = this.nameBuilder_.build(); }  if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x1;  result.identifierValue_ = this.identifierValue_; if ((from_bitField0_ & 0x4) != 0) { result.positiveIntValue_ = this.positiveIntValue_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x8) != 0) { result.negativeIntValue_ = this.negativeIntValue_; to_bitField0_ |= 0x4; }  if ((from_bitField0_ & 0x10) != 0) { result.doubleValue_ = this.doubleValue_; to_bitField0_ |= 0x8; }  if ((from_bitField0_ & 0x20) != 0) to_bitField0_ |= 0x10;  result.stringValue_ = this.stringValue_; if ((from_bitField0_ & 0x40) != 0) to_bitField0_ |= 0x20;  result.aggregateValue_ = this.aggregateValue_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.UninterpretedOption) return mergeFrom((DescriptorProtos.UninterpretedOption)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.UninterpretedOption other) { if (other == DescriptorProtos.UninterpretedOption.getDefaultInstance()) return this;  if (this.nameBuilder_ == null) { if (!other.name_.isEmpty()) { if (this.name_.isEmpty()) { this.name_ = other.name_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureNameIsMutable(); this.name_.addAll(other.name_); }  onChanged(); }  } else if (!other.name_.isEmpty()) { if (this.nameBuilder_.isEmpty()) { this.nameBuilder_.dispose(); this.nameBuilder_ = null; this.name_ = other.name_; this.bitField0_ &= 0xFFFFFFFE; this.nameBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getNameFieldBuilder() : null; } else { this.nameBuilder_.addAllMessages(other.name_); }  }  if (other.hasIdentifierValue()) { this.bitField0_ |= 0x2; this.identifierValue_ = other.identifierValue_; onChanged(); }  if (other.hasPositiveIntValue()) setPositiveIntValue(other.getPositiveIntValue());  if (other.hasNegativeIntValue()) setNegativeIntValue(other.getNegativeIntValue());  if (other.hasDoubleValue()) setDoubleValue(other.getDoubleValue());  if (other.hasStringValue()) setStringValue(other.getStringValue());  if (other.hasAggregateValue()) { this.bitField0_ |= 0x40; this.aggregateValue_ = other.aggregateValue_; onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { for (int i = 0; i < getNameCount(); i++) { if (!getName(i).isInitialized()) return false;  }  return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.UninterpretedOption parsedMessage = null; try { parsedMessage = DescriptorProtos.UninterpretedOption.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.UninterpretedOption)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } private void ensureNameIsMutable() { if ((this.bitField0_ & 0x1) == 0) { this.name_ = new ArrayList<>(this.name_); this.bitField0_ |= 0x1; }  } public List<DescriptorProtos.UninterpretedOption.NamePart> getNameList() { if (this.nameBuilder_ == null) return Collections.unmodifiableList(this.name_);  return this.nameBuilder_.getMessageList(); } public int getNameCount() { if (this.nameBuilder_ == null) return this.name_.size();  return this.nameBuilder_.getCount(); } public DescriptorProtos.UninterpretedOption.NamePart getName(int index) { if (this.nameBuilder_ == null) return this.name_.get(index);  return this.nameBuilder_.getMessage(index); } public Builder setName(int index, DescriptorProtos.UninterpretedOption.NamePart value) { if (this.nameBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureNameIsMutable(); this.name_.set(index, value); onChanged(); } else { this.nameBuilder_.setMessage(index, value); }  return this; } public Builder setName(int index, DescriptorProtos.UninterpretedOption.NamePart.Builder builderForValue) { if (this.nameBuilder_ == null) { ensureNameIsMutable(); this.name_.set(index, builderForValue.build()); onChanged(); } else { this.nameBuilder_.setMessage(index, builderForValue.build()); }  return this; } public Builder addName(DescriptorProtos.UninterpretedOption.NamePart value) { if (this.nameBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureNameIsMutable(); this.name_.add(value); onChanged(); } else { this.nameBuilder_.addMessage(value); }  return this; } public Builder addName(int index, DescriptorProtos.UninterpretedOption.NamePart value) { if (this.nameBuilder_ == null) { if (value == null) throw new NullPointerException();  ensureNameIsMutable(); this.name_.add(index, value); onChanged(); } else { this.nameBuilder_.addMessage(index, value); }  return this; } public Builder addName(DescriptorProtos.UninterpretedOption.NamePart.Builder builderForValue) { if (this.nameBuilder_ == null) { ensureNameIsMutable(); this.name_.add(builderForValue.build()); onChanged(); } else { this.nameBuilder_.addMessage(builderForValue.build()); }  return this; } public Builder addName(int index, DescriptorProtos.UninterpretedOption.NamePart.Builder builderForValue) { if (this.nameBuilder_ == null) { ensureNameIsMutable(); this.name_.add(index, builderForValue.build()); onChanged(); } else { this.nameBuilder_.addMessage(index, builderForValue.build()); }  return this; } public Builder addAllName(Iterable<? extends DescriptorProtos.UninterpretedOption.NamePart> values) { if (this.nameBuilder_ == null) { ensureNameIsMutable(); AbstractMessageLite.Builder.addAll(values, this.name_); onChanged(); } else { this.nameBuilder_.addAllMessages(values); }  return this; } public Builder clearName() { if (this.nameBuilder_ == null) { this.name_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; onChanged(); } else { this.nameBuilder_.clear(); }  return this; } public Builder removeName(int index) { if (this.nameBuilder_ == null) { ensureNameIsMutable(); this.name_.remove(index); onChanged(); } else { this.nameBuilder_.remove(index); }  return this; } public DescriptorProtos.UninterpretedOption.NamePart.Builder getNameBuilder(int index) { return getNameFieldBuilder().getBuilder(index); } public DescriptorProtos.UninterpretedOption.NamePartOrBuilder getNameOrBuilder(int index) { if (this.nameBuilder_ == null) return this.name_.get(index);  return this.nameBuilder_.getMessageOrBuilder(index); } public List<? extends DescriptorProtos.UninterpretedOption.NamePartOrBuilder> getNameOrBuilderList() { if (this.nameBuilder_ != null) return this.nameBuilder_.getMessageOrBuilderList();  return Collections.unmodifiableList((List)this.name_); } public DescriptorProtos.UninterpretedOption.NamePart.Builder addNameBuilder() { return getNameFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance()); } public DescriptorProtos.UninterpretedOption.NamePart.Builder addNameBuilder(int index) { return getNameFieldBuilder().addBuilder(index, DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance()); } public List<DescriptorProtos.UninterpretedOption.NamePart.Builder> getNameBuilderList() { return getNameFieldBuilder().getBuilderList(); } private RepeatedFieldBuilderV3<DescriptorProtos.UninterpretedOption.NamePart, DescriptorProtos.UninterpretedOption.NamePart.Builder, DescriptorProtos.UninterpretedOption.NamePartOrBuilder> getNameFieldBuilder() { if (this.nameBuilder_ == null) { this.nameBuilder_ = new RepeatedFieldBuilderV3<>(this.name_, ((this.bitField0_ & 0x1) != 0), getParentForChildren(), isClean()); this.name_ = null; }  return this.nameBuilder_; } public boolean hasIdentifierValue() { return ((this.bitField0_ & 0x2) != 0); } public String getIdentifierValue() { Object ref = this.identifierValue_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.identifierValue_ = s;  return s; }  return (String)ref; } public ByteString getIdentifierValueBytes() { Object ref = this.identifierValue_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.identifierValue_ = b; return b; }  return (ByteString)ref; } public Builder setIdentifierValue(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.identifierValue_ = value; onChanged(); return this; } public Builder clearIdentifierValue() { this.bitField0_ &= 0xFFFFFFFD; this.identifierValue_ = DescriptorProtos.UninterpretedOption.getDefaultInstance().getIdentifierValue(); onChanged(); return this; } public Builder setIdentifierValueBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.identifierValue_ = value; onChanged(); return this; } public boolean hasPositiveIntValue() { return ((this.bitField0_ & 0x4) != 0); } public long getPositiveIntValue() { return this.positiveIntValue_; } public Builder setPositiveIntValue(long value) { this.bitField0_ |= 0x4; this.positiveIntValue_ = value; onChanged(); return this; } public Builder clearPositiveIntValue() { this.bitField0_ &= 0xFFFFFFFB; this.positiveIntValue_ = 0L; onChanged(); return this; } public boolean hasNegativeIntValue() { return ((this.bitField0_ & 0x8) != 0); } public long getNegativeIntValue() { return this.negativeIntValue_; } public Builder setNegativeIntValue(long value) { this.bitField0_ |= 0x8; this.negativeIntValue_ = value; onChanged(); return this; } public Builder clearNegativeIntValue() { this.bitField0_ &= 0xFFFFFFF7; this.negativeIntValue_ = 0L; onChanged(); return this; } public boolean hasDoubleValue() { return ((this.bitField0_ & 0x10) != 0); } public double getDoubleValue() { return this.doubleValue_; } public Builder setDoubleValue(double value) { this.bitField0_ |= 0x10; this.doubleValue_ = value; onChanged(); return this; }
/*       */       public Builder clearDoubleValue() { this.bitField0_ &= 0xFFFFFFEF; this.doubleValue_ = 0.0D; onChanged(); return this; }
/*       */       public boolean hasStringValue() { return ((this.bitField0_ & 0x20) != 0); }
/*       */       public ByteString getStringValue() { return this.stringValue_; }
/*       */       public Builder setStringValue(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x20; this.stringValue_ = value; onChanged(); return this; }
/*       */       public Builder clearStringValue() { this.bitField0_ &= 0xFFFFFFDF; this.stringValue_ = DescriptorProtos.UninterpretedOption.getDefaultInstance().getStringValue(); onChanged(); return this; }
/* 38246 */       public boolean hasAggregateValue() { return ((this.bitField0_ & 0x40) != 0); }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public String getAggregateValue() {
/* 38253 */         Object ref = this.aggregateValue_;
/* 38254 */         if (!(ref instanceof String)) {
/* 38255 */           ByteString bs = (ByteString)ref;
/*       */           
/* 38257 */           String s = bs.toStringUtf8();
/* 38258 */           if (bs.isValidUtf8()) {
/* 38259 */             this.aggregateValue_ = s;
/*       */           }
/* 38261 */           return s;
/*       */         } 
/* 38263 */         return (String)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public ByteString getAggregateValueBytes() {
/* 38272 */         Object ref = this.aggregateValue_;
/* 38273 */         if (ref instanceof String) {
/*       */           
/* 38275 */           ByteString b = ByteString.copyFromUtf8((String)ref);
/*       */           
/* 38277 */           this.aggregateValue_ = b;
/* 38278 */           return b;
/*       */         } 
/* 38280 */         return (ByteString)ref;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setAggregateValue(String value) {
/* 38290 */         if (value == null) {
/* 38291 */           throw new NullPointerException();
/*       */         }
/* 38293 */         this.bitField0_ |= 0x40;
/* 38294 */         this.aggregateValue_ = value;
/* 38295 */         onChanged();
/* 38296 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearAggregateValue() {
/* 38303 */         this.bitField0_ &= 0xFFFFFFBF;
/* 38304 */         this.aggregateValue_ = DescriptorProtos.UninterpretedOption.getDefaultInstance().getAggregateValue();
/* 38305 */         onChanged();
/* 38306 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setAggregateValueBytes(ByteString value) {
/* 38315 */         if (value == null) {
/* 38316 */           throw new NullPointerException();
/*       */         }
/* 38318 */         this.bitField0_ |= 0x40;
/* 38319 */         this.aggregateValue_ = value;
/* 38320 */         onChanged();
/* 38321 */         return this;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 38326 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 38332 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 38342 */     private static final UninterpretedOption DEFAULT_INSTANCE = new UninterpretedOption();
/*       */ 
/*       */     
/*       */     public static UninterpretedOption getDefaultInstance() {
/* 38346 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 38350 */     public static final Parser<UninterpretedOption> PARSER = new AbstractParser<UninterpretedOption>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.UninterpretedOption parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 38356 */           return new DescriptorProtos.UninterpretedOption(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<UninterpretedOption> parser() {
/* 38361 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<UninterpretedOption> getParserForType() {
/* 38366 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public UninterpretedOption getDefaultInstanceForType() {
/* 38371 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static interface NamePartOrBuilder
/*       */       extends MessageOrBuilder
/*       */     {
/*       */       boolean hasNamePart();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       String getNamePart();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       ByteString getNamePartBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       boolean hasIsExtension();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       boolean getIsExtension();
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static interface SourceCodeInfoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<DescriptorProtos.SourceCodeInfo.Location> getLocationList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.SourceCodeInfo.Location getLocation(int param1Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     int getLocationCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     List<? extends DescriptorProtos.SourceCodeInfo.LocationOrBuilder> getLocationOrBuilderList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     DescriptorProtos.SourceCodeInfo.LocationOrBuilder getLocationOrBuilder(int param1Int);
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static final class SourceCodeInfo
/*       */     extends GeneratedMessageV3
/*       */     implements SourceCodeInfoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static final int LOCATION_FIELD_NUMBER = 1;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private List<Location> location_;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private byte memoizedIsInitialized;
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     private SourceCodeInfo(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 38639 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 41242 */       this.memoizedIsInitialized = -1; } private SourceCodeInfo() { this.memoizedIsInitialized = -1; this.location_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new SourceCodeInfo(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private SourceCodeInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: if ((mutable_bitField0_ & 0x1) == 0) { this.location_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.location_.add(input.readMessage(Location.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.location_ = Collections.unmodifiableList(this.location_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)SourceCodeInfo.class, (Class)Builder.class); } public static final class Location extends GeneratedMessageV3 implements LocationOrBuilder {
/*       */       private static final long serialVersionUID = 0L; private int bitField0_; public static final int PATH_FIELD_NUMBER = 1; private Internal.IntList path_; private int pathMemoizedSerializedSize; public static final int SPAN_FIELD_NUMBER = 2; private Internal.IntList span_; private int spanMemoizedSerializedSize; public static final int LEADING_COMMENTS_FIELD_NUMBER = 3; private volatile Object leadingComments_; public static final int TRAILING_COMMENTS_FIELD_NUMBER = 4; private volatile Object trailingComments_; public static final int LEADING_DETACHED_COMMENTS_FIELD_NUMBER = 6; private LazyStringList leadingDetachedComments_; private byte memoizedIsInitialized; private Location(GeneratedMessageV3.Builder<?> builder) { super(builder); this.pathMemoizedSerializedSize = -1; this.spanMemoizedSerializedSize = -1; this.memoizedIsInitialized = -1; } private Location() { this.pathMemoizedSerializedSize = -1; this.spanMemoizedSerializedSize = -1; this.memoizedIsInitialized = -1; this.path_ = emptyIntList(); this.span_ = emptyIntList(); this.leadingComments_ = ""; this.trailingComments_ = ""; this.leadingDetachedComments_ = LazyStringArrayList.EMPTY; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new Location(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private Location(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int length; ByteString bs; int limit, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: if ((mutable_bitField0_ & 0x1) == 0) { this.path_ = newIntList(); mutable_bitField0_ |= 0x1; }  this.path_.addInt(input.readInt32()); continue;case 10: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x1) == 0 && input.getBytesUntilLimit() > 0) { this.path_ = newIntList(); mutable_bitField0_ |= 0x1; }  while (input.getBytesUntilLimit() > 0) this.path_.addInt(input.readInt32());  input.popLimit(limit); continue;case 16: if ((mutable_bitField0_ & 0x2) == 0) { this.span_ = newIntList(); mutable_bitField0_ |= 0x2; }  this.span_.addInt(input.readInt32()); continue;case 18: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x2) == 0 && input.getBytesUntilLimit() > 0) { this.span_ = newIntList(); mutable_bitField0_ |= 0x2; }  while (input.getBytesUntilLimit() > 0) this.span_.addInt(input.readInt32());  input.popLimit(limit); continue;case 26: bs = input.readBytes(); this.bitField0_ |= 0x1; this.leadingComments_ = bs; continue;case 34: bs = input.readBytes(); this.bitField0_ |= 0x2; this.trailingComments_ = bs; continue;case 50: bs = input.readBytes(); if ((mutable_bitField0_ & 0x10) == 0) { this.leadingDetachedComments_ = new LazyStringArrayList(); mutable_bitField0_ |= 0x10; }  this.leadingDetachedComments_.add(bs); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.path_.makeImmutable();  if ((mutable_bitField0_ & 0x2) != 0) this.span_.makeImmutable();  if ((mutable_bitField0_ & 0x10) != 0) this.leadingDetachedComments_ = this.leadingDetachedComments_.getUnmodifiableView();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Location.class, (Class)Builder.class); } public List<Integer> getPathList() { return this.path_; } public int getPathCount() { return this.path_.size(); } public int getPath(int index) { return this.path_.getInt(index); } public List<Integer> getSpanList() { return this.span_; } public int getSpanCount() { return this.span_.size(); } public int getSpan(int index) { return this.span_.getInt(index); } public boolean hasLeadingComments() { return ((this.bitField0_ & 0x1) != 0); } public String getLeadingComments() { Object ref = this.leadingComments_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.leadingComments_ = s;  return s; } public ByteString getLeadingCommentsBytes() { Object ref = this.leadingComments_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.leadingComments_ = b; return b; }  return (ByteString)ref; } public boolean hasTrailingComments() { return ((this.bitField0_ & 0x2) != 0); } public String getTrailingComments() { Object ref = this.trailingComments_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.trailingComments_ = s;  return s; } public ByteString getTrailingCommentsBytes() { Object ref = this.trailingComments_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.trailingComments_ = b; return b; }  return (ByteString)ref; } public ProtocolStringList getLeadingDetachedCommentsList() { return this.leadingDetachedComments_; } public int getLeadingDetachedCommentsCount() { return this.leadingDetachedComments_.size(); } public String getLeadingDetachedComments(int index) { return this.leadingDetachedComments_.get(index); } public ByteString getLeadingDetachedCommentsBytes(int index) { return this.leadingDetachedComments_.getByteString(index); } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if (getPathList().size() > 0) { output.writeUInt32NoTag(10); output.writeUInt32NoTag(this.pathMemoizedSerializedSize); }  int i; for (i = 0; i < this.path_.size(); i++) output.writeInt32NoTag(this.path_.getInt(i));  if (getSpanList().size() > 0) { output.writeUInt32NoTag(18); output.writeUInt32NoTag(this.spanMemoizedSerializedSize); }  for (i = 0; i < this.span_.size(); i++) output.writeInt32NoTag(this.span_.getInt(i));  if ((this.bitField0_ & 0x1) != 0) GeneratedMessageV3.writeString(output, 3, this.leadingComments_);  if ((this.bitField0_ & 0x2) != 0) GeneratedMessageV3.writeString(output, 4, this.trailingComments_);  for (i = 0; i < this.leadingDetachedComments_.size(); i++) GeneratedMessageV3.writeString(output, 6, this.leadingDetachedComments_.getRaw(i));  this.unknownFields.writeTo(output); } public int getSerializedSize() { int size = this.memoizedSize; if (size != -1) return size;  size = 0; int dataSize = 0; int i; for (i = 0; i < this.path_.size(); i++) dataSize += CodedOutputStream.computeInt32SizeNoTag(this.path_.getInt(i));  size += dataSize; if (!getPathList().isEmpty()) { size++; size += CodedOutputStream.computeInt32SizeNoTag(dataSize); }  this.pathMemoizedSerializedSize = dataSize; dataSize = 0; for (i = 0; i < this.span_.size(); i++) dataSize += CodedOutputStream.computeInt32SizeNoTag(this.span_.getInt(i));  size += dataSize; if (!getSpanList().isEmpty()) { size++; size += CodedOutputStream.computeInt32SizeNoTag(dataSize); }  this.spanMemoizedSerializedSize = dataSize; if ((this.bitField0_ & 0x1) != 0) size += GeneratedMessageV3.computeStringSize(3, this.leadingComments_);  if ((this.bitField0_ & 0x2) != 0) size += GeneratedMessageV3.computeStringSize(4, this.trailingComments_);  dataSize = 0; for (i = 0; i < this.leadingDetachedComments_.size(); i++) dataSize += computeStringSizeNoTag(this.leadingDetachedComments_.getRaw(i));  size += dataSize; size += 1 * getLeadingDetachedCommentsList().size(); size += this.unknownFields.getSerializedSize(); this.memoizedSize = size; return size; } public boolean equals(Object obj) { if (obj == this) return true;  if (!(obj instanceof Location)) return super.equals(obj);  Location other = (Location)obj; if (!getPathList().equals(other.getPathList())) return false;  if (!getSpanList().equals(other.getSpanList())) return false;  if (hasLeadingComments() != other.hasLeadingComments()) return false;  if (hasLeadingComments() && !getLeadingComments().equals(other.getLeadingComments())) return false;  if (hasTrailingComments() != other.hasTrailingComments()) return false;  if (hasTrailingComments() && !getTrailingComments().equals(other.getTrailingComments())) return false;  if (!getLeadingDetachedCommentsList().equals(other.getLeadingDetachedCommentsList())) return false;  if (!this.unknownFields.equals(other.unknownFields)) return false;  return true; } public int hashCode() { if (this.memoizedHashCode != 0) return this.memoizedHashCode;  int hash = 41; hash = 19 * hash + getDescriptor().hashCode(); if (getPathCount() > 0) { hash = 37 * hash + 1; hash = 53 * hash + getPathList().hashCode(); }  if (getSpanCount() > 0) { hash = 37 * hash + 2; hash = 53 * hash + getSpanList().hashCode(); }  if (hasLeadingComments()) { hash = 37 * hash + 3; hash = 53 * hash + getLeadingComments().hashCode(); }  if (hasTrailingComments()) { hash = 37 * hash + 4; hash = 53 * hash + getTrailingComments().hashCode(); }  if (getLeadingDetachedCommentsCount() > 0) { hash = 37 * hash + 6; hash = 53 * hash + getLeadingDetachedCommentsList().hashCode(); }  hash = 29 * hash + this.unknownFields.hashCode(); this.memoizedHashCode = hash; return hash; } public static Location parseFrom(ByteBuffer data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static Location parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static Location parseFrom(ByteString data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static Location parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static Location parseFrom(byte[] data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static Location parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static Location parseFrom(InputStream input) throws IOException { return GeneratedMessageV3.<Location>parseWithIOException(PARSER, input); } public static Location parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<Location>parseWithIOException(PARSER, input, extensionRegistry); } public static Location parseDelimitedFrom(InputStream input) throws IOException { return GeneratedMessageV3.<Location>parseDelimitedWithIOException(PARSER, input); } public static Location parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<Location>parseDelimitedWithIOException(PARSER, input, extensionRegistry); } public static Location parseFrom(CodedInputStream input) throws IOException { return GeneratedMessageV3.<Location>parseWithIOException(PARSER, input); } public static Location parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<Location>parseWithIOException(PARSER, input, extensionRegistry); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder() { return DEFAULT_INSTANCE.toBuilder(); } public static Builder newBuilder(Location prototype) { return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype); } public Builder toBuilder() { return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this); } protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DescriptorProtos.SourceCodeInfo.LocationOrBuilder {
/*       */         private int bitField0_; private Internal.IntList path_; private Internal.IntList span_; private Object leadingComments_; private Object trailingComments_; private LazyStringList leadingDetachedComments_; public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)DescriptorProtos.SourceCodeInfo.Location.class, (Class)Builder.class); } private Builder() { this.path_ = GeneratedMessageV3.emptyIntList(); this.span_ = GeneratedMessageV3.emptyIntList(); this.leadingComments_ = ""; this.trailingComments_ = ""; this.leadingDetachedComments_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.path_ = GeneratedMessageV3.emptyIntList(); this.span_ = GeneratedMessageV3.emptyIntList(); this.leadingComments_ = ""; this.trailingComments_ = ""; this.leadingDetachedComments_ = LazyStringArrayList.EMPTY; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.path_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; this.span_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFFD; this.leadingComments_ = ""; this.bitField0_ &= 0xFFFFFFFB; this.trailingComments_ = ""; this.bitField0_ &= 0xFFFFFFF7; this.leadingDetachedComments_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFFEF; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_descriptor; } public DescriptorProtos.SourceCodeInfo.Location getDefaultInstanceForType() { return DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance(); } public DescriptorProtos.SourceCodeInfo.Location build() { DescriptorProtos.SourceCodeInfo.Location result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.SourceCodeInfo.Location buildPartial() { DescriptorProtos.SourceCodeInfo.Location result = new DescriptorProtos.SourceCodeInfo.Location(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((this.bitField0_ & 0x1) != 0) { this.path_.makeImmutable(); this.bitField0_ &= 0xFFFFFFFE; }  result.path_ = this.path_; if ((this.bitField0_ & 0x2) != 0) { this.span_.makeImmutable(); this.bitField0_ &= 0xFFFFFFFD; }  result.span_ = this.span_; if ((from_bitField0_ & 0x4) != 0) to_bitField0_ |= 0x1;  result.leadingComments_ = this.leadingComments_; if ((from_bitField0_ & 0x8) != 0) to_bitField0_ |= 0x2;  result.trailingComments_ = this.trailingComments_; if ((this.bitField0_ & 0x10) != 0) { this.leadingDetachedComments_ = this.leadingDetachedComments_.getUnmodifiableView(); this.bitField0_ &= 0xFFFFFFEF; }  result.leadingDetachedComments_ = this.leadingDetachedComments_; result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.SourceCodeInfo.Location) return mergeFrom((DescriptorProtos.SourceCodeInfo.Location)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.SourceCodeInfo.Location other) { if (other == DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance()) return this;  if (!other.path_.isEmpty()) { if (this.path_.isEmpty()) { this.path_ = other.path_; this.bitField0_ &= 0xFFFFFFFE; } else { ensurePathIsMutable(); this.path_.addAll(other.path_); }  onChanged(); }  if (!other.span_.isEmpty()) { if (this.span_.isEmpty()) { this.span_ = other.span_; this.bitField0_ &= 0xFFFFFFFD; } else { ensureSpanIsMutable(); this.span_.addAll(other.span_); }  onChanged(); }  if (other.hasLeadingComments()) { this.bitField0_ |= 0x4; this.leadingComments_ = other.leadingComments_; onChanged(); }  if (other.hasTrailingComments()) { this.bitField0_ |= 0x8; this.trailingComments_ = other.trailingComments_; onChanged(); }  if (!other.leadingDetachedComments_.isEmpty()) { if (this.leadingDetachedComments_.isEmpty()) { this.leadingDetachedComments_ = other.leadingDetachedComments_; this.bitField0_ &= 0xFFFFFFEF; } else { ensureLeadingDetachedCommentsIsMutable(); this.leadingDetachedComments_.addAll(other.leadingDetachedComments_); }  onChanged(); }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.SourceCodeInfo.Location parsedMessage = null; try { parsedMessage = DescriptorProtos.SourceCodeInfo.Location.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.SourceCodeInfo.Location)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } private void ensurePathIsMutable() { if ((this.bitField0_ & 0x1) == 0) { this.path_ = GeneratedMessageV3.mutableCopy(this.path_); this.bitField0_ |= 0x1; }  } public List<Integer> getPathList() { return ((this.bitField0_ & 0x1) != 0) ? Collections.<Integer>unmodifiableList(this.path_) : this.path_; } public int getPathCount() { return this.path_.size(); } public int getPath(int index) { return this.path_.getInt(index); } public Builder setPath(int index, int value) { ensurePathIsMutable(); this.path_.setInt(index, value); onChanged(); return this; } public Builder addPath(int value) { ensurePathIsMutable(); this.path_.addInt(value); onChanged(); return this; } public Builder addAllPath(Iterable<? extends Integer> values) { ensurePathIsMutable(); AbstractMessageLite.Builder.addAll(values, this.path_); onChanged(); return this; } public Builder clearPath() { this.path_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; onChanged(); return this; } private void ensureSpanIsMutable() { if ((this.bitField0_ & 0x2) == 0) { this.span_ = GeneratedMessageV3.mutableCopy(this.span_); this.bitField0_ |= 0x2; }  } public List<Integer> getSpanList() { return ((this.bitField0_ & 0x2) != 0) ? Collections.<Integer>unmodifiableList(this.span_) : this.span_; } public int getSpanCount() { return this.span_.size(); } public int getSpan(int index) { return this.span_.getInt(index); } public Builder setSpan(int index, int value) { ensureSpanIsMutable(); this.span_.setInt(index, value); onChanged(); return this; } public Builder addSpan(int value) { ensureSpanIsMutable(); this.span_.addInt(value); onChanged(); return this; } public Builder addAllSpan(Iterable<? extends Integer> values) { ensureSpanIsMutable(); AbstractMessageLite.Builder.addAll(values, this.span_); onChanged(); return this; } public Builder clearSpan() { this.span_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFFD; onChanged(); return this; } public boolean hasLeadingComments() { return ((this.bitField0_ & 0x4) != 0); } public String getLeadingComments() { Object ref = this.leadingComments_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.leadingComments_ = s;  return s; }  return (String)ref; } public ByteString getLeadingCommentsBytes() { Object ref = this.leadingComments_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.leadingComments_ = b; return b; }  return (ByteString)ref; } public Builder setLeadingComments(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x4; this.leadingComments_ = value; onChanged(); return this; } public Builder clearLeadingComments() { this.bitField0_ &= 0xFFFFFFFB; this.leadingComments_ = DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance().getLeadingComments(); onChanged(); return this; } public Builder setLeadingCommentsBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x4; this.leadingComments_ = value; onChanged(); return this; } public boolean hasTrailingComments() { return ((this.bitField0_ & 0x8) != 0); } public String getTrailingComments() { Object ref = this.trailingComments_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.trailingComments_ = s;  return s; }  return (String)ref; } public ByteString getTrailingCommentsBytes() { Object ref = this.trailingComments_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.trailingComments_ = b; return b; }  return (ByteString)ref; } public Builder setTrailingComments(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x8; this.trailingComments_ = value; onChanged(); return this; } public Builder clearTrailingComments() { this.bitField0_ &= 0xFFFFFFF7; this.trailingComments_ = DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance().getTrailingComments(); onChanged(); return this; } public Builder setTrailingCommentsBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x8; this.trailingComments_ = value; onChanged(); return this; } private void ensureLeadingDetachedCommentsIsMutable() { if ((this.bitField0_ & 0x10) == 0) { this.leadingDetachedComments_ = new LazyStringArrayList(this.leadingDetachedComments_); this.bitField0_ |= 0x10; }  } public ProtocolStringList getLeadingDetachedCommentsList() { return this.leadingDetachedComments_.getUnmodifiableView(); } public int getLeadingDetachedCommentsCount() { return this.leadingDetachedComments_.size(); } public String getLeadingDetachedComments(int index) { return this.leadingDetachedComments_.get(index); } public ByteString getLeadingDetachedCommentsBytes(int index) { return this.leadingDetachedComments_.getByteString(index); } public Builder setLeadingDetachedComments(int index, String value) { if (value == null) throw new NullPointerException();  ensureLeadingDetachedCommentsIsMutable(); this.leadingDetachedComments_.set(index, value); onChanged(); return this; } public Builder addLeadingDetachedComments(String value) { if (value == null) throw new NullPointerException();  ensureLeadingDetachedCommentsIsMutable(); this.leadingDetachedComments_.add(value); onChanged(); return this; } public Builder addAllLeadingDetachedComments(Iterable<String> values) { ensureLeadingDetachedCommentsIsMutable(); AbstractMessageLite.Builder.addAll(values, this.leadingDetachedComments_); onChanged(); return this; } public Builder clearLeadingDetachedComments() { this.leadingDetachedComments_ = LazyStringArrayList.EMPTY; this.bitField0_ &= 0xFFFFFFEF; onChanged(); return this; } public Builder addLeadingDetachedCommentsBytes(ByteString value) { if (value == null) throw new NullPointerException();  ensureLeadingDetachedCommentsIsMutable(); this.leadingDetachedComments_.add(value); onChanged(); return this; } public final Builder setUnknownFields(UnknownFieldSet unknownFields) { return super.setUnknownFields(unknownFields); } public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) { return super.mergeUnknownFields(unknownFields); } } private static final Location DEFAULT_INSTANCE = new Location(); public static Location getDefaultInstance() { return DEFAULT_INSTANCE; } @Deprecated public static final Parser<Location> PARSER = new AbstractParser<Location>() { public DescriptorProtos.SourceCodeInfo.Location parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new DescriptorProtos.SourceCodeInfo.Location(input, extensionRegistry); } }
/* 41245 */       ; public static Parser<Location> parser() { return PARSER; } public Parser<Location> getParserForType() { return PARSER; } public Location getDefaultInstanceForType() { return DEFAULT_INSTANCE; } } public List<Location> getLocationList() { return this.location_; } public List<? extends LocationOrBuilder> getLocationOrBuilderList() { return (List)this.location_; } public int getLocationCount() { return this.location_.size(); } public Location getLocation(int index) { return this.location_.get(index); } public LocationOrBuilder getLocationOrBuilder(int index) { return this.location_.get(index); } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 41246 */       if (isInitialized == 1) return true; 
/* 41247 */       if (isInitialized == 0) return false;
/*       */       
/* 41249 */       this.memoizedIsInitialized = 1;
/* 41250 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 41256 */       for (int i = 0; i < this.location_.size(); i++) {
/* 41257 */         output.writeMessage(1, this.location_.get(i));
/*       */       }
/* 41259 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 41264 */       int size = this.memoizedSize;
/* 41265 */       if (size != -1) return size;
/*       */       
/* 41267 */       size = 0;
/* 41268 */       for (int i = 0; i < this.location_.size(); i++) {
/* 41269 */         size += 
/* 41270 */           CodedOutputStream.computeMessageSize(1, this.location_.get(i));
/*       */       }
/* 41272 */       size += this.unknownFields.getSerializedSize();
/* 41273 */       this.memoizedSize = size;
/* 41274 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 41279 */       if (obj == this) {
/* 41280 */         return true;
/*       */       }
/* 41282 */       if (!(obj instanceof SourceCodeInfo)) {
/* 41283 */         return super.equals(obj);
/*       */       }
/* 41285 */       SourceCodeInfo other = (SourceCodeInfo)obj;
/*       */ 
/*       */       
/* 41288 */       if (!getLocationList().equals(other.getLocationList())) return false; 
/* 41289 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 41290 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 41295 */       if (this.memoizedHashCode != 0) {
/* 41296 */         return this.memoizedHashCode;
/*       */       }
/* 41298 */       int hash = 41;
/* 41299 */       hash = 19 * hash + getDescriptor().hashCode();
/* 41300 */       if (getLocationCount() > 0) {
/* 41301 */         hash = 37 * hash + 1;
/* 41302 */         hash = 53 * hash + getLocationList().hashCode();
/*       */       } 
/* 41304 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 41305 */       this.memoizedHashCode = hash;
/* 41306 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 41312 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 41318 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 41323 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 41329 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static SourceCodeInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 41333 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 41339 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static SourceCodeInfo parseFrom(InputStream input) throws IOException {
/* 41343 */       return 
/* 41344 */         GeneratedMessageV3.<SourceCodeInfo>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 41350 */       return 
/* 41351 */         GeneratedMessageV3.<SourceCodeInfo>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static SourceCodeInfo parseDelimitedFrom(InputStream input) throws IOException {
/* 41355 */       return 
/* 41356 */         GeneratedMessageV3.<SourceCodeInfo>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 41362 */       return 
/* 41363 */         GeneratedMessageV3.<SourceCodeInfo>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(CodedInputStream input) throws IOException {
/* 41368 */       return 
/* 41369 */         GeneratedMessageV3.<SourceCodeInfo>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 41375 */       return 
/* 41376 */         GeneratedMessageV3.<SourceCodeInfo>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 41380 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 41382 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(SourceCodeInfo prototype) {
/* 41385 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 41389 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 41390 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 41396 */       Builder builder = new Builder(parent);
/* 41397 */       return builder;
/*       */     }
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DescriptorProtos.SourceCodeInfoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private List<DescriptorProtos.SourceCodeInfo.Location> location_;
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.SourceCodeInfo.Location, DescriptorProtos.SourceCodeInfo.Location.Builder, DescriptorProtos.SourceCodeInfo.LocationOrBuilder> locationBuilder_;
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 41413 */         return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 41419 */         return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable
/* 41420 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.SourceCodeInfo.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 41589 */         this
/* 41590 */           .location_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.location_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getLocationFieldBuilder();  } public Builder clear() { super.clear(); if (this.locationBuilder_ == null) { this.location_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.locationBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_descriptor; } public DescriptorProtos.SourceCodeInfo getDefaultInstanceForType() { return DescriptorProtos.SourceCodeInfo.getDefaultInstance(); } public DescriptorProtos.SourceCodeInfo build() { DescriptorProtos.SourceCodeInfo result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.SourceCodeInfo buildPartial() { DescriptorProtos.SourceCodeInfo result = new DescriptorProtos.SourceCodeInfo(this); int from_bitField0_ = this.bitField0_; if (this.locationBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.location_ = Collections.unmodifiableList(this.location_); this.bitField0_ &= 0xFFFFFFFE; }  result.location_ = this.location_; } else { result.location_ = this.locationBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.SourceCodeInfo) return mergeFrom((DescriptorProtos.SourceCodeInfo)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.SourceCodeInfo other) { if (other == DescriptorProtos.SourceCodeInfo.getDefaultInstance()) return this;  if (this.locationBuilder_ == null) { if (!other.location_.isEmpty()) { if (this.location_.isEmpty()) { this.location_ = other.location_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureLocationIsMutable(); this.location_.addAll(other.location_); }  onChanged(); }  } else if (!other.location_.isEmpty()) { if (this.locationBuilder_.isEmpty()) { this.locationBuilder_.dispose(); this.locationBuilder_ = null; this.location_ = other.location_; this.bitField0_ &= 0xFFFFFFFE; this.locationBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getLocationFieldBuilder() : null; } else { this.locationBuilder_.addAllMessages(other.location_); }  }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.SourceCodeInfo parsedMessage = null; try { parsedMessage = DescriptorProtos.SourceCodeInfo.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.SourceCodeInfo)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 41592 */       private void ensureLocationIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/* 41593 */           this.location_ = new ArrayList<>(this.location_);
/* 41594 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.SourceCodeInfo.Location> getLocationList() {
/* 41649 */         if (this.locationBuilder_ == null) {
/* 41650 */           return Collections.unmodifiableList(this.location_);
/*       */         }
/* 41652 */         return this.locationBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getLocationCount() {
/* 41703 */         if (this.locationBuilder_ == null) {
/* 41704 */           return this.location_.size();
/*       */         }
/* 41706 */         return this.locationBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.SourceCodeInfo.Location getLocation(int index) {
/* 41757 */         if (this.locationBuilder_ == null) {
/* 41758 */           return this.location_.get(index);
/*       */         }
/* 41760 */         return this.locationBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setLocation(int index, DescriptorProtos.SourceCodeInfo.Location value) {
/* 41812 */         if (this.locationBuilder_ == null) {
/* 41813 */           if (value == null) {
/* 41814 */             throw new NullPointerException();
/*       */           }
/* 41816 */           ensureLocationIsMutable();
/* 41817 */           this.location_.set(index, value);
/* 41818 */           onChanged();
/*       */         } else {
/* 41820 */           this.locationBuilder_.setMessage(index, value);
/*       */         } 
/* 41822 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setLocation(int index, DescriptorProtos.SourceCodeInfo.Location.Builder builderForValue) {
/* 41873 */         if (this.locationBuilder_ == null) {
/* 41874 */           ensureLocationIsMutable();
/* 41875 */           this.location_.set(index, builderForValue.build());
/* 41876 */           onChanged();
/*       */         } else {
/* 41878 */           this.locationBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 41880 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addLocation(DescriptorProtos.SourceCodeInfo.Location value) {
/* 41930 */         if (this.locationBuilder_ == null) {
/* 41931 */           if (value == null) {
/* 41932 */             throw new NullPointerException();
/*       */           }
/* 41934 */           ensureLocationIsMutable();
/* 41935 */           this.location_.add(value);
/* 41936 */           onChanged();
/*       */         } else {
/* 41938 */           this.locationBuilder_.addMessage(value);
/*       */         } 
/* 41940 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addLocation(int index, DescriptorProtos.SourceCodeInfo.Location value) {
/* 41991 */         if (this.locationBuilder_ == null) {
/* 41992 */           if (value == null) {
/* 41993 */             throw new NullPointerException();
/*       */           }
/* 41995 */           ensureLocationIsMutable();
/* 41996 */           this.location_.add(index, value);
/* 41997 */           onChanged();
/*       */         } else {
/* 41999 */           this.locationBuilder_.addMessage(index, value);
/*       */         } 
/* 42001 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addLocation(DescriptorProtos.SourceCodeInfo.Location.Builder builderForValue) {
/* 42052 */         if (this.locationBuilder_ == null) {
/* 42053 */           ensureLocationIsMutable();
/* 42054 */           this.location_.add(builderForValue.build());
/* 42055 */           onChanged();
/*       */         } else {
/* 42057 */           this.locationBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 42059 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addLocation(int index, DescriptorProtos.SourceCodeInfo.Location.Builder builderForValue) {
/* 42110 */         if (this.locationBuilder_ == null) {
/* 42111 */           ensureLocationIsMutable();
/* 42112 */           this.location_.add(index, builderForValue.build());
/* 42113 */           onChanged();
/*       */         } else {
/* 42115 */           this.locationBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 42117 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllLocation(Iterable<? extends DescriptorProtos.SourceCodeInfo.Location> values) {
/* 42168 */         if (this.locationBuilder_ == null) {
/* 42169 */           ensureLocationIsMutable();
/* 42170 */           AbstractMessageLite.Builder.addAll(values, this.location_);
/*       */           
/* 42172 */           onChanged();
/*       */         } else {
/* 42174 */           this.locationBuilder_.addAllMessages(values);
/*       */         } 
/* 42176 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearLocation() {
/* 42226 */         if (this.locationBuilder_ == null) {
/* 42227 */           this.location_ = Collections.emptyList();
/* 42228 */           this.bitField0_ &= 0xFFFFFFFE;
/* 42229 */           onChanged();
/*       */         } else {
/* 42231 */           this.locationBuilder_.clear();
/*       */         } 
/* 42233 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeLocation(int index) {
/* 42283 */         if (this.locationBuilder_ == null) {
/* 42284 */           ensureLocationIsMutable();
/* 42285 */           this.location_.remove(index);
/* 42286 */           onChanged();
/*       */         } else {
/* 42288 */           this.locationBuilder_.remove(index);
/*       */         } 
/* 42290 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.SourceCodeInfo.Location.Builder getLocationBuilder(int index) {
/* 42341 */         return getLocationFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.SourceCodeInfo.LocationOrBuilder getLocationOrBuilder(int index) {
/* 42392 */         if (this.locationBuilder_ == null)
/* 42393 */           return this.location_.get(index); 
/* 42394 */         return this.locationBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DescriptorProtos.SourceCodeInfo.LocationOrBuilder> getLocationOrBuilderList() {
/* 42446 */         if (this.locationBuilder_ != null) {
/* 42447 */           return this.locationBuilder_.getMessageOrBuilderList();
/*       */         }
/* 42449 */         return Collections.unmodifiableList((List)this.location_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.SourceCodeInfo.Location.Builder addLocationBuilder() {
/* 42500 */         return getLocationFieldBuilder().addBuilder(
/* 42501 */             DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.SourceCodeInfo.Location.Builder addLocationBuilder(int index) {
/* 42552 */         return getLocationFieldBuilder().addBuilder(index, 
/* 42553 */             DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.SourceCodeInfo.Location.Builder> getLocationBuilderList() {
/* 42604 */         return getLocationFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.SourceCodeInfo.Location, DescriptorProtos.SourceCodeInfo.Location.Builder, DescriptorProtos.SourceCodeInfo.LocationOrBuilder> getLocationFieldBuilder() {
/* 42609 */         if (this.locationBuilder_ == null) {
/* 42610 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 42615 */             .locationBuilder_ = new RepeatedFieldBuilderV3<>(this.location_, ((this.bitField0_ & 0x1) != 0), getParentForChildren(), isClean());
/* 42616 */           this.location_ = null;
/*       */         } 
/* 42618 */         return this.locationBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 42623 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 42629 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 42639 */     private static final SourceCodeInfo DEFAULT_INSTANCE = new SourceCodeInfo();
/*       */ 
/*       */     
/*       */     public static SourceCodeInfo getDefaultInstance() {
/* 42643 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 42647 */     public static final Parser<SourceCodeInfo> PARSER = new AbstractParser<SourceCodeInfo>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.SourceCodeInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 42653 */           return new DescriptorProtos.SourceCodeInfo(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<SourceCodeInfo> parser() {
/* 42658 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<SourceCodeInfo> getParserForType() {
/* 42663 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public SourceCodeInfo getDefaultInstanceForType() {
/* 42668 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */     
/*       */     public static interface LocationOrBuilder
/*       */       extends MessageOrBuilder
/*       */     {
/*       */       List<Integer> getPathList();
/*       */ 
/*       */       
/*       */       int getPathCount();
/*       */ 
/*       */       
/*       */       int getPath(int param2Int);
/*       */ 
/*       */       
/*       */       List<Integer> getSpanList();
/*       */ 
/*       */       
/*       */       int getSpanCount();
/*       */ 
/*       */       
/*       */       int getSpan(int param2Int);
/*       */ 
/*       */       
/*       */       boolean hasLeadingComments();
/*       */ 
/*       */       
/*       */       String getLeadingComments();
/*       */ 
/*       */       
/*       */       ByteString getLeadingCommentsBytes();
/*       */       
/*       */       boolean hasTrailingComments();
/*       */       
/*       */       String getTrailingComments();
/*       */       
/*       */       ByteString getTrailingCommentsBytes();
/*       */       
/*       */       List<String> getLeadingDetachedCommentsList();
/*       */       
/*       */       int getLeadingDetachedCommentsCount();
/*       */       
/*       */       String getLeadingDetachedComments(int param2Int);
/*       */       
/*       */       ByteString getLeadingDetachedCommentsBytes(int param2Int);
/*       */     }
/*       */   }
/*       */   
/*       */   public static interface GeneratedCodeInfoOrBuilder
/*       */     extends MessageOrBuilder
/*       */   {
/*       */     List<DescriptorProtos.GeneratedCodeInfo.Annotation> getAnnotationList();
/*       */     
/*       */     DescriptorProtos.GeneratedCodeInfo.Annotation getAnnotation(int param1Int);
/*       */     
/*       */     int getAnnotationCount();
/*       */     
/*       */     List<? extends DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder> getAnnotationOrBuilderList();
/*       */     
/*       */     DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder getAnnotationOrBuilder(int param1Int);
/*       */   }
/*       */   
/*       */   public static final class GeneratedCodeInfo
/*       */     extends GeneratedMessageV3
/*       */     implements GeneratedCodeInfoOrBuilder
/*       */   {
/*       */     private static final long serialVersionUID = 0L;
/*       */     public static final int ANNOTATION_FIELD_NUMBER = 1;
/*       */     private List<Annotation> annotation_;
/*       */     private byte memoizedIsInitialized;
/*       */     
/*       */     private GeneratedCodeInfo(GeneratedMessageV3.Builder<?> builder)
/*       */     {
/* 42742 */       super(builder);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/* 44070 */       this.memoizedIsInitialized = -1; } private GeneratedCodeInfo() { this.memoizedIsInitialized = -1; this.annotation_ = Collections.emptyList(); } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new GeneratedCodeInfo(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private GeneratedCodeInfo(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 10: if ((mutable_bitField0_ & 0x1) == 0) { this.annotation_ = new ArrayList<>(); mutable_bitField0_ |= 0x1; }  this.annotation_.add(input.readMessage(Annotation.PARSER, extensionRegistry)); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.annotation_ = Collections.unmodifiableList(this.annotation_);  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)GeneratedCodeInfo.class, (Class)Builder.class); } public static final class Annotation extends GeneratedMessageV3 implements AnnotationOrBuilder {
/*       */       private static final long serialVersionUID = 0L; private int bitField0_; public static final int PATH_FIELD_NUMBER = 1; private Internal.IntList path_; private int pathMemoizedSerializedSize; public static final int SOURCE_FILE_FIELD_NUMBER = 2; private volatile Object sourceFile_; public static final int BEGIN_FIELD_NUMBER = 3; private int begin_; public static final int END_FIELD_NUMBER = 4; private int end_; private byte memoizedIsInitialized; private Annotation(GeneratedMessageV3.Builder<?> builder) { super(builder); this.pathMemoizedSerializedSize = -1; this.memoizedIsInitialized = -1; } private Annotation() { this.pathMemoizedSerializedSize = -1; this.memoizedIsInitialized = -1; this.path_ = emptyIntList(); this.sourceFile_ = ""; } protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unused) { return new Annotation(); } public final UnknownFieldSet getUnknownFields() { return this.unknownFields; } private Annotation(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { this(); if (extensionRegistry == null) throw new NullPointerException();  int mutable_bitField0_ = 0; UnknownFieldSet.Builder unknownFields = UnknownFieldSet.newBuilder(); try { boolean done = false; while (!done) { int length; ByteString bs; int limit, tag = input.readTag(); switch (tag) { case 0: done = true; continue;case 8: if ((mutable_bitField0_ & 0x1) == 0) { this.path_ = newIntList(); mutable_bitField0_ |= 0x1; }  this.path_.addInt(input.readInt32()); continue;case 10: length = input.readRawVarint32(); limit = input.pushLimit(length); if ((mutable_bitField0_ & 0x1) == 0 && input.getBytesUntilLimit() > 0) { this.path_ = newIntList(); mutable_bitField0_ |= 0x1; }  while (input.getBytesUntilLimit() > 0) this.path_.addInt(input.readInt32());  input.popLimit(limit); continue;case 18: bs = input.readBytes(); this.bitField0_ |= 0x1; this.sourceFile_ = bs; continue;case 24: this.bitField0_ |= 0x2; this.begin_ = input.readInt32(); continue;case 32: this.bitField0_ |= 0x4; this.end_ = input.readInt32(); continue; }  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) done = true;  }  } catch (InvalidProtocolBufferException e) { throw e.setUnfinishedMessage(this); } catch (IOException e) { throw (new InvalidProtocolBufferException(e)).setUnfinishedMessage(this); } finally { if ((mutable_bitField0_ & 0x1) != 0) this.path_.makeImmutable();  this.unknownFields = unknownFields.build(); makeExtensionsImmutable(); }  } public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)Annotation.class, (Class)Builder.class); } public List<Integer> getPathList() { return this.path_; } public int getPathCount() { return this.path_.size(); } public int getPath(int index) { return this.path_.getInt(index); } public boolean hasSourceFile() { return ((this.bitField0_ & 0x1) != 0); } public String getSourceFile() { Object ref = this.sourceFile_; if (ref instanceof String) return (String)ref;  ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.sourceFile_ = s;  return s; } public ByteString getSourceFileBytes() { Object ref = this.sourceFile_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.sourceFile_ = b; return b; }  return (ByteString)ref; } public boolean hasBegin() { return ((this.bitField0_ & 0x2) != 0); } public int getBegin() { return this.begin_; } public boolean hasEnd() { return ((this.bitField0_ & 0x4) != 0); } public int getEnd() { return this.end_; } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized; if (isInitialized == 1) return true;  if (isInitialized == 0) return false;  this.memoizedIsInitialized = 1; return true; } public void writeTo(CodedOutputStream output) throws IOException { getSerializedSize(); if (getPathList().size() > 0) { output.writeUInt32NoTag(10); output.writeUInt32NoTag(this.pathMemoizedSerializedSize); }  for (int i = 0; i < this.path_.size(); i++) output.writeInt32NoTag(this.path_.getInt(i));  if ((this.bitField0_ & 0x1) != 0) GeneratedMessageV3.writeString(output, 2, this.sourceFile_);  if ((this.bitField0_ & 0x2) != 0) output.writeInt32(3, this.begin_);  if ((this.bitField0_ & 0x4) != 0) output.writeInt32(4, this.end_);  this.unknownFields.writeTo(output); } public int getSerializedSize() { int size = this.memoizedSize; if (size != -1) return size;  size = 0; int dataSize = 0; for (int i = 0; i < this.path_.size(); i++) dataSize += CodedOutputStream.computeInt32SizeNoTag(this.path_.getInt(i));  size += dataSize; if (!getPathList().isEmpty()) { size++; size += CodedOutputStream.computeInt32SizeNoTag(dataSize); }  this.pathMemoizedSerializedSize = dataSize; if ((this.bitField0_ & 0x1) != 0) size += GeneratedMessageV3.computeStringSize(2, this.sourceFile_);  if ((this.bitField0_ & 0x2) != 0) size += CodedOutputStream.computeInt32Size(3, this.begin_);  if ((this.bitField0_ & 0x4) != 0) size += CodedOutputStream.computeInt32Size(4, this.end_);  size += this.unknownFields.getSerializedSize(); this.memoizedSize = size; return size; } public boolean equals(Object obj) { if (obj == this) return true;  if (!(obj instanceof Annotation)) return super.equals(obj);  Annotation other = (Annotation)obj; if (!getPathList().equals(other.getPathList())) return false;  if (hasSourceFile() != other.hasSourceFile()) return false;  if (hasSourceFile() && !getSourceFile().equals(other.getSourceFile())) return false;  if (hasBegin() != other.hasBegin()) return false;  if (hasBegin() && getBegin() != other.getBegin()) return false;  if (hasEnd() != other.hasEnd()) return false;  if (hasEnd() && getEnd() != other.getEnd()) return false;  if (!this.unknownFields.equals(other.unknownFields)) return false;  return true; } public int hashCode() { if (this.memoizedHashCode != 0) return this.memoizedHashCode;  int hash = 41; hash = 19 * hash + getDescriptor().hashCode(); if (getPathCount() > 0) { hash = 37 * hash + 1; hash = 53 * hash + getPathList().hashCode(); }  if (hasSourceFile()) { hash = 37 * hash + 2; hash = 53 * hash + getSourceFile().hashCode(); }  if (hasBegin()) { hash = 37 * hash + 3; hash = 53 * hash + getBegin(); }  if (hasEnd()) { hash = 37 * hash + 4; hash = 53 * hash + getEnd(); }  hash = 29 * hash + this.unknownFields.hashCode(); this.memoizedHashCode = hash; return hash; } public static Annotation parseFrom(ByteBuffer data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static Annotation parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static Annotation parseFrom(ByteString data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static Annotation parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static Annotation parseFrom(byte[] data) throws InvalidProtocolBufferException { return PARSER.parseFrom(data); } public static Annotation parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return PARSER.parseFrom(data, extensionRegistry); } public static Annotation parseFrom(InputStream input) throws IOException { return GeneratedMessageV3.<Annotation>parseWithIOException(PARSER, input); } public static Annotation parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<Annotation>parseWithIOException(PARSER, input, extensionRegistry); } public static Annotation parseDelimitedFrom(InputStream input) throws IOException { return GeneratedMessageV3.<Annotation>parseDelimitedWithIOException(PARSER, input); } public static Annotation parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<Annotation>parseDelimitedWithIOException(PARSER, input, extensionRegistry); } public static Annotation parseFrom(CodedInputStream input) throws IOException { return GeneratedMessageV3.<Annotation>parseWithIOException(PARSER, input); } public static Annotation parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { return GeneratedMessageV3.<Annotation>parseWithIOException(PARSER, input, extensionRegistry); } public Builder newBuilderForType() { return newBuilder(); } public static Builder newBuilder() { return DEFAULT_INSTANCE.toBuilder(); } public static Builder newBuilder(Annotation prototype) { return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype); } public Builder toBuilder() { return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder()).mergeFrom(this); } protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) { Builder builder = new Builder(parent); return builder; } public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder {
/*       */         private int bitField0_; private Internal.IntList path_; private Object sourceFile_; private int begin_; private int end_; public static final Descriptors.Descriptor getDescriptor() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor; } protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable.ensureFieldAccessorsInitialized((Class)DescriptorProtos.GeneratedCodeInfo.Annotation.class, (Class)Builder.class); } private Builder() { this.path_ = GeneratedMessageV3.emptyIntList(); this.sourceFile_ = ""; maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.path_ = GeneratedMessageV3.emptyIntList(); this.sourceFile_ = ""; maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders); } public Builder clear() { super.clear(); this.path_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; this.sourceFile_ = ""; this.bitField0_ &= 0xFFFFFFFD; this.begin_ = 0; this.bitField0_ &= 0xFFFFFFFB; this.end_ = 0; this.bitField0_ &= 0xFFFFFFF7; return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor; } public DescriptorProtos.GeneratedCodeInfo.Annotation getDefaultInstanceForType() { return DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance(); } public DescriptorProtos.GeneratedCodeInfo.Annotation build() { DescriptorProtos.GeneratedCodeInfo.Annotation result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.GeneratedCodeInfo.Annotation buildPartial() { DescriptorProtos.GeneratedCodeInfo.Annotation result = new DescriptorProtos.GeneratedCodeInfo.Annotation(this); int from_bitField0_ = this.bitField0_; int to_bitField0_ = 0; if ((this.bitField0_ & 0x1) != 0) { this.path_.makeImmutable(); this.bitField0_ &= 0xFFFFFFFE; }  result.path_ = this.path_; if ((from_bitField0_ & 0x2) != 0) to_bitField0_ |= 0x1;  result.sourceFile_ = this.sourceFile_; if ((from_bitField0_ & 0x4) != 0) { result.begin_ = this.begin_; to_bitField0_ |= 0x2; }  if ((from_bitField0_ & 0x8) != 0) { result.end_ = this.end_; to_bitField0_ |= 0x4; }  result.bitField0_ = to_bitField0_; onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.GeneratedCodeInfo.Annotation) return mergeFrom((DescriptorProtos.GeneratedCodeInfo.Annotation)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.GeneratedCodeInfo.Annotation other) { if (other == DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance()) return this;  if (!other.path_.isEmpty()) { if (this.path_.isEmpty()) { this.path_ = other.path_; this.bitField0_ &= 0xFFFFFFFE; } else { ensurePathIsMutable(); this.path_.addAll(other.path_); }  onChanged(); }  if (other.hasSourceFile()) { this.bitField0_ |= 0x2; this.sourceFile_ = other.sourceFile_; onChanged(); }  if (other.hasBegin()) setBegin(other.getBegin());  if (other.hasEnd()) setEnd(other.getEnd());  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; } public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.GeneratedCodeInfo.Annotation parsedMessage = null; try { parsedMessage = DescriptorProtos.GeneratedCodeInfo.Annotation.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.GeneratedCodeInfo.Annotation)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; } private void ensurePathIsMutable() { if ((this.bitField0_ & 0x1) == 0) { this.path_ = GeneratedMessageV3.mutableCopy(this.path_); this.bitField0_ |= 0x1; }  } public List<Integer> getPathList() { return ((this.bitField0_ & 0x1) != 0) ? Collections.<Integer>unmodifiableList(this.path_) : this.path_; } public int getPathCount() { return this.path_.size(); } public int getPath(int index) { return this.path_.getInt(index); } public Builder setPath(int index, int value) { ensurePathIsMutable(); this.path_.setInt(index, value); onChanged(); return this; } public Builder addPath(int value) { ensurePathIsMutable(); this.path_.addInt(value); onChanged(); return this; } public Builder addAllPath(Iterable<? extends Integer> values) { ensurePathIsMutable(); AbstractMessageLite.Builder.addAll(values, this.path_); onChanged(); return this; } public Builder clearPath() { this.path_ = GeneratedMessageV3.emptyIntList(); this.bitField0_ &= 0xFFFFFFFE; onChanged(); return this; } public boolean hasSourceFile() { return ((this.bitField0_ & 0x2) != 0); } public String getSourceFile() { Object ref = this.sourceFile_; if (!(ref instanceof String)) { ByteString bs = (ByteString)ref; String s = bs.toStringUtf8(); if (bs.isValidUtf8()) this.sourceFile_ = s;  return s; }  return (String)ref; } public ByteString getSourceFileBytes() { Object ref = this.sourceFile_; if (ref instanceof String) { ByteString b = ByteString.copyFromUtf8((String)ref); this.sourceFile_ = b; return b; }  return (ByteString)ref; } public Builder setSourceFile(String value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.sourceFile_ = value; onChanged(); return this; } public Builder clearSourceFile() { this.bitField0_ &= 0xFFFFFFFD; this.sourceFile_ = DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance().getSourceFile(); onChanged(); return this; } public Builder setSourceFileBytes(ByteString value) { if (value == null) throw new NullPointerException();  this.bitField0_ |= 0x2; this.sourceFile_ = value; onChanged(); return this; } public boolean hasBegin() { return ((this.bitField0_ & 0x4) != 0); } public int getBegin() { return this.begin_; } public Builder setBegin(int value) { this.bitField0_ |= 0x4; this.begin_ = value; onChanged(); return this; } public Builder clearBegin() { this.bitField0_ &= 0xFFFFFFFB; this.begin_ = 0; onChanged(); return this; } public boolean hasEnd() { return ((this.bitField0_ & 0x8) != 0); } public int getEnd() { return this.end_; } public Builder setEnd(int value) { this.bitField0_ |= 0x8; this.end_ = value; onChanged(); return this; } public Builder clearEnd() { this.bitField0_ &= 0xFFFFFFF7; this.end_ = 0; onChanged(); return this; } public final Builder setUnknownFields(UnknownFieldSet unknownFields) { return super.setUnknownFields(unknownFields); } public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) { return super.mergeUnknownFields(unknownFields); } } private static final Annotation DEFAULT_INSTANCE = new Annotation(); public static Annotation getDefaultInstance() { return DEFAULT_INSTANCE; } @Deprecated public static final Parser<Annotation> PARSER = new AbstractParser<Annotation>() { public DescriptorProtos.GeneratedCodeInfo.Annotation parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException { return new DescriptorProtos.GeneratedCodeInfo.Annotation(input, extensionRegistry); } }
/* 44073 */       ; public static Parser<Annotation> parser() { return PARSER; } public Parser<Annotation> getParserForType() { return PARSER; } public Annotation getDefaultInstanceForType() { return DEFAULT_INSTANCE; } } public List<Annotation> getAnnotationList() { return this.annotation_; } public List<? extends AnnotationOrBuilder> getAnnotationOrBuilderList() { return (List)this.annotation_; } public int getAnnotationCount() { return this.annotation_.size(); } public Annotation getAnnotation(int index) { return this.annotation_.get(index); } public AnnotationOrBuilder getAnnotationOrBuilder(int index) { return this.annotation_.get(index); } public final boolean isInitialized() { byte isInitialized = this.memoizedIsInitialized;
/* 44074 */       if (isInitialized == 1) return true; 
/* 44075 */       if (isInitialized == 0) return false;
/*       */       
/* 44077 */       this.memoizedIsInitialized = 1;
/* 44078 */       return true; }
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public void writeTo(CodedOutputStream output) throws IOException {
/* 44084 */       for (int i = 0; i < this.annotation_.size(); i++) {
/* 44085 */         output.writeMessage(1, this.annotation_.get(i));
/*       */       }
/* 44087 */       this.unknownFields.writeTo(output);
/*       */     }
/*       */ 
/*       */     
/*       */     public int getSerializedSize() {
/* 44092 */       int size = this.memoizedSize;
/* 44093 */       if (size != -1) return size;
/*       */       
/* 44095 */       size = 0;
/* 44096 */       for (int i = 0; i < this.annotation_.size(); i++) {
/* 44097 */         size += 
/* 44098 */           CodedOutputStream.computeMessageSize(1, this.annotation_.get(i));
/*       */       }
/* 44100 */       size += this.unknownFields.getSerializedSize();
/* 44101 */       this.memoizedSize = size;
/* 44102 */       return size;
/*       */     }
/*       */ 
/*       */     
/*       */     public boolean equals(Object obj) {
/* 44107 */       if (obj == this) {
/* 44108 */         return true;
/*       */       }
/* 44110 */       if (!(obj instanceof GeneratedCodeInfo)) {
/* 44111 */         return super.equals(obj);
/*       */       }
/* 44113 */       GeneratedCodeInfo other = (GeneratedCodeInfo)obj;
/*       */ 
/*       */       
/* 44116 */       if (!getAnnotationList().equals(other.getAnnotationList())) return false; 
/* 44117 */       if (!this.unknownFields.equals(other.unknownFields)) return false; 
/* 44118 */       return true;
/*       */     }
/*       */ 
/*       */     
/*       */     public int hashCode() {
/* 44123 */       if (this.memoizedHashCode != 0) {
/* 44124 */         return this.memoizedHashCode;
/*       */       }
/* 44126 */       int hash = 41;
/* 44127 */       hash = 19 * hash + getDescriptor().hashCode();
/* 44128 */       if (getAnnotationCount() > 0) {
/* 44129 */         hash = 37 * hash + 1;
/* 44130 */         hash = 53 * hash + getAnnotationList().hashCode();
/*       */       } 
/* 44132 */       hash = 29 * hash + this.unknownFields.hashCode();
/* 44133 */       this.memoizedHashCode = hash;
/* 44134 */       return hash;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(ByteBuffer data) throws InvalidProtocolBufferException {
/* 44140 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(ByteBuffer data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 44146 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(ByteString data) throws InvalidProtocolBufferException {
/* 44151 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(ByteString data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 44157 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(byte[] data) throws InvalidProtocolBufferException {
/* 44161 */       return PARSER.parseFrom(data);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(byte[] data, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException {
/* 44167 */       return PARSER.parseFrom(data, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(InputStream input) throws IOException {
/* 44171 */       return 
/* 44172 */         GeneratedMessageV3.<GeneratedCodeInfo>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 44178 */       return 
/* 44179 */         GeneratedMessageV3.<GeneratedCodeInfo>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public static GeneratedCodeInfo parseDelimitedFrom(InputStream input) throws IOException {
/* 44183 */       return 
/* 44184 */         GeneratedMessageV3.<GeneratedCodeInfo>parseDelimitedWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseDelimitedFrom(InputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 44190 */       return 
/* 44191 */         GeneratedMessageV3.<GeneratedCodeInfo>parseDelimitedWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(CodedInputStream input) throws IOException {
/* 44196 */       return 
/* 44197 */         GeneratedMessageV3.<GeneratedCodeInfo>parseWithIOException(PARSER, input);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo parseFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException {
/* 44203 */       return 
/* 44204 */         GeneratedMessageV3.<GeneratedCodeInfo>parseWithIOException(PARSER, input, extensionRegistry);
/*       */     }
/*       */     
/*       */     public Builder newBuilderForType() {
/* 44208 */       return newBuilder();
/*       */     } public static Builder newBuilder() {
/* 44210 */       return DEFAULT_INSTANCE.toBuilder();
/*       */     }
/*       */     public static Builder newBuilder(GeneratedCodeInfo prototype) {
/* 44213 */       return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
/*       */     }
/*       */     
/*       */     public Builder toBuilder() {
/* 44217 */       return (this == DEFAULT_INSTANCE) ? new Builder() : (new Builder())
/* 44218 */         .mergeFrom(this);
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     protected Builder newBuilderForType(GeneratedMessageV3.BuilderParent parent) {
/* 44224 */       Builder builder = new Builder(parent);
/* 44225 */       return builder;
/*       */     }
/*       */ 
/*       */ 
/*       */     
/*       */     public static final class Builder
/*       */       extends GeneratedMessageV3.Builder<Builder>
/*       */       implements DescriptorProtos.GeneratedCodeInfoOrBuilder
/*       */     {
/*       */       private int bitField0_;
/*       */       
/*       */       private List<DescriptorProtos.GeneratedCodeInfo.Annotation> annotation_;
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.GeneratedCodeInfo.Annotation, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder, DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder> annotationBuilder_;
/*       */ 
/*       */       
/*       */       public static final Descriptors.Descriptor getDescriptor() {
/* 44242 */         return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_descriptor;
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
/* 44248 */         return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable
/* 44249 */           .ensureFieldAccessorsInitialized((Class)DescriptorProtos.GeneratedCodeInfo.class, (Class)Builder.class);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       private Builder()
/*       */       {
/* 44418 */         this
/* 44419 */           .annotation_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private Builder(GeneratedMessageV3.BuilderParent parent) { super(parent); this.annotation_ = Collections.emptyList(); maybeForceBuilderInitialization(); } private void maybeForceBuilderInitialization() { if (GeneratedMessageV3.alwaysUseFieldBuilders) getAnnotationFieldBuilder();  } public Builder clear() { super.clear(); if (this.annotationBuilder_ == null) { this.annotation_ = Collections.emptyList(); this.bitField0_ &= 0xFFFFFFFE; } else { this.annotationBuilder_.clear(); }  return this; } public Descriptors.Descriptor getDescriptorForType() { return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_descriptor; } public DescriptorProtos.GeneratedCodeInfo getDefaultInstanceForType() { return DescriptorProtos.GeneratedCodeInfo.getDefaultInstance(); } public DescriptorProtos.GeneratedCodeInfo build() { DescriptorProtos.GeneratedCodeInfo result = buildPartial(); if (!result.isInitialized()) throw newUninitializedMessageException(result);  return result; } public DescriptorProtos.GeneratedCodeInfo buildPartial() { DescriptorProtos.GeneratedCodeInfo result = new DescriptorProtos.GeneratedCodeInfo(this); int from_bitField0_ = this.bitField0_; if (this.annotationBuilder_ == null) { if ((this.bitField0_ & 0x1) != 0) { this.annotation_ = Collections.unmodifiableList(this.annotation_); this.bitField0_ &= 0xFFFFFFFE; }  result.annotation_ = this.annotation_; } else { result.annotation_ = this.annotationBuilder_.build(); }  onBuilt(); return result; } public Builder clone() { return super.clone(); } public Builder setField(Descriptors.FieldDescriptor field, Object value) { return super.setField(field, value); } public Builder clearField(Descriptors.FieldDescriptor field) { return super.clearField(field); } public Builder clearOneof(Descriptors.OneofDescriptor oneof) { return super.clearOneof(oneof); } public Builder setRepeatedField(Descriptors.FieldDescriptor field, int index, Object value) { return super.setRepeatedField(field, index, value); } public Builder addRepeatedField(Descriptors.FieldDescriptor field, Object value) { return super.addRepeatedField(field, value); } public Builder mergeFrom(Message other) { if (other instanceof DescriptorProtos.GeneratedCodeInfo) return mergeFrom((DescriptorProtos.GeneratedCodeInfo)other);  super.mergeFrom(other); return this; } public Builder mergeFrom(DescriptorProtos.GeneratedCodeInfo other) { if (other == DescriptorProtos.GeneratedCodeInfo.getDefaultInstance()) return this;  if (this.annotationBuilder_ == null) { if (!other.annotation_.isEmpty()) { if (this.annotation_.isEmpty()) { this.annotation_ = other.annotation_; this.bitField0_ &= 0xFFFFFFFE; } else { ensureAnnotationIsMutable(); this.annotation_.addAll(other.annotation_); }  onChanged(); }  } else if (!other.annotation_.isEmpty()) { if (this.annotationBuilder_.isEmpty()) { this.annotationBuilder_.dispose(); this.annotationBuilder_ = null; this.annotation_ = other.annotation_; this.bitField0_ &= 0xFFFFFFFE; this.annotationBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? getAnnotationFieldBuilder() : null; } else { this.annotationBuilder_.addAllMessages(other.annotation_); }  }  mergeUnknownFields(other.unknownFields); onChanged(); return this; } public final boolean isInitialized() { return true; }
/*       */       public Builder mergeFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws IOException { DescriptorProtos.GeneratedCodeInfo parsedMessage = null; try { parsedMessage = DescriptorProtos.GeneratedCodeInfo.PARSER.parsePartialFrom(input, extensionRegistry); } catch (InvalidProtocolBufferException e) { parsedMessage = (DescriptorProtos.GeneratedCodeInfo)e.getUnfinishedMessage(); throw e.unwrapIOException(); } finally { if (parsedMessage != null) mergeFrom(parsedMessage);  }  return this; }
/* 44421 */       private void ensureAnnotationIsMutable() { if ((this.bitField0_ & 0x1) == 0) {
/* 44422 */           this.annotation_ = new ArrayList<>(this.annotation_);
/* 44423 */           this.bitField0_ |= 0x1;
/*       */         }  }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.GeneratedCodeInfo.Annotation> getAnnotationList() {
/* 44439 */         if (this.annotationBuilder_ == null) {
/* 44440 */           return Collections.unmodifiableList(this.annotation_);
/*       */         }
/* 44442 */         return this.annotationBuilder_.getMessageList();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public int getAnnotationCount() {
/* 44454 */         if (this.annotationBuilder_ == null) {
/* 44455 */           return this.annotation_.size();
/*       */         }
/* 44457 */         return this.annotationBuilder_.getCount();
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.GeneratedCodeInfo.Annotation getAnnotation(int index) {
/* 44469 */         if (this.annotationBuilder_ == null) {
/* 44470 */           return this.annotation_.get(index);
/*       */         }
/* 44472 */         return this.annotationBuilder_.getMessage(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setAnnotation(int index, DescriptorProtos.GeneratedCodeInfo.Annotation value) {
/* 44485 */         if (this.annotationBuilder_ == null) {
/* 44486 */           if (value == null) {
/* 44487 */             throw new NullPointerException();
/*       */           }
/* 44489 */           ensureAnnotationIsMutable();
/* 44490 */           this.annotation_.set(index, value);
/* 44491 */           onChanged();
/*       */         } else {
/* 44493 */           this.annotationBuilder_.setMessage(index, value);
/*       */         } 
/* 44495 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder setAnnotation(int index, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder builderForValue) {
/* 44507 */         if (this.annotationBuilder_ == null) {
/* 44508 */           ensureAnnotationIsMutable();
/* 44509 */           this.annotation_.set(index, builderForValue.build());
/* 44510 */           onChanged();
/*       */         } else {
/* 44512 */           this.annotationBuilder_.setMessage(index, builderForValue.build());
/*       */         } 
/* 44514 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAnnotation(DescriptorProtos.GeneratedCodeInfo.Annotation value) {
/* 44525 */         if (this.annotationBuilder_ == null) {
/* 44526 */           if (value == null) {
/* 44527 */             throw new NullPointerException();
/*       */           }
/* 44529 */           ensureAnnotationIsMutable();
/* 44530 */           this.annotation_.add(value);
/* 44531 */           onChanged();
/*       */         } else {
/* 44533 */           this.annotationBuilder_.addMessage(value);
/*       */         } 
/* 44535 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAnnotation(int index, DescriptorProtos.GeneratedCodeInfo.Annotation value) {
/* 44547 */         if (this.annotationBuilder_ == null) {
/* 44548 */           if (value == null) {
/* 44549 */             throw new NullPointerException();
/*       */           }
/* 44551 */           ensureAnnotationIsMutable();
/* 44552 */           this.annotation_.add(index, value);
/* 44553 */           onChanged();
/*       */         } else {
/* 44555 */           this.annotationBuilder_.addMessage(index, value);
/*       */         } 
/* 44557 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAnnotation(DescriptorProtos.GeneratedCodeInfo.Annotation.Builder builderForValue) {
/* 44569 */         if (this.annotationBuilder_ == null) {
/* 44570 */           ensureAnnotationIsMutable();
/* 44571 */           this.annotation_.add(builderForValue.build());
/* 44572 */           onChanged();
/*       */         } else {
/* 44574 */           this.annotationBuilder_.addMessage(builderForValue.build());
/*       */         } 
/* 44576 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAnnotation(int index, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder builderForValue) {
/* 44588 */         if (this.annotationBuilder_ == null) {
/* 44589 */           ensureAnnotationIsMutable();
/* 44590 */           this.annotation_.add(index, builderForValue.build());
/* 44591 */           onChanged();
/*       */         } else {
/* 44593 */           this.annotationBuilder_.addMessage(index, builderForValue.build());
/*       */         } 
/* 44595 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder addAllAnnotation(Iterable<? extends DescriptorProtos.GeneratedCodeInfo.Annotation> values) {
/* 44607 */         if (this.annotationBuilder_ == null) {
/* 44608 */           ensureAnnotationIsMutable();
/* 44609 */           AbstractMessageLite.Builder.addAll(values, this.annotation_);
/*       */           
/* 44611 */           onChanged();
/*       */         } else {
/* 44613 */           this.annotationBuilder_.addAllMessages(values);
/*       */         } 
/* 44615 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder clearAnnotation() {
/* 44626 */         if (this.annotationBuilder_ == null) {
/* 44627 */           this.annotation_ = Collections.emptyList();
/* 44628 */           this.bitField0_ &= 0xFFFFFFFE;
/* 44629 */           onChanged();
/*       */         } else {
/* 44631 */           this.annotationBuilder_.clear();
/*       */         } 
/* 44633 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public Builder removeAnnotation(int index) {
/* 44644 */         if (this.annotationBuilder_ == null) {
/* 44645 */           ensureAnnotationIsMutable();
/* 44646 */           this.annotation_.remove(index);
/* 44647 */           onChanged();
/*       */         } else {
/* 44649 */           this.annotationBuilder_.remove(index);
/*       */         } 
/* 44651 */         return this;
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder getAnnotationBuilder(int index) {
/* 44663 */         return getAnnotationFieldBuilder().getBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder getAnnotationOrBuilder(int index) {
/* 44675 */         if (this.annotationBuilder_ == null)
/* 44676 */           return this.annotation_.get(index); 
/* 44677 */         return this.annotationBuilder_.getMessageOrBuilder(index);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<? extends DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder> getAnnotationOrBuilderList() {
/* 44690 */         if (this.annotationBuilder_ != null) {
/* 44691 */           return this.annotationBuilder_.getMessageOrBuilderList();
/*       */         }
/* 44693 */         return Collections.unmodifiableList((List)this.annotation_);
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder addAnnotationBuilder() {
/* 44705 */         return getAnnotationFieldBuilder().addBuilder(
/* 44706 */             DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder addAnnotationBuilder(int index) {
/* 44718 */         return getAnnotationFieldBuilder().addBuilder(index, 
/* 44719 */             DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance());
/*       */       }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       public List<DescriptorProtos.GeneratedCodeInfo.Annotation.Builder> getAnnotationBuilderList() {
/* 44731 */         return getAnnotationFieldBuilder().getBuilderList();
/*       */       }
/*       */ 
/*       */       
/*       */       private RepeatedFieldBuilderV3<DescriptorProtos.GeneratedCodeInfo.Annotation, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder, DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder> getAnnotationFieldBuilder() {
/* 44736 */         if (this.annotationBuilder_ == null) {
/* 44737 */           this
/*       */ 
/*       */ 
/*       */ 
/*       */             
/* 44742 */             .annotationBuilder_ = new RepeatedFieldBuilderV3<>(this.annotation_, ((this.bitField0_ & 0x1) != 0), getParentForChildren(), isClean());
/* 44743 */           this.annotation_ = null;
/*       */         } 
/* 44745 */         return this.annotationBuilder_;
/*       */       }
/*       */ 
/*       */       
/*       */       public final Builder setUnknownFields(UnknownFieldSet unknownFields) {
/* 44750 */         return super.setUnknownFields(unknownFields);
/*       */       }
/*       */ 
/*       */ 
/*       */       
/*       */       public final Builder mergeUnknownFields(UnknownFieldSet unknownFields) {
/* 44756 */         return super.mergeUnknownFields(unknownFields);
/*       */       }
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 44766 */     private static final GeneratedCodeInfo DEFAULT_INSTANCE = new GeneratedCodeInfo();
/*       */ 
/*       */     
/*       */     public static GeneratedCodeInfo getDefaultInstance() {
/* 44770 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */     
/*       */     @Deprecated
/* 44774 */     public static final Parser<GeneratedCodeInfo> PARSER = new AbstractParser<GeneratedCodeInfo>()
/*       */       {
/*       */ 
/*       */         
/*       */         public DescriptorProtos.GeneratedCodeInfo parsePartialFrom(CodedInputStream input, ExtensionRegistryLite extensionRegistry) throws InvalidProtocolBufferException
/*       */         {
/* 44780 */           return new DescriptorProtos.GeneratedCodeInfo(input, extensionRegistry);
/*       */         }
/*       */       };
/*       */     
/*       */     public static Parser<GeneratedCodeInfo> parser() {
/* 44785 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public Parser<GeneratedCodeInfo> getParserForType() {
/* 44790 */       return PARSER;
/*       */     }
/*       */ 
/*       */     
/*       */     public GeneratedCodeInfo getDefaultInstanceForType() {
/* 44795 */       return DEFAULT_INSTANCE;
/*       */     }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/*       */     public static interface AnnotationOrBuilder
/*       */       extends MessageOrBuilder
/*       */     {
/*       */       List<Integer> getPathList();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       int getPathCount();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       int getPath(int param2Int);
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       boolean hasSourceFile();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       String getSourceFile();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       ByteString getSourceFileBytes();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       boolean hasBegin();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       int getBegin();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       boolean hasEnd();
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */       
/*       */       int getEnd();
/*       */     }
/*       */   }
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */   
/*       */   public static Descriptors.FileDescriptor getDescriptor() {
/* 44938 */     return descriptor;
/*       */   }
/*       */ 
/*       */   
/*       */   static {
/* 44943 */     String[] descriptorData = { "\n google/protobuf/descriptor.proto\022\017google.protobuf\"G\n\021FileDescriptorSet\0222\n\004file\030\001 \003(\0132$.google.protobuf.FileDescriptorProto\"Û\003\n\023FileDescriptorProto\022\f\n\004name\030\001 \001(\t\022\017\n\007package\030\002 \001(\t\022\022\n\ndependency\030\003 \003(\t\022\031\n\021public_dependency\030\n \003(\005\022\027\n\017weak_dependency\030\013 \003(\005\0226\n\fmessage_type\030\004 \003(\0132 .google.protobuf.DescriptorProto\0227\n\tenum_type\030\005 \003(\0132$.google.protobuf.EnumDescriptorProto\0228\n\007service\030\006 \003(\0132'.google.protobuf.ServiceDescriptorProto\0228\n\textension\030\007 \003(\0132%.google.protobuf.FieldDescriptorProto\022-\n\007options\030\b \001(\0132\034.google.protobuf.FileOptions\0229\n\020source_code_info\030\t \001(\0132\037.google.protobuf.SourceCodeInfo\022\016\n\006syntax\030\f \001(\t\"©\005\n\017DescriptorProto\022\f\n\004name\030\001 \001(\t\0224\n\005field\030\002 \003(\0132%.google.protobuf.FieldDescriptorProto\0228\n\textension\030\006 \003(\0132%.google.protobuf.FieldDescriptorProto\0225\n\013nested_type\030\003 \003(\0132 .google.protobuf.DescriptorProto\0227\n\tenum_type\030\004 \003(\0132$.google.protobuf.EnumDescriptorProto\022H\n\017extension_range\030\005 \003(\0132/.google.protobuf.DescriptorProto.ExtensionRange\0229\n\noneof_decl\030\b \003(\0132%.google.protobuf.OneofDescriptorProto\0220\n\007options\030\007 \001(\0132\037.google.protobuf.MessageOptions\022F\n\016reserved_range\030\t \003(\0132..google.protobuf.DescriptorProto.ReservedRange\022\025\n\rreserved_name\030\n \003(\t\032e\n\016ExtensionRange\022\r\n\005start\030\001 \001(\005\022\013\n\003end\030\002 \001(\005\0227\n\007options\030\003 \001(\0132&.google.protobuf.ExtensionRangeOptions\032+\n\rReservedRange\022\r\n\005start\030\001 \001(\005\022\013\n\003end\030\002 \001(\005\"g\n\025ExtensionRangeOptions\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption*\t\bè\007\020\002\"¼\005\n\024FieldDescriptorProto\022\f\n\004name\030\001 \001(\t\022\016\n\006number\030\003 \001(\005\022:\n\005label\030\004 \001(\0162+.google.protobuf.FieldDescriptorProto.Label\0228\n\004type\030\005 \001(\0162*.google.protobuf.FieldDescriptorProto.Type\022\021\n\ttype_name\030\006 \001(\t\022\020\n\bextendee\030\002 \001(\t\022\025\n\rdefault_value\030\007 \001(\t\022\023\n\013oneof_index\030\t \001(\005\022\021\n\tjson_name\030\n \001(\t\022.\n\007options\030\b \001(\0132\035.google.protobuf.FieldOptions\"¶\002\n\004Type\022\017\n\013TYPE_DOUBLE\020\001\022\016\n\nTYPE_FLOAT\020\002\022\016\n\nTYPE_INT64\020\003\022\017\n\013TYPE_UINT64\020\004\022\016\n\nTYPE_INT32\020\005\022\020\n\fTYPE_FIXED64\020\006\022\020\n\fTYPE_FIXED32\020\007\022\r\n\tTYPE_BOOL\020\b\022\017\n\013TYPE_STRING\020\t\022\016\n\nTYPE_GROUP\020\n\022\020\n\fTYPE_MESSAGE\020\013\022\016\n\nTYPE_BYTES\020\f\022\017\n\013TYPE_UINT32\020\r\022\r\n\tTYPE_ENUM\020\016\022\021\n\rTYPE_SFIXED32\020\017\022\021\n\rTYPE_SFIXED64\020\020\022\017\n\013TYPE_SINT32\020\021\022\017\n\013TYPE_SINT64\020\022\"C\n\005Label\022\022\n\016LABEL_OPTIONAL\020\001\022\022\n\016LABEL_REQUIRED\020\002\022\022\n\016LABEL_REPEATED\020\003\"T\n\024OneofDescriptorProto\022\f\n\004name\030\001 \001(\t\022.\n\007options\030\002 \001(\0132\035.google.protobuf.OneofOptions\"¤\002\n\023EnumDescriptorProto\022\f\n\004name\030\001 \001(\t\0228\n\005value\030\002 \003(\0132).google.protobuf.EnumValueDescriptorProto\022-\n\007options\030\003 \001(\0132\034.google.protobuf.EnumOptions\022N\n\016reserved_range\030\004 \003(\01326.google.protobuf.EnumDescriptorProto.EnumReservedRange\022\025\n\rreserved_name\030\005 \003(\t\032/\n\021EnumReservedRange\022\r\n\005start\030\001 \001(\005\022\013\n\003end\030\002 \001(\005\"l\n\030EnumValueDescriptorProto\022\f\n\004name\030\001 \001(\t\022\016\n\006number\030\002 \001(\005\0222\n\007options\030\003 \001(\0132!.google.protobuf.EnumValueOptions\"\001\n\026ServiceDescriptorProto\022\f\n\004name\030\001 \001(\t\0226\n\006method\030\002 \003(\0132&.google.protobuf.MethodDescriptorProto\0220\n\007options\030\003 \001(\0132\037.google.protobuf.ServiceOptions\"Á\001\n\025MethodDescriptorProto\022\f\n\004name\030\001 \001(\t\022\022\n\ninput_type\030\002 \001(\t\022\023\n\013output_type\030\003 \001(\t\022/\n\007options\030\004 \001(\0132\036.google.protobuf.MethodOptions\022\037\n\020client_streaming\030\005 \001(\b:\005false\022\037\n\020server_streaming\030\006 \001(\b:\005false\"¦\006\n\013FileOptions\022\024\n\fjava_package\030\001 \001(\t\022\034\n\024java_outer_classname\030\b \001(\t\022\"\n\023java_multiple_files\030\n \001(\b:\005false\022)\n\035java_generate_equals_and_hash\030\024 \001(\bB\002\030\001\022%\n\026java_string_check_utf8\030\033 \001(\b:\005false\022F\n\foptimize_for\030\t \001(\0162).google.protobuf.FileOptions.OptimizeMode:\005SPEED\022\022\n\ngo_package\030\013 \001(\t\022\"\n\023cc_generic_services\030\020 \001(\b:\005false\022$\n\025java_generic_services\030\021 \001(\b:\005false\022\"\n\023py_generic_services\030\022 \001(\b:\005false\022#\n\024php_generic_services\030* \001(\b:\005false\022\031\n\ndeprecated\030\027 \001(\b:\005false\022\037\n\020cc_enable_arenas\030\037 \001(\b:\005false\022\031\n\021objc_class_prefix\030$ \001(\t\022\030\n\020csharp_namespace\030% \001(\t\022\024\n\fswift_prefix\030' \001(\t\022\030\n\020php_class_prefix\030( \001(\t\022\025\n\rphp_namespace\030) \001(\t\022\036\n\026php_metadata_namespace\030, \001(\t\022\024\n\fruby_package\030- \001(\t\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption\":\n\fOptimizeMode\022\t\n\005SPEED\020\001\022\r\n\tCODE_SIZE\020\002\022\020\n\fLITE_RUNTIME\020\003*\t\bè\007\020\002J\004\b&\020'\"ò\001\n\016MessageOptions\022&\n\027message_set_wire_format\030\001 \001(\b:\005false\022.\n\037no_standard_descriptor_accessor\030\002 \001(\b:\005false\022\031\n\ndeprecated\030\003 \001(\b:\005false\022\021\n\tmap_entry\030\007 \001(\b\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption*\t\bè\007\020\002J\004\b\b\020\tJ\004\b\t\020\n\"\003\n\fFieldOptions\022:\n\005ctype\030\001 \001(\0162#.google.protobuf.FieldOptions.CType:\006STRING\022\016\n\006packed\030\002 \001(\b\022?\n\006jstype\030\006 \001(\0162$.google.protobuf.FieldOptions.JSType:\tJS_NORMAL\022\023\n\004lazy\030\005 \001(\b:\005false\022\031\n\ndeprecated\030\003 \001(\b:\005false\022\023\n\004weak\030\n \001(\b:\005false\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption\"/\n\005CType\022\n\n\006STRING\020\000\022\b\n\004CORD\020\001\022\020\n\fSTRING_PIECE\020\002\"5\n\006JSType\022\r\n\tJS_NORMAL\020\000\022\r\n\tJS_STRING\020\001\022\r\n\tJS_NUMBER\020\002*\t\bè\007\020\002J\004\b\004\020\005\"^\n\fOneofOptions\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption*\t\bè\007\020\002\"\001\n\013EnumOptions\022\023\n\013allow_alias\030\002 \001(\b\022\031\n\ndeprecated\030\003 \001(\b:\005false\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption*\t\bè\007\020\002J\004\b\005\020\006\"}\n\020EnumValueOptions\022\031\n\ndeprecated\030\001 \001(\b:\005false\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption*\t\bè\007\020\002\"{\n\016ServiceOptions\022\031\n\ndeprecated\030! \001(\b:\005false\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption*\t\bè\007\020\002\"­\002\n\rMethodOptions\022\031\n\ndeprecated\030! \001(\b:\005false\022_\n\021idempotency_level\030\" \001(\0162/.google.protobuf.MethodOptions.IdempotencyLevel:\023IDEMPOTENCY_UNKNOWN\022C\n\024uninterpreted_option\030ç\007 \003(\0132$.google.protobuf.UninterpretedOption\"P\n\020IdempotencyLevel\022\027\n\023IDEMPOTENCY_UNKNOWN\020\000\022\023\n\017NO_SIDE_EFFECTS\020\001\022\016\n\nIDEMPOTENT\020\002*\t\bè\007\020\002\"\002\n\023UninterpretedOption\022;\n\004name\030\002 \003(\0132-.google.protobuf.UninterpretedOption.NamePart\022\030\n\020identifier_value\030\003 \001(\t\022\032\n\022positive_int_value\030\004 \001(\004\022\032\n\022negative_int_value\030\005 \001(\003\022\024\n\fdouble_value\030\006 \001(\001\022\024\n\fstring_value\030\007 \001(\f\022\027\n\017aggregate_value\030\b \001(\t\0323\n\bNamePart\022\021\n\tname_part\030\001 \002(\t\022\024\n\fis_extension\030\002 \002(\b\"Õ\001\n\016SourceCodeInfo\022:\n\blocation\030\001 \003(\0132(.google.protobuf.SourceCodeInfo.Location\032\001\n\bLocation\022\020\n\004path\030\001 \003(\005B\002\020\001\022\020\n\004span\030\002 \003(\005B\002\020\001\022\030\n\020leading_comments\030\003 \001(\t\022\031\n\021trailing_comments\030\004 \001(\t\022!\n\031leading_detached_comments\030\006 \003(\t\"§\001\n\021GeneratedCodeInfo\022A\n\nannotation\030\001 \003(\0132-.google.protobuf.GeneratedCodeInfo.Annotation\032O\n\nAnnotation\022\020\n\004path\030\001 \003(\005B\002\020\001\022\023\n\013source_file\030\002 \001(\t\022\r\n\005begin\030\003 \001(\005\022\013\n\003end\030\004 \001(\005B\001\n\023com.google.protobufB\020DescriptorProtosH\001Z>github.com/golang/protobuf/protoc-gen-go/descriptor;descriptorø\001\001¢\002\003GPBª\002\032Google.Protobuf.Reflection" };
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45097 */     descriptor = Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new Descriptors.FileDescriptor[0]);
/*       */ 
/*       */ 
/*       */     
/* 45101 */     internal_static_google_protobuf_FileDescriptorSet_descriptor = getDescriptor().getMessageTypes().get(0);
/* 45102 */     internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FileDescriptorSet_descriptor, new String[] { "File" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45107 */     internal_static_google_protobuf_FileDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(1);
/* 45108 */     internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FileDescriptorProto_descriptor, new String[] { "Name", "Package", "Dependency", "PublicDependency", "WeakDependency", "MessageType", "EnumType", "Service", "Extension", "Options", "SourceCodeInfo", "Syntax" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45113 */     internal_static_google_protobuf_DescriptorProto_descriptor = getDescriptor().getMessageTypes().get(2);
/* 45114 */     internal_static_google_protobuf_DescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_DescriptorProto_descriptor, new String[] { "Name", "Field", "Extension", "NestedType", "EnumType", "ExtensionRange", "OneofDecl", "Options", "ReservedRange", "ReservedName" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45119 */     internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor = internal_static_google_protobuf_DescriptorProto_descriptor.getNestedTypes().get(0);
/* 45120 */     internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor, new String[] { "Start", "End", "Options" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45125 */     internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor = internal_static_google_protobuf_DescriptorProto_descriptor.getNestedTypes().get(1);
/* 45126 */     internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor, new String[] { "Start", "End" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45131 */     internal_static_google_protobuf_ExtensionRangeOptions_descriptor = getDescriptor().getMessageTypes().get(3);
/* 45132 */     internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_ExtensionRangeOptions_descriptor, new String[] { "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45137 */     internal_static_google_protobuf_FieldDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(4);
/* 45138 */     internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FieldDescriptorProto_descriptor, new String[] { "Name", "Number", "Label", "Type", "TypeName", "Extendee", "DefaultValue", "OneofIndex", "JsonName", "Options" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45143 */     internal_static_google_protobuf_OneofDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(5);
/* 45144 */     internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_OneofDescriptorProto_descriptor, new String[] { "Name", "Options" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45149 */     internal_static_google_protobuf_EnumDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(6);
/* 45150 */     internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumDescriptorProto_descriptor, new String[] { "Name", "Value", "Options", "ReservedRange", "ReservedName" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45155 */     internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor = internal_static_google_protobuf_EnumDescriptorProto_descriptor.getNestedTypes().get(0);
/* 45156 */     internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor, new String[] { "Start", "End" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45161 */     internal_static_google_protobuf_EnumValueDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(7);
/* 45162 */     internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumValueDescriptorProto_descriptor, new String[] { "Name", "Number", "Options" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45167 */     internal_static_google_protobuf_ServiceDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(8);
/* 45168 */     internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_ServiceDescriptorProto_descriptor, new String[] { "Name", "Method", "Options" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45173 */     internal_static_google_protobuf_MethodDescriptorProto_descriptor = getDescriptor().getMessageTypes().get(9);
/* 45174 */     internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_MethodDescriptorProto_descriptor, new String[] { "Name", "InputType", "OutputType", "Options", "ClientStreaming", "ServerStreaming" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45179 */     internal_static_google_protobuf_FileOptions_descriptor = getDescriptor().getMessageTypes().get(10);
/* 45180 */     internal_static_google_protobuf_FileOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FileOptions_descriptor, new String[] { "JavaPackage", "JavaOuterClassname", "JavaMultipleFiles", "JavaGenerateEqualsAndHash", "JavaStringCheckUtf8", "OptimizeFor", "GoPackage", "CcGenericServices", "JavaGenericServices", "PyGenericServices", "PhpGenericServices", "Deprecated", "CcEnableArenas", "ObjcClassPrefix", "CsharpNamespace", "SwiftPrefix", "PhpClassPrefix", "PhpNamespace", "PhpMetadataNamespace", "RubyPackage", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45185 */     internal_static_google_protobuf_MessageOptions_descriptor = getDescriptor().getMessageTypes().get(11);
/* 45186 */     internal_static_google_protobuf_MessageOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_MessageOptions_descriptor, new String[] { "MessageSetWireFormat", "NoStandardDescriptorAccessor", "Deprecated", "MapEntry", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45191 */     internal_static_google_protobuf_FieldOptions_descriptor = getDescriptor().getMessageTypes().get(12);
/* 45192 */     internal_static_google_protobuf_FieldOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FieldOptions_descriptor, new String[] { "Ctype", "Packed", "Jstype", "Lazy", "Deprecated", "Weak", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45197 */     internal_static_google_protobuf_OneofOptions_descriptor = getDescriptor().getMessageTypes().get(13);
/* 45198 */     internal_static_google_protobuf_OneofOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_OneofOptions_descriptor, new String[] { "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45203 */     internal_static_google_protobuf_EnumOptions_descriptor = getDescriptor().getMessageTypes().get(14);
/* 45204 */     internal_static_google_protobuf_EnumOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumOptions_descriptor, new String[] { "AllowAlias", "Deprecated", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45209 */     internal_static_google_protobuf_EnumValueOptions_descriptor = getDescriptor().getMessageTypes().get(15);
/* 45210 */     internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumValueOptions_descriptor, new String[] { "Deprecated", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45215 */     internal_static_google_protobuf_ServiceOptions_descriptor = getDescriptor().getMessageTypes().get(16);
/* 45216 */     internal_static_google_protobuf_ServiceOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_ServiceOptions_descriptor, new String[] { "Deprecated", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45221 */     internal_static_google_protobuf_MethodOptions_descriptor = getDescriptor().getMessageTypes().get(17);
/* 45222 */     internal_static_google_protobuf_MethodOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_MethodOptions_descriptor, new String[] { "Deprecated", "IdempotencyLevel", "UninterpretedOption" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45227 */     internal_static_google_protobuf_UninterpretedOption_descriptor = getDescriptor().getMessageTypes().get(18);
/* 45228 */     internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_UninterpretedOption_descriptor, new String[] { "Name", "IdentifierValue", "PositiveIntValue", "NegativeIntValue", "DoubleValue", "StringValue", "AggregateValue" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45233 */     internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor = internal_static_google_protobuf_UninterpretedOption_descriptor.getNestedTypes().get(0);
/* 45234 */     internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor, new String[] { "NamePart", "IsExtension" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45239 */     internal_static_google_protobuf_SourceCodeInfo_descriptor = getDescriptor().getMessageTypes().get(19);
/* 45240 */     internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_SourceCodeInfo_descriptor, new String[] { "Location" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45245 */     internal_static_google_protobuf_SourceCodeInfo_Location_descriptor = internal_static_google_protobuf_SourceCodeInfo_descriptor.getNestedTypes().get(0);
/* 45246 */     internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_SourceCodeInfo_Location_descriptor, new String[] { "Path", "Span", "LeadingComments", "TrailingComments", "LeadingDetachedComments" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45251 */     internal_static_google_protobuf_GeneratedCodeInfo_descriptor = getDescriptor().getMessageTypes().get(20);
/* 45252 */     internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_GeneratedCodeInfo_descriptor, new String[] { "Annotation" });
/*       */ 
/*       */ 
/*       */ 
/*       */     
/* 45257 */     internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor = internal_static_google_protobuf_GeneratedCodeInfo_descriptor.getNestedTypes().get(0);
/* 45258 */     internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor, new String[] { "Path", "SourceFile", "Begin", "End" });
/*       */   } }


/* Location:              G:\git\codeReviewLog\nginxWebUi\nginxWebUI-3.4.6.jar!\com\google\protobuf\DescriptorProtos.class
 * Java compiler version: 7 (51.0)
 * JD-Core Version:       1.1.3
 */